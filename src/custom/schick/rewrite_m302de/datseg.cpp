/**
 *	Rewrite of DSA1 v3.02_de datasegment
 *	No code is allowed here, only the global data
 */

#include "datseg.h"
#include "common.h"

#if !defined(__BORLANDC__)
namespace M302de {
#endif

#if defined(__BORLANDC__)
char ds[1];
#endif

unsigned char g_unkn_001[1] = { 0x02 }; // ds:0x0094
unsigned short g_cd_init_successful = 0; // ds:0x0095
unsigned char g_unkn_002[4] = { 0x00, 0x00, 0x00, 0x00 }; // ds:0x0097
unsigned short g_cd_audio_repeat = 0; // ds:0x009b
unsigned char g_unkn_003[4] = { 0x00, 0x00, 0x00, 0x00 }; // ds:0x009d
unsigned short g_cd_audio_paused = 0; // ds:0x00a1
unsigned short g_cd_audio_track_bak = 0x7fff; // ds:0x00a3
signed short g_cd_audio_tracklist[15] = { 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x008f, 0x008e, 0x0090, 0x0091, 0x0092, 0x0093, 0x0094, 0x0095, 0x0096, 0x00d5, 0x00d4 }; // ds:0x00a5
unsigned long g_cd_check_skipmagic = 0; // ds:0x00c3
unsigned short g_cd_check_err_countdown = 5; // ds:0x00c7
char g_str_insert_cd[142] = "BITTE LEGEN SIE DIE \xf2SCHICKSALSKLINGE-CD\xf0 IN LAUFWERK %c: EIN. DIESE WIRD BEN\x99TIGT, DA DATEN W\x8eHREND DES SPIELS VON CD GELADEN WERDEN M\x9aSSEN."; // ds:0x00c9
char g_str_repeat[12] = "WIEDERHOLEN"; // ds:0x0157
char g_str_quit[8] = "BEENDEN"; // ds:0x0163
char g_str_cd_exepath[19] = "X:\\DSA\\SCHICKM.EXE"; // ds:0x016b
char g_str_cd_missing[204] = "DIESES PROGRAMM IST OHNE CD-ROM-LAUFWERK NICHT LAUFF\x8eHIG. BITTE INSTALLIEREN SIE DIE GER\x8eTETREIBER F\x9aR DAS CD-ROM-LAUFWERK GEM\x8eSS IHRER CD-ROM-DOKUMENTATION UND STARTEN SIE DIE 'SCHICKSALSKLINGE' ERNEUT."; // ds:0x017e
char g_str_cd_init[37] = "INITIALISIERE CD-ROM IN LAUFWERK %c:"; // ds:0x024a
unsigned char g_unkn_004[1] = { 0x00 }; // ds:0x026f
signed short g_items_noplural[23] = {
	ITEM_LICORICE,
	ITEM_BONBONS,
	ITEM_SHURIN_POISON,
	ITEM_ARAX_POISON,
	ITEM_ANGST_POISON,
	ITEM_SLEEP_POISON,
	ITEM_GOLDLEIM,
	ITEM_LOTUS_POISON,
	ITEM_KUKRIS,
	ITEM_BANNSTAUB,
	ITEM_KROETEN_POISON,
	ITEM_OIL,
	ITEM_EXPURGICUM,
	ITEM_VOMICUM,
	ITEM_ANTIVENOM,
	ITEM_GRIMRING,
	ITEM_LOBPREISUNGEN,
	ITEM_PLATTENZEUG,
	ITEM_LEDERZEUG,
	ITEM_KETTENZEUG,
	ITEM_MIASTHMATICUM,
	ITEM_HYLAILIC_FIRE,
	-1
}; // ds:0x0270
signed short g_items_pluralwords[7] = {
	ITEM_PICKLOCKS,
	ITEM_SHOES,
	ITEM_BOOTS,
	ITEM_LACEUP_SHOE,
	ITEM_BONBONS,
	ITEM_LOBPREISUNGEN,
	-1
}; // ds:0x029e
signed char g_items_genders[254] = { 1, 2, 0, 0, 2, 0, 2, 0, 2, 0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 0, 1, 2, 0, 2, 1, 1, 0, 0, 2, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 2, 1, 2, 2, 2, 0, 0, 2, 2, 1, 1, 1, 1, 1, 2, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 0, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 1, 1, 1, 0, 2, 2, 1, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 0, 2, 1, 2, 1, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 1, 0, 2, 2, 2, 0, 0, 0, 0, 2, 2, 2, 1, 1, 2, 1, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 1, 0, 2, 1, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1 }; // ds:0x02ac
short g_wearable_items_juggler[19] = { 0x0050, 0x000b, 0x0071, 0x0067, 0x0012, 0x0014, 0x000c, 0x0065, 0x006f, 0x0036, 0x006a, 0x0052, 0x0077, 0x0072, 0x009e, 0x00b2, 0x00c5, 0x00c6, -1 }; // ds:0x03aa, array terminated by -1
short g_wearable_items_hunter[19] = { 0x000b, 0x0071, 0x0067, 0x0050, 0x0012, 0x0014, 0x000c, 0x0065, 0x006f, 0x0052, 0x0036, 0x006a, 0x0077, 0x0072, 0x009e, 0x00b2, 0x00c5, 0x00c6, -1 }; // ds:0x03d0, array terminated by -1
short g_wearable_items_warrior[12] = { 0x0039, 0x0037, 0x008d, 0x0090, 0x0038, 0x003a, 0x003b, 0x008f, 0x008e, 0x00c1, 0x00c8, -1 }; // ds:0x03f6, array terminated by -1
short g_wearable_items_estray[18] = { 0x000b, 0x0071, 0x0067, 0x0050, 0x0012, 0x0014, 0x0065, 0x006f, 0x0052, 0x006a, 0x0036, 0x0077, 0x0072, 0x009e, 0x00b2, 0x00c5, 0x00c6, -1 }; // ds:0x040e, array terminated by -1
short g_wearable_items_thorwalian[12] = { 0x0071, 0x0067, 0x0012, 0x0014, 0x0065, 0x006f, 0x006a, 0x0077, 0x0072, 0x009e, 0x00b2, -1 }; // ds:0x0432, array terminated by -1
short g_wearable_items_dwarf[9] = { 0x006f, 0x0077, 0x0012, 0x0072, 0x002c, 0x0067, 0x006a, 0x0068, -1 }; // ds:0x044a, array terminated by -1
short g_wearable_items_witch[64] = { 0x0005, 0x0002, 0x0001, 0x0003, 0x0070, 0x0086, 0x0006, 0x0042, 0x0087, 0x0088, 0x0009, 0x000b, 0x0044, 0x0043, 0x0068, 0x0071, 0x0089, 0x000c, 0x0075, 0x002c, 0x0067, 0x0010, 0x0063, 0x0064, 0x0012, 0x0013, 0x0014, 0x0065, 0x0066, 0x0076, 0x006f, 0x006a, 0x0074, 0x0073, 0x0077, 0x0072, 0x0069, 0x008a, 0x008b, 0x0035, 0x0007, 0x0051, 0x000f, 0x0050, 0x0052, 0x0054, 0x0053, 0x004d, 0x004e, 0x002b, 0x0036, 0x009e, 0x00a1, 0x009f, 0x00a0, 0x00b2, 0x00ac, 0x00b5, 0x00c7, 0x00c5, 0x00c6, 0x00d6, 0x00d8, -1 }; // ds:0x045c, array terminated by -1
short g_wearable_items_druid[57] = { 0x0005, 0x0001, 0x0003, 0x0070, 0x0086, 0x0006, 0x0042, 0x0087, 0x0088, 0x000b, 0x0044, 0x0043, 0x0071, 0x0089, 0x000c, 0x0075, 0x002c, 0x0067, 0x0010, 0x0063, 0x0064, 0x0012, 0x0014, 0x0065, 0x0066, 0x0076, 0x006f, 0x006a, 0x0074, 0x0073, 0x0077, 0x0072, 0x0069, 0x008a, 0x008b, 0x0007, 0x0051, 0x000f, 0x0050, 0x0052, 0x0053, 0x004d, 0x002b, 0x0036, 0x009e, 0x009f, 0x00a1, 0x00a0, 0x00b2, 0x00ac, 0x00b5, 0x00c7, 0x00c5, 0x00c6, 0x00d6, 0x00d8, -1 }; // ds:0x04dc, array terminated by -1
short g_wearable_items_mage[64] = { 0x0005, 0x0002, 0x0001, 0x0003, 0x0070, 0x0086, 0x0006, 0x0042, 0x0087, 0x0088, 0x0009, 0x000b, 0x0044, 0x0043, 0x0068, 0x0071, 0x0089, 0x000c, 0x0075, 0x002c, 0x0067, 0x0010, 0x0063, 0x0064, 0x0012, 0x0013, 0x0014, 0x0065, 0x0066, 0x0076, 0x006f, 0x006a, 0x0074, 0x0073, 0x0077, 0x0072, 0x0069, 0x008a, 0x008b, 0x0035, 0x0007, 0x0051, 0x000f, 0x0050, 0x0052, 0x0054, 0x0053, 0x004d, 0x004e, 0x002b, 0x0036, 0x009e, 0x009f, 0x00a0, 0x00a1, 0x00b2, 0x00ac, 0x00b5, 0x00c7, 0x00c5, 0x00c6, 0x00d6, 0x00d8, -1 }; // ds:0x054e, array terminated by -1
short g_wearable_items_green_elf[15] = { 0x000b, 0x0071, 0x0067, 0x0012, 0x0014, 0x0065, 0x006f, 0x006a, 0x0052, 0x0036, 0x0077, 0x0072, 0x009e, 0x00b2, -1 }; // ds:0x05ce, array terminated by -1
short g_wearable_items_ice_elf[19] = { 0x000b, 0x0071, 0x0067, 0x0012, 0x0014, 0x0065, 0x006f, 0x006a, 0x0052, 0x0036, 0x0077, 0x0072, 0x0050, 0x0053, 0x009e, 0x00b2, 0x00c5, 0x00c6, -1 }; // ds:0x05ec, array terminated by -1
short g_wearable_items_sylvan_elf[19] = { 0x000b, 0x0071, 0x0067, 0x0012, 0x0014, 0x0065, 0x006f, 0x006a, 0x0052, 0x0036, 0x0077, 0x0072, 0x0050, 0x0053, 0x009e, 0x00b2, 0x00c5, 0x00c6, -1 }; // ds:0x0612, array terminated by -1
//short *g_wearable_items_index[12] = {
//    g_wearable_items_juggler,
//    g_wearable_items_hunter,
//    g_wearable_items_warrior,
//    g_wearable_items_estray,
//    g_wearable_items_thorwalian,
//    g_wearable_items_dwarf,
//    g_wearable_items_witch,
//    g_wearable_items_druid,
//    g_wearable_items_mage,
//    g_wearable_items_green_elf,
//    g_wearable_items_ice_elf,
//    g_wearable_items_sylvan_elf
//}; // ds:0x0638, items wearable depending on hero type
long g_wearable_items_index[12] = { 0x14fc03aa, 0x14fc03d0, 0x14fc03f6, 0x14fc040e, 0x14fc0432, 0x14fc044a, 0x14fc045c, 0x14fc04dc, 0x14fc054e, 0x14fc05ce, 0x14fc05ec, 0x14fc0612 }; // ds:0x0638, items wearable depending on hero type; RealPt
struct{char unkn[8];} g_ranged_weapons_table[9] = {
	{ 0x01, 0x00, 0x00, -0x01, -0x63, -0x63, -0x63, 0x06 },
	{ 0x01, 0x01, 0x00, 0x00, -0x01, -0x63, -0x63, 0x06 },
	{ 0x02, 0x01, 0x00, 0x00, 0x00, -0x63, -0x63, 0x07 },
	{ 0x01, 0x01, 0x00, 0x00, 0x00, -0x01, -0x63, 0x04 },
	{ 0x02, 0x02, 0x01, 0x00, 0x00, -0x01, -0x02, 0x04 },
	{ 0x02, 0x02, 0x01, 0x00, -0x01, -0x02, -0x03, 0x03 },
	{ 0x02, 0x02, 0x01, 0x01, 0x00, 0x00, -0x01, 0x04 },
	{ 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x02 },
	{ -0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x0668
struct{char unkn[7];} g_weapons_table[65] = {
	{ 0x01, 0x04, 0x0e, 0x02, -0x01, 0x00, 0x00 },
	{ 0x01, 0x01, 0x0e, 0x06, -0x01, -0x01, -0x03 },
	{ 0x01, 0x03, 0x0f, 0x02, -0x01, 0x00, 0x00 },
	{ 0x01, 0x00, 0x10, 0x04, -0x01, -0x03, -0x04 },
	{ 0x01, 0x03, 0x63, 0x05, 0x01, 0x00, -0x03 },
	{ 0x01, 0x02, 0x0f, 0x01, -0x01, 0x00, -1 },
	{ 0x01, 0x04, 0x0e, 0x05, -0x01, 0x00, -0x03 },
	{ 0x01, 0x03, 0x63, 0x00, 0x03, 0x00, 0x00 },
	{ 0x02, 0x04, 0x0e, 0x03, -0x01, -0x01, -0x04 },
	{ 0x01, 0x06, 0x63, 0x00, 0x05, 0x00, 0x00 },
	{ 0x01, 0x01, 0x0f, 0x03, -0x01, -0x02, -0x03 },
	{ 0x01, 0x03, 0x63, 0x04, 0x02, -0x01, -0x03 },
	{ 0x01, 0x01, 0x63, 0x00, 0x00, 0x00, 0x00 },
	{ 0x02, 0x04, 0x0e, 0x03, -0x01, -0x02, -0x03 },
	{ 0x01, 0x04, 0x63, 0x00, 0x04, 0x00, 0x00 },
	{ 0x01, 0x05, 0x0f, 0x05, -0x01, -0x01, -0x03 },
	{ 0x01, 0x00, 0x10, 0x06, -0x01, -0x02, -0x03 },
	{ 0x01, 0x03, 0x63, 0x04, 0x02, -0x01, -0x04 },
	{ 0x01, 0x03, 0x13, 0x07, -0x01, -0x01, -0x04 },
	{ 0x01, 0x04, 0x0d, 0x01, -0x01, 0x00, -0x02 },
	{ 0x01, 0x03, 0x10, 0x03, -0x01, 0x00, -1 },
	{ 0x01, 0x03, 0x10, 0x03, -0x01, 0x00, -1 },
	{ 0x01, 0x01, 0x0f, 0x05, -0x01, 0x00, -1 },
	{ 0x01, 0x00, 0x13, 0x02, -0x01, 0x00, -0x06 },
	{ 0x01, 0x00, 0x63, 0x04, 0x00, -0x03, -0x04 },
	{ 0x01, 0x02, 0x11, 0x05, -0x01, -0x03, -0x04 },
	{ 0x01, 0x03, 0x11, 0x06, -0x01, -0x03, -0x04 },
	{ 0x02, 0x03, 0x0f, 0x02, -0x01, -0x02, -0x04 },
	{ 0x01, 0x03, 0x0f, 0x03, -0x01, 0x00, -0x03 },
	{ 0x01, 0x04, 0x0f, 0x05, -0x01, -0x01, -0x03 },
	{ 0x01, 0x02, 0x0d, 0x06, -0x01, -0x02, -0x03 },
	{ 0x01, 0x03, 0x12, 0x04, -0x01, -0x01, -1 },
	{ 0x03, 0x03, 0x11, 0x04, -0x01, -0x03, -0x04 },
	{ 0x01, 0x01, 0x10, 0x04, -0x01, -0x02, -0x03 },
	{ 0x01, 0x02, 0x0f, 0x04, -0x01, -0x02, -0x03 },
	{ 0x01, 0x01, 0x10, 0x07, -0x01, -0x03, -0x04 },
	{ 0x01, 0x02, 0x0f, 0x02, -0x01, -0x01, -0x02 },
	{ 0x02, 0x02, 0x0f, 0x03, -0x01, -0x02, -0x02 },
	{ 0x01, 0x03, 0x0f, 0x02, -0x01, 0x00, -1 },
	{ 0x01, 0x05, 0x0e, 0x02, -0x01, -0x01, -0x02 },
	{ 0x01, 0x06, 0x0f, 0x01, -0x01, -0x02, -0x02 },
	{ 0x01, 0x04, 0x10, 0x03, -0x01, -0x01, -0x03 },
	{ 0x01, 0x05, 0x0e, 0x01, -0x01, -0x01, -0x02 },
	{ 0x01, 0x03, 0x10, 0x04, -0x01, 0x00, -1 },
	{ 0x01, 0x04, 0x0e, 0x02, -0x01, 0x00, -1 },
	{ 0x01, 0x06, 0x0f, 0x03, -0x01, -0x01, -0x03 },
	{ 0x01, 0x02, 0x63, 0x00, 0x01, 0x00, 0x00 },
	{ 0x01, 0x03, 0x0d, 0x04, -0x01, 0x00, -0x02 },
	{ 0x01, 0x04, 0x0d, 0x02, -0x01, -0x02, -0x04 },
	{ 0x01, 0x05, 0x0e, 0x02, -0x01, -0x01, -0x03 },
	{ 0x01, 0x04, 0x63, 0x00, -0x01, 0x00, 0x00 },
	{ 0x01, 0x03, 0x0f, 0x02, -0x01, 0x00, 0x00 },
	{ 0x01, 0x03, 0x0f, 0x02, -0x01, 0x00, -1 },
	{ 0x00, 0x00, 0x63, 0x00, -0x01, 0x00, 0x00 },
	{ 0x01, 0x05, 0x0e, -0x05, -0x01, -0x02, -0x03 },
	{ 0x01, 0x0a, 0x0e, -0x63, -0x01, -0x02, -0x08 },
	{ 0x01, 0x02, 0x0f, -0x63, -0x01, 0x02, -1 },
	{ 0x01, 0x03, 0x0f, 0x00, -0x01, 0x00, 0x00 },
	{ 0x02, 0x04, 0x0e, -0x63, -0x01, -0x03, -0x04 },
	{ 0x01, 0x04, 0x0e, -0x63, -0x01, 0x02, 0x02 },
	{ 0x01, 0x04, 0x0e, 0x00, -0x01, 0x02, 0x00 },
	{ 0x01, 0x03, 0x63, 0x05, 0x06, 0x01, 0x01 },
	{ 0x01, 0x00, 0x63, 0x04, 0x07, -0x03, -0x04 },
	{ 0x01, 0x01, 0x0f, -0x63, -0x01, 0x00, 0x00 },
	{ -0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x06b0
struct{char rs, be;} g_armors_table[25] = {
	{ 0x01, 0x00 },
	{ 0x02, 0x01 },
	{ 0x03, 0x02 },
	{ 0x01, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x03, 0x03 },
	{ 0x05, 0x04 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x02, 0x01 },
	{ 0x01, 0x00 },
	{ 0x02, 0x02 },
	{ 0x04, 0x04 },
	{ 0x03, 0x03 },
	{ 0x02, 0x01 },
	{ 0x01, 0x01 },
	{ 0x01, 0x00 },
	{ 0x01, 0x01 },
	{ 0x01, 0x00 },
	{ 0x02, 0x04 },
	{ 0x05, 0x03 },
	{ -0x01, 0x00 }
}; // ds:0x0877
struct{char unkn1, unkn2, handler_no;} g_specialitems_table[14] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x02, 0x05, 0x01 },
	{ 0x00, 0x01, 0x02 },
	{ 0x00, 0x01, 0x03 },
	{ 0x02, 0x03, 0x04 },
	{ 0x00, 0x06, 0x05 },
	{ 0x00, 0x01, 0x06 },
	{ 0x00, 0x01, 0x07 },
	{ 0x00, 0x01, 0x08 },
	{ 0x00, 0x01, 0x09 },
	{ 0x00, 0x01, 0x0a },
	{ 0x00, 0x01, 0x0b },
	{ 0x00, 0x01, 0x0c },
	{ 0x00, 0x01, 0x0d }
}; // ds:0x08a9
signed short g_poison_potions[10] = {
	ITEM_SHURIN_POISON,
	ITEM_ARAX_POISON,
	ITEM_ANGST_POISON,
	ITEM_SLEEP_POISON,
	ITEM_GOLDLEIM,
	ITEM_LOTUS_POISON,
	ITEM_KUKRIS,
	ITEM_BANNSTAUB,
	ITEM_KROETEN_POISON,
	-1
}; // ds:0x08d3
signed short g_herbs_toxic[5] = {
	ITEM_SHURIN,
	ITEM_ALRAUNE,
	ITEM_LOTUS,
	ITEM_KROTENSCHEMEL,
	-1
}; // ds:0x08e7
signed short g_herbs_uneatable[7] = {
	ITEM_ILMENBLATT,
	ITEM_FINAGE_TREE,
	ITEM_JORUGA_ROOT,
	ITEM_KAIRANHALM,
	ITEM_OLGIN_ROOT,
	ITEM_DONF_SPRING,
	-1
}; // ds:0x08f1
signed short g_elixir_potions[8] = {
	ITEM_MU_ELIXIR,
	ITEM_KL_ELIXIR,
	ITEM_CH_ELIXIR,
	ITEM_FF_ELIXIR,
	ITEM_GE_ELIXIR,
	ITEM_IN_ELIXIR,
	ITEM_KK_ELIXIR,
	-1
}; // ds:0x08ff
signed short g_bad_elixirs[8] = {
	ITEM_MU_ELIXIR_BAD,
	ITEM_KL_ELIXIR_BAD,
	ITEM_CH_ELIXIR_BAD,
	ITEM_FF_ELIXIR_BAD,
	ITEM_GE_ELIXIR_BAD,
	ITEM_IN_ELIXIR_BAD,
	ITEM_KK_ELIXIR_BAD,
	-1
}; // ds:0x090f
signed short g_attack_items[3] = {
	ITEM_MIASTHMATICUM,
	ITEM_HYLAILIC_FIRE,
	-1
}; // ds:0x091f
signed char g_monname_genders[78] = { 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x0925
struct{char attrib1, attrib2, attrib3, bonus, cost, ae_mod;} g_staffspell_descriptions[7] = {
	{ 0x01, 0x01, 0x02, 0x01, 0x15, 0x01 },
	{ 0x01, 0x01, 0x02, 0x00, 0x17, 0x00 },
	{ 0x01, 0x02, 0x02, 0x03, 0x13, 0x00 },
	{ 0x01, 0x02, 0x02, 0x04, 0x1b, 0x00 },
	{ 0x00, 0x01, 0x01, 0x63, 0x1e, 0x00 },
	{ 0x00, 0x02, 0x02, 0x63, 0x1a, 0x00 },
	{ 0x00, 0x01, 0x02, 0x63, 0x15, 0x02 }
}; // ds:0x0973
struct{char unkn0, attrib1, attrib2, attrib3, cost, combat, unkn6, target_type, range, fight;} g_spell_descriptions[87] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x01, 0x05, 0x02, -0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x01, 0x01, 0x05, 0x03, -0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x05, 0x02, 0x06, -0x01, 0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x05, 0x02, -0x01, 0x01, 0x00, 0x01, 0x01, 0x00 },
	{ 0x02, 0x00, 0x01, 0x02, -0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x05, 0x01, 0x02, 0x06, 0x0c, 0x01, 0x00, 0x03, 0x00, 0x01 },
	{ 0x03, 0x05, 0x02, 0x02, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x00, 0x00, 0x02, 0x02, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x02, 0x01, 0x05, 0x02, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x00, 0x01, 0x01, 0x02, -0x01, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x02, -0x01, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x01, 0x00, 0x05, 0x02, 0x07, 0x01, 0x00, 0x01, 0x00, 0x01 },
	{ 0x00, 0x00, 0x01, 0x06, 0x06, -0x01, 0x00, 0x00, 0x00, 0x01 },
	{ 0x01, 0x01, 0x05, 0x02, 0x05, -0x01, 0x01, 0x00, 0x00, 0x01 },
	{ 0x02, 0x00, 0x02, 0x02, -0x01, 0x01, 0x01, 0x01, 0x00, 0x01 },
	{ 0x05, 0x01, 0x02, 0x02, 0x08, 0x01, 0x00, 0x03, 0x01, 0x01 },
	{ 0x00, 0x00, 0x01, 0x02, 0x06, 0x01, 0x00, 0x01, 0x01, 0x01 },
	{ 0x01, 0x00, 0x00, 0x02, 0x0d, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x02, 0x0d, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x02, 0x0b, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x00, 0x02, 0x17, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x02, 0x00, 0x02, 0x02, 0x0d, 0x01, 0x02, 0x03, 0x01, 0x00 },
	{ 0x01, 0x00, 0x00, 0x02, 0x0f, 0x01, 0x00, 0x01, 0x00, 0x00 },
	{ 0x00, 0x00, 0x01, 0x02, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x06, 0x06, 0x05, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x05, 0x04, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x01, 0x04, 0x06, 0x07, 0x01, 0x01, 0x02, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x03, 0x06, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x03, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x05, 0x04, 0x04, 0x07, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x01, 0x04, 0x06, 0x05, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x05, 0x02, -0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x02, 0x05, 0x02, 0x03, -0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x02, -0x01, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x04, 0x01, 0x02, 0x06, 0x07, -0x01, 0x01, 0x02, 0x00, 0x00 },
	{ 0x02, 0x00, 0x05, 0x02, -0x01, 0x00, 0x01, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x05, 0x03, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x05, 0x0a, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x05, 0x02, 0x07, 0x01, 0x01, 0x01, 0x01, 0x01 },
	{ 0x05, 0x01, 0x01, 0x05, 0x05, 0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x05, 0x02, 0x05, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x06, 0x05, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x05, 0x02, 0x05, -0x01, 0x01, 0x00, 0x00, 0x01 },
	{ 0x05, 0x05, 0x02, 0x04, 0x05, 0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x02, 0x04, 0x08, 0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x02, 0x01, 0x02, 0x04, 0x06, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x02, 0x01, 0x05, 0x02, 0x04, 0x01, 0x03, 0x00, 0x00, 0x00 },
	{ 0x05, 0x01, 0x05, 0x04, 0x05, 0x01, 0x00, 0x03, 0x01, 0x00 },
	{ 0x01, 0x00, 0x01, 0x06, -0x01, 0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x02, 0x04, 0x05, 0x01, 0x00, 0x03, 0x00, 0x00 },
	{ 0x03, 0x01, 0x04, 0x06, -0x01, 0x01, 0x00, 0x03, 0x01, 0x00 },
	{ 0x01, 0x01, 0x04, 0x03, -0x01, 0x01, 0x00, 0x03, 0x01, 0x00 },
	{ 0x01, 0x02, 0x04, 0x06, 0x05, 0x01, 0x00, 0x03, 0x01, 0x01 },
	{ 0x02, 0x00, 0x05, 0x02, 0x04, 0x01, 0x00, 0x03, 0x01, 0x00 },
	{ 0x01, 0x00, 0x05, 0x02, -0x01, 0x01, 0x01, 0x02, 0x00, 0x00 },
	{ 0x05, 0x05, 0x04, 0x03, 0x05, 0x01, 0x01, 0x02, 0x00, 0x00 },
	{ 0x02, 0x05, 0x05, 0x02, 0x02, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x01, 0x02, 0x0b, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x05, 0x00, 0x05, 0x04, 0x07, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x01, 0x02, 0x07, 0x01, 0x01, 0x02, 0x01, 0x00 },
	{ 0x03, 0x05, 0x04, 0x06, -0x01, 0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x02, 0x02, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x02, 0x00, 0x00, 0x06, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00 },
	{ 0x05, 0x01, 0x02, 0x03, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x03, 0x01, 0x02, 0x04, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x04, 0x01, 0x05, 0x02, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x04, 0x01, 0x02, 0x06, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x02, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x04, 0x00, 0x01, 0x02, 0x07, 0x00, 0x01, 0x02, 0x00, 0x00 },
	{ 0x01, 0x01, 0x04, 0x06, -0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x05, 0x02, 0x06, 0x0d, 0x01, 0x00, 0x03, 0x01, 0x01 },
	{ 0x01, 0x01, 0x05, 0x02, -0x01, 0x01, 0x04, 0x01, 0x00, 0x01 },
	{ 0x03, 0x00, 0x01, 0x06, -0x01, -0x01, 0x01, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x01, 0x04, -0x01, 0x00, 0x01, 0x00, 0x00, 0x00 },
	{ 0x05, 0x01, 0x01, 0x03, 0x05, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x01, 0x02, 0x06, 0x05, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x01, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x03, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x01, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x01, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x01, 0x01, 0x03, 0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x00, 0x01, 0x06, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x01, 0x01, 0x02, -0x01, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x01, 0x02, 0x06, 0x05, -0x01, 0x00, 0x00, 0x00, 0x00 },
	{ -0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x099d
struct{signed char first, length;} g_spells_index[8] = {
	{ 0x01, 0x05 },
	{ 0x06, 0x0c },
	{ 0x12, 0x06 },
	{ 0x18, 0x03 },
	{ 0x1b, 0x06 },
	{ 0x21, 0x05 },
	{ 0x26, 0x07 },
	{ 0x2d, 0x04 }
}; // ds:0x0d03
struct{signed char first, length;} g_spells_index2[4] = {
	{ 0x31, 0x09 },
	{ 0x3a, 0x02 },
	{ 0x3c, 0x10 },
	{ 0x4c, 0x0a }
}; // ds:0x0d13
short g_magic_schools_1[7] = { 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x002a, -1 }; // ds:0x0d1b, array terminated by -1
short g_magic_schools_2[6] = { 0x0007, 0x000c, 0x000e, 0x0010, 0x002c, -1 }; // ds:0x0d29, array terminated by -1
short g_magic_schools_3[7] = { 0x0012, 0x0013, 0x0015, 0x0017, 0x0018, 0x003b, -1 }; // ds:0x0d35, array terminated by -1
short g_magic_schools_4[6] = { 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, -1 }; // ds:0x0d43, array terminated by -1
short g_magic_schools_5[6] = { 0x0021, 0x0023, 0x0024, 0x003d, 0x0046, -1 }; // ds:0x0d4f, array terminated by -1
short g_magic_schools_6[8] = { 0x0026, 0x0027, 0x0029, 0x0028, 0x002a, 0x002b, 0x002c, -1 }; // ds:0x0d5b, array terminated by -1
short g_magic_schools_7[8] = { 0x0031, 0x0033, 0x0034, 0x0035, 0x0036, 0x0039, 0x003e, -1 }; // ds:0x0d6b, array terminated by -1
short g_magic_schools_8[6] = { 0x003c, 0x003e, 0x0048, 0x0049, 0x004b, -1 }; // ds:0x0d7b, array terminated by -1
short g_magic_schools_9[8] = { 0x004c, 0x004e, 0x004f, 0x0050, 0x0052, 0x0053, 0x0054, -1 }; // ds:0x0d87, array terminated by -1
long g_magic_schools_index[9] = { 0x14fc0d1b, 0x14fc0d29, 0x14fc0d35, 0x14fc0d43, 0x14fc0d4f, 0x14fc0d5b, 0x14fc0d6b, 0x14fc0d7b, 0x14fc0d87 }; // ds:0x0d97; RealPt
long g_spell_handlers[86] = { 0x00000000, 0x144f0020, 0x144f0025, 0x144f002a, 0x144f002f, 0x144f0034, 0x144f0039, 0x144f003e, 0x144f0043, 0x144f0048, 0x144f004d, 0x144f0052, 0x144f0057, 0x144f005c, 0x144f0061, 0x144f0066, 0x144f006b, 0x144f0070, 0x144f0075, 0x144f007a, 0x144f007f, 0x144f0084, 0x144f0089, 0x144f008e, 0x144f0093, 0x144f0098, 0x144f009d, 0x144f00a2, 0x144f00a7, 0x144f00ac, 0x144f00b1, 0x144f00b6, 0x144f00bb, 0x144f00c0, 0x144f00c5, 0x144f00ca, 0x144f00cf, 0x144f00d4, 0x144f00d9, 0x144f00de, 0x145e0020, 0x145e0025, 0x145e002a, 0x145e002f, 0x145e0034, 0x145e0039, 0x145e003e, 0x145e0043, 0x145e0048, 0x145e004d, 0x145e0052, 0x145e0057, 0x145e005c, 0x145e0061, 0x145e0066, 0x145e006b, 0x145e0070, 0x145e0075, 0x145e007a, 0x145e007f, 0x14670020, 0x14670025, 0x1467002a, 0x1467002f, 0x14670034, 0x14670039, 0x1467003e, 0x14670043, 0x14670048, 0x1467004d, 0x14670052, 0x14670057, 0x1467005c, 0x14670061, 0x14670066, 0x1467006b, 0x14670070, 0x14670075, 0x1467007a, 0x1467007f, 0x14670084, 0x14670089, 0x1467008e, 0x14670093, 0x14670098, 0x1467009d }; // ds:0x0dbb, function pointer[86]
struct{char cost, mode, unkn1, attrib1, attrib2, attrib3, unkn2, ani_id;} g_mon_spell_descriptions[15] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x14, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x01 },
	{ 0x08, 0x02, 0x00, 0x05, 0x02, 0x02, 0x01, 0x00 },
	{ 0x08, 0x02, 0x00, 0x00, 0x02, 0x02, 0x01, 0x00 },
	{ 0x07, 0x02, 0x00, 0x00, 0x05, 0x02, 0x01, 0x00 },
	{ 0x07, 0x01, 0x00, 0x01, 0x04, 0x06, 0x00, 0x01 },
	{ -0x01, 0x01, 0x00, 0x01, 0x05, 0x02, 0x00, 0x01 },
	{ 0x05, 0x03, 0x01, 0x01, 0x05, 0x04, 0x01, 0x00 },
	{ 0x05, 0x02, 0x01, 0x01, 0x02, 0x04, 0x00, 0x00 },
	{ -0x01, 0x03, 0x01, 0x01, 0x04, 0x06, 0x01, 0x00 },
	{ -0x01, 0x03, 0x01, 0x01, 0x04, 0x03, 0x01, 0x00 },
	{ 0x05, 0x03, 0x01, 0x02, 0x04, 0x06, 0x01, 0x00 },
	{ -0x01, 0x01, 0x00, 0x00, 0x05, 0x02, 0x00, 0x01 },
	{ -0x01, 0x00, 0x00, 0x05, 0x04, 0x06, 0x00, 0x01 },
	{ 0x0d, 0x03, 0x00, 0x05, 0x02, 0x06, 0x01, 0x00 }
}; // ds:0x0f13
struct{char spells[5];} g_mon_spell_repertoire[11] = {
	{ 0x01, 0x07, 0x08, -0x01, -1 },
	{ 0x01, 0x07, 0x03, 0x04, -1 },
	{ 0x01, 0x07, 0x04, 0x02, 0x09 },
	{ 0x09, 0x0e, 0x0a, -0x01, -1 },
	{ 0x09, 0x0a, 0x0c, 0x0d, -1 },
	{ 0x09, 0x0a, 0x0c, 0x0b, 0x07 },
	{ 0x09, 0x0e, 0x07, -0x01, -1 },
	{ 0x09, 0x0e, 0x07, 0x0c, 0x04 },
	{ 0x06, 0x01, 0x08, -0x01, -1 },
	{ 0x06, 0x01, 0x05, 0x07, -1 },
	{ 0x06, 0x0e, 0x05, 0x0c, 0x09 }
}; // ds:0x0f8b
long g_mon_spell_handlers[15] = { 0x00000000, 0x14720025, 0x1472002a, 0x1472002f, 0x14720034, 0x14720039, 0x1472003e, 0x14720043, 0x14720048, 0x1472004d, 0x14720052, 0x14720057, 0x1472005c, 0x14720061, 0x14720066 }; // ds:0x0fc2, function pointer[15]
struct{signed char attrib1, attrib2, attrib3, max_inc;} g_skill_descriptions[52] = {
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x00, 0x01 },
	{ 0x00, 0x04, 0x06, 0x02 },
	{ 0x00, 0x04, 0x06, 0x02 },
	{ 0x00, 0x05, 0x04, 0x02 },
	{ 0x02, 0x04, 0x06, 0x02 },
	{ 0x00, 0x05, 0x04, 0x02 },
	{ 0x00, 0x04, 0x06, 0x02 },
	{ 0x00, 0x06, 0x06, 0x02 },
	{ 0x00, 0x05, 0x04, 0x02 },
	{ 0x02, 0x04, 0x04, 0x02 },
	{ 0x01, 0x05, 0x06, 0x02 },
	{ 0x01, 0x05, 0x02, 0x02 },
	{ 0x05, 0x02, 0x02, 0x02 },
	{ 0x00, 0x01, 0x02, 0x02 },
	{ 0x01, 0x05, 0x02, 0x02 },
	{ 0x00, 0x05, 0x02, 0x02 },
	{ 0x01, 0x05, 0x02, 0x02 },
	{ 0x01, 0x05, 0x05, 0x02 },
	{ 0x01, 0x05, 0x04, 0x02 },
	{ 0x03, 0x04, 0x06, 0x02 },
	{ 0x01, 0x05, 0x03, 0x02 },
	{ 0x01, 0x05, 0x05, 0x02 },
	{ 0x00, 0x01, 0x05, 0x02 },
	{ 0x05, 0x03, 0x04, 0x02 },
	{ 0x00, 0x01, 0x03, 0x03 },
	{ 0x01, 0x01, 0x05, 0x03 },
	{ 0x01, 0x01, 0x05, 0x03 },
	{ 0x01, 0x01, 0x05, 0x03 },
	{ 0x01, 0x05, 0x02, 0x03 },
	{ 0x00, 0x01, 0x02, 0x03 },
	{ 0x01, 0x01, 0x03, 0x03 },
	{ 0x01, 0x01, 0x03, 0x03 },
	{ 0x01, 0x05, 0x02, 0x03 },
	{ 0x00, 0x05, 0x02, 0x02 },
	{ 0x05, 0x02, 0x03, 0x02 },
	{ 0x00, 0x02, 0x03, 0x02 },
	{ 0x00, 0x01, 0x05, 0x02 },
	{ 0x00, 0x01, 0x02, 0x02 },
	{ 0x01, 0x02, 0x03, 0x02 },
	{ 0x01, 0x05, 0x03, 0x02 },
	{ 0x05, 0x03, 0x03, 0x02 },
	{ 0x00, 0x05, 0x03, 0x02 },
	{ 0x01, 0x05, 0x05, 0x01 },
	{ 0x01, 0x05, 0x05, 0x01 }
}; // ds:0x0ffe
struct{signed char first, length;} g_skills_index[7] = {
	{ 0x00, 0x09 },
	{ 0x09, 0x0a },
	{ 0x13, 0x07 },
	{ 0x1a, 0x06 },
	{ 0x20, 0x09 },
	{ 0x29, 0x09 },
	{ 0x32, 0x02 }
}; // ds:0x10ce
char g_nvftab_figures_rangeweapon[264] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x31, 0x32, 0x33, 0x00, 0x01, 0x02, 0x03, 0x34, 0x35, 0x36, 0x37, 0x34, 0x35, 0x36, 0x37, 0x00, 0x01, 0x02, 0x03, 0x38, 0x39, 0x3a, 0x3b, 0x30, 0x31, 0x32, 0x33, 0x00, 0x01, 0x02, 0x03, 0x34, 0x35, 0x36, 0x37, 0x34, 0x35, 0x36, 0x37, 0x00, 0x01, 0x02, 0x03, 0x38, 0x39, 0x3a, 0x3b, 0x30, 0x31, 0x32, 0x33, 0x00, 0x01, 0x02, 0x03, 0x34, 0x35, 0x36, 0x37, 0x2e, 0x2f, 0x30, 0x31, 0x00, 0x01, 0x02, 0x03, 0x32, 0x33, 0x34, 0x35, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x30, 0x31, 0x32, 0x33, 0x00, 0x01, 0x02, 0x03, 0x34, 0x35, 0x36, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x31, 0x32, 0x33, 0x00, 0x01, 0x02, 0x03, 0x34, 0x35, 0x36, 0x37, 0x39, 0x3a, 0x3b, 0x3c, 0x00, 0x01, 0x02, 0x03, 0x3d, 0x3e, 0x3f, 0x40, 0x39, 0x3a, 0x3b, 0x3c, 0x00, 0x01, 0x02, 0x03, 0x3d, 0x3e, 0x3f, 0x40, 0x34, 0x35, 0x36, 0x37, 0x00, 0x01, 0x02, 0x03, 0x38, 0x39, 0x3a, 0x3b, 0x39, 0x3a, 0x3b, 0x3c, 0x00, 0x01, 0x02, 0x03, 0x3d, 0x3e, 0x3f, 0x40, 0x2e, 0x2f, 0x30, 0x31, 0x00, 0x01, 0x02, 0x03, 0x32, 0x33, 0x34, 0x35, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03, 0x39, 0x3a, 0x3b, 0x3c, 0x00, 0x01, 0x02, 0x03, 0x3d, 0x3e, 0x3f, 0x40 }; // ds:0x10dc, by rwt/viewdir
short g_nvftab_figures_unconscious[22] = { 0x0000, 0x0038, 0x003c, 0x0038, 0x003c, 0x0038, 0x0038, 0x003f, 0x0043, 0x0032, 0x0038, 0x0000, 0x0038, 0x0041, 0x0041, 0x003c, 0x0041, 0x0038, 0x003f, 0x0045, 0x0032, 0x0041 }; // ds:0x11e4
struct{char x,y;} g_gfxtab_offsets_unconscious[88] = {
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x07 },
	{ 0x00, 0x07 },
	{ 0x01, 0x06 },
	{ -0x01, 0x05 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x00, 0x05 },
	{ 0x00, 0x05 },
	{ 0x01, 0x07 },
	{ 0x00, 0x07 },
	{ 0x01, 0x06 },
	{ -0x01, 0x05 },
	{ -0x03, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x06 },
	{ 0x00, 0x04 },
	{ 0x01, 0x07 },
	{ -0x01, 0x08 },
	{ 0x00, 0x06 },
	{ -0x01, 0x06 },
	{ 0x01, 0x06 },
	{ -0x01, 0x06 },
	{ 0x00, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x06 },
	{ -0x01, 0x06 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x07 },
	{ 0x00, 0x07 },
	{ 0x01, 0x06 },
	{ -0x01, 0x05 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x00, 0x05 },
	{ 0x00, 0x05 },
	{ 0x01, 0x07 },
	{ 0x00, 0x07 },
	{ 0x01, 0x06 },
	{ -0x01, 0x05 },
	{ -0x03, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x06 },
	{ 0x00, 0x04 },
	{ 0x01, 0x07 },
	{ -0x01, 0x08 },
	{ 0x00, 0x06 },
	{ -0x01, 0x06 },
	{ 0x01, 0x06 },
	{ -0x01, 0x06 },
	{ 0x00, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x06 },
	{ -0x01, 0x06 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 },
	{ 0x01, 0x08 },
	{ 0x00, 0x07 },
	{ 0x01, 0x05 },
	{ 0x00, 0x04 }
}; // ds:0x1210, ; by viewdir
struct{char figure_no, unkn2, unkn3, unkn4, unkn5;} g_gfxtab_figures_main[125] = {
	{ -0x01, -0x01, -0x01, -0x01, -1 },
	{ 0x01, 0x02, 0x03, 0x04, -1 },
	{ 0x05, 0x06, 0x07, 0x08, -1 },
	{ 0x09, 0x0a, 0x0b, 0x0c, -1 },
	{ 0x0d, 0x0e, 0x0f, 0x10, -1 },
	{ 0x11, 0x12, 0x13, 0x14, -1 },
	{ 0x15, 0x16, 0x17, 0x18, -1 },
	{ 0x19, 0x1a, 0x1b, 0x1c, 0x1d },
	{ 0x1e, 0x1f, 0x20, -0x01, 0x21 },
	{ 0x22, 0x23, 0x24, 0x25, 0x26 },
	{ 0x27, 0x28, 0x29, 0x2a, 0x2b },
	{ -0x01, -0x01, -0x01, -0x01, -1 },
	{ 0x2d, 0x2e, 0x2f, 0x30, -1 },
	{ 0x31, 0x32, 0x33, 0x34, -1 },
	{ 0x35, 0x36, 0x37, 0x38, -1 },
	{ 0x39, 0x3a, 0x3b, 0x3c, -1 },
	{ 0x3d, 0x3e, 0x3f, 0x40, -1 },
	{ 0x41, 0x42, 0x43, 0x44, -1 },
	{ 0x45, 0x46, 0x47, 0x48, 0x49 },
	{ 0x4a, 0x4b, 0x4c, -0x01, 0x4d },
	{ 0x4e, 0x4f, 0x50, 0x51, 0x52 },
	{ 0x53, 0x54, 0x55, 0x56, 0x57 },
	{ -0x01, -0x01, -0x01, -0x01, -1 },
	{ 0x59, 0x5a, -0x01, -0x01, -1 },
	{ 0x5b, 0x5c, -0x01, -0x01, -1 },
	{ 0x5d, 0x5e, -0x01, -0x01, -1 },
	{ 0x5f, 0x60, -0x01, -0x01, -1 },
	{ 0x61, 0x62, -0x01, -0x01, -1 },
	{ 0x63, 0x64, -0x01, -0x01, -1 },
	{ 0x65, 0x66, -0x01, -0x01, -1 },
	{ 0x67, 0x68, -0x01, -0x01, -1 },
	{ 0x69, 0x6a, -0x01, -0x01, -1 },
	{ 0x6b, 0x6c, -0x01, -0x01, -1 },
	{ 0x6d, 0x6e, -0x01, -0x01, -1 },
	{ 0x6f, 0x70, -0x01, -0x01, -1 },
	{ 0x71, 0x72, -0x01, -0x01, -1 },
	{ 0x73, 0x74, -0x01, -0x01, -1 },
	{ 0x75, 0x76, -0x01, -0x01, -1 },
	{ 0x77, 0x78, -0x01, -0x01, -1 },
	{ 0x79, 0x7a, -0x01, -0x01, -1 },
	{ 0x7b, 0x7c, -0x01, -0x01, -1 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x12c0
struct{char x,y;} g_gfxtab_offsets_main[625] = {
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x06, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x03, 0x0f },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ -0x08, 0x02 },
	{ 0x08, 0x03 },
	{ 0x07, 0x07 },
	{ -0x07, 0x08 },
	{ 0x03, 0x05 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x01, 0x00 },
	{ 0x01, 0x00 },
	{ 0x01, 0x06 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ -0x01, 0x01 },
	{ -0x01, 0x00 },
	{ -0x04, 0x03 },
	{ 0x00, 0x00 },
	{ -0x02, 0x00 },
	{ 0x00, 0x01 },
	{ 0x00, 0x01 },
	{ -0x05, 0x05 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x04, 0x05 },
	{ 0x00, 0x01 },
	{ 0x03, 0x00 },
	{ 0x06, 0x06 },
	{ -0x06, 0x06 },
	{ 0x05, 0x02 },
	{ -0x08, 0x02 },
	{ 0x08, 0x03 },
	{ 0x07, 0x07 },
	{ -0x07, 0x08 },
	{ 0x03, 0x05 },
	{ 0x00, 0x01 },
	{ 0x03, 0x00 },
	{ 0x06, 0x06 },
	{ -0x06, 0x06 },
	{ 0x05, 0x02 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 },
	{ 0x00, 0x00 }
}; // ds:0x1531, ; by viewdir+dead
short g_nvftab_figures_dead[22] = { 0x0000, 0x002f, 0x0033, 0x002f, 0x0033, 0x002f, 0x002d, 0x003e, 0x0042, 0x0031, 0x002f, 0x0000, 0x002f, 0x0038, 0x0038, 0x0033, 0x0038, 0x002d, 0x003e, 0x0044, 0x0031, 0x0038 }; // ds:0x1a13
unsigned char g_unkn_005[38] = { 0x00, 0x00, 0x2c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3c, 0x00, 0x32, 0x00, 0x38, 0x00, 0x48, 0x00, 0x38, 0x00, 0x2c, 0x00, 0x30, 0x00, 0x44, 0x00, 0x3c, 0x00, 0x38, 0x00, 0x3c, 0x00, 0x40, 0x00, 0x48, 0x00, 0x3c, 0x00, 0x48, 0x00 }; // ds:0x1a3f
short g_gfx_ani_descriptions_01[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x0028, 0x0029, 0x002a, 0x002b, 0x0044, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1a65
short g_gfx_ani_descriptions_02[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x002c, 0x002d, 0x002e, 0x002f, 0x0045, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1ae7
short g_gfx_ani_descriptions_03[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x0028, 0x0029, 0x002a, 0x002b, 0x0046, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1b69
short g_gfx_ani_descriptions_04[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x002c, 0x002d, 0x002e, 0x002f, 0x0045, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1beb
short g_gfx_ani_descriptions_05[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x0028, 0x0029, 0x002a, 0x002b, 0x0046, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1c6d
short g_gfx_ani_descriptions_06[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x000c, 0x000d, 0x000e, 0x000f, 0x001c, 0x001d, 0x001e, 0x001f, 0x0030, 0x0031, 0x0032, 0x0033, 0x0047, 0x0051, 0x0052, 0x0053, 0x0054, 0x005f, 0x0060, 0x0061, 0x0062, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a4, 0x00a5, 0x00a6, 0x00a7, -0x0001, -0x0001, -0x0001, -0x0001, 0x0076, 0x0077, 0x0078, 0x0079, 0x007e, 0x007f, 0x0080, 0x0081, 0x008c, 0x008d, 0x008e, 0x008f, 0x0098, 0x0099, 0x009a, 0x009b, 0x00ac, 0x00ad, 0x00ae, 0x00af, 0x00bc, 0x00bd, 0x00be, 0x00bf }; // ds:0x1cef
short g_gfx_ani_descriptions_07[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0010, 0x0011, 0x0012, 0x0013, 0x0020, 0x0021, 0x0022, 0x0023, 0x0034, 0x0035, 0x0036, 0x0037, 0x0048, 0x0055, 0x0056, 0x004f, 0x0050, 0x0063, 0x005c, 0x0064, 0x0065, 0x00c0, 0x00c1, 0x00c2, 0x00c3, -0x0001, -0x0001, -0x0001, -0x0001, 0x00c0, 0x00c1, 0x00c2, 0x00c3, 0x006e, 0x006f, 0x0070, 0x0071, 0x0082, 0x0083, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00b0, 0x00b1, 0x00b2, 0x00b3, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x1d71
short g_gfx_ani_descriptions_08[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0014, 0x0015, 0x0016, 0x0017, 0x0024, 0x0025, 0x0026, 0x0027, 0x0038, 0x0039, 0x003a, 0x003b, 0x0049, 0x0057, 0x0058, 0x0059, 0x005a, 0x0066, 0x0067, 0x0068, 0x0069, 0x00c4, 0x00c5, 0x00c6, 0x00c7, -0x0001, -0x0001, -0x0001, -0x0001, 0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x0072, 0x0073, 0x0074, 0x0075, 0x007a, 0x007b, 0x007c, 0x007d, 0x0090, 0x0091, 0x0092, 0x0093, 0x0098, 0x0099, 0x009a, 0x009b, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x1df3
short g_gfx_ani_descriptions_09[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0014, 0x0015, 0x0016, 0x0017, 0x0024, 0x0025, 0x0026, 0x0027, 0x003c, 0x003d, 0x003e, 0x003f, 0x004a, 0x0057, 0x0058, 0x0059, 0x005a, 0x006a, 0x006b, 0x006c, 0x006d, 0x00c4, 0x00c5, 0x00c6, 0x00c7, -0x0001, -0x0001, -0x0001, -0x0001, 0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x0076, 0x0077, 0x0078, 0x0079, 0x0084, 0x0085, 0x0086, 0x0087, 0x0094, 0x0095, 0x0096, 0x0097, 0x009c, 0x009d, 0x009e, 0x009f, 0x00b4, 0x00b5, 0x00b6, 0x00b7, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x1e75
short g_gfx_ani_descriptions_10[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x0028, 0x0029, 0x002a, 0x002b, 0x0044, 0x004d, 0x004e, 0x004f, 0x0050, 0x005b, 0x005c, 0x005d, 0x005e, 0x00c4, 0x00c5, 0x00c6, 0x00c7, 0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x006e, 0x006f, 0x0070, 0x0071, 0x007a, 0x007b, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1ef7
short g_gfx_ani_descriptions_11[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0010, 0x0011, 0x0012, 0x0013, 0x0020, 0x0021, 0x0022, 0x0023, 0x0034, 0x0035, 0x0036, 0x0037, 0x004b, 0x0055, 0x0056, 0x004f, 0x0050, 0x0063, 0x005c, 0x005d, 0x0065, -0x0001, -0x0001, -0x0001, -0x0001, 0x00a0, 0x00a1, 0x00a2, 0x00a3, -0x0001, -0x0001, -0x0001, -0x0001, 0x006e, 0x006f, 0x0070, 0x0071, 0x0082, 0x0083, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00b0, 0x00b1, 0x00b2, 0x00b3, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x1f79
short g_gfx_ani_descriptions_12[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0010, 0x0011, 0x0012, 0x0013, 0x0020, 0x0021, 0x0022, 0x0023, 0x0040, 0x0041, 0x0042, 0x0043, 0x004c, 0x0055, 0x0056, 0x004f, 0x0050, 0x0063, 0x005c, 0x0064, 0x0065, 0x00cc, 0x00cd, 0x00ce, 0x00cf, -0x0001, -0x0001, -0x0001, -0x0001, 0x00d0, 0x00d1, 0x00d2, 0x00d3, 0x0072, 0x0073, 0x0074, 0x0075, 0x0082, 0x0083, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x1ffb
short g_gfx_ani_descriptions_13[65] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0010, 0x0011, 0x0012, 0x0013, 0x0020, 0x0021, 0x0022, 0x0023, 0x0034, 0x0035, 0x0036, 0x0037, 0x004b, 0x0055, 0x0056, 0x004f, 0x0050, 0x0063, 0x005c, 0x005d, 0x0065, 0x00c4, 0x00c5, 0x00c6, 0x00c7, 0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x006e, 0x006f, 0x0070, 0x0071, 0x0082, 0x0083, 0x007c, 0x007d, 0x0088, 0x0089, 0x008a, 0x008b, 0x0098, 0x0099, 0x009a, 0x009b, 0x00b0, 0x00b1, 0x00b2, 0x00b3, 0x00b8, 0x00b9, 0x00ba, 0x00bb }; // ds:0x207d
short g_gfx_ani_descriptions_14[37] = { 0x00d4, 0x00d5, 0x00d6, 0x00d7, 0x00d8, 0x00d9, 0x00da, 0x00db, 0x0106, 0x0107, 0x0108, 0x0109, 0x0126, 0x0127, 0x0128, 0x0129, 0x01b6, 0x01b7, 0x01b8, 0x01b9, 0x01dd, 0x0146, 0x0147, 0x0148, 0x0149, 0x017a, 0x017b, 0x017c, 0x017d, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x20ff
short g_gfx_ani_descriptions_15[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010a, 0x010b, 0x010c, 0x010d, 0x012a, 0x012b, 0x012c, 0x012d, 0x01ba, 0x01bb, 0x01bc, 0x01bd, 0x01de, 0x014a, 0x014b, 0x014c, 0x014d, 0x017e, 0x017f, 0x0180, 0x0181, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2149
short g_gfx_ani_descriptions_16[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010e, 0x010f, 0x0110, 0x0111, 0x012e, 0x012f, 0x0130, 0x0131, 0x01be, 0x01bf, 0x01c0, 0x01c1, 0x01df, 0x014e, 0x014f, 0x0150, 0x0151, 0x0182, 0x0183, 0x0184, 0x0185, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2193
short g_gfx_ani_descriptions_17[37] = { 0x00e4, 0x00e5, 0x00e6, 0x00e7, 0x00e8, 0x00e9, 0x00ea, 0x00eb, 0x0112, 0x0113, 0x0114, 0x0115, 0x0132, 0x0133, 0x0134, 0x0135, 0x01c2, 0x01c3, 0x01c4, 0x01c5, 0x01e0, 0x0152, 0x0153, 0x0154, 0x0155, 0x0186, 0x0187, 0x0188, 0x0189, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x21dd
short g_gfx_ani_descriptions_18[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010a, 0x010b, 0x010c, 0x010d, 0x012a, 0x012b, 0x012c, 0x012d, 0x01ba, 0x01bb, 0x01bc, 0x01bd, 0x01e2, 0x014a, 0x014b, 0x014c, 0x014d, 0x018e, 0x018f, 0x0190, 0x0191, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2227
short g_gfx_ani_descriptions_19[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010a, 0x010b, 0x010c, 0x010d, 0x012a, 0x012b, 0x012c, 0x012d, 0x01ba, 0x01bb, 0x01bc, 0x01bd, 0x01e1, 0x0156, 0x0157, 0x0158, 0x0159, 0x018a, 0x018b, 0x018c, 0x018d, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2271
short g_gfx_ani_descriptions_20[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010a, 0x010b, 0x010c, 0x010d, 0x012a, 0x012b, 0x012c, 0x012d, 0x01ba, 0x01bb, 0x01bc, 0x01bd, 0x01de, 0x015a, 0x015b, 0x015c, 0x015d, 0x0192, 0x0193, 0x0194, 0x0195, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x22bb
short g_gfx_ani_descriptions_21[37] = { 0x00ec, 0x00ed, 0x00ee, 0x00ef, 0x00f0, 0x00f1, 0x00f2, 0x00f3, 0x0116, 0x0117, 0x0118, 0x0119, 0x0136, 0x0137, 0x0138, 0x0139, 0x01c6, 0x01c7, 0x01c8, 0x01c9, 0x01e3, 0x015e, 0x015f, 0x0160, 0x0161, 0x0196, 0x0197, 0x0198, 0x0199, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2305
short g_gfx_ani_descriptions_22[37] = { 0x00dc, 0x00dd, 0x00f4, 0x00f5, 0x00f6, 0x00e1, 0x00e2, 0x00f7, 0x011a, 0x011b, 0x011c, 0x011d, 0x013a, 0x013b, 0x013c, 0x013d, 0x01ca, 0x01cb, 0x01cc, 0x01cd, 0x01e4, 0x0162, 0x0163, 0x0164, 0x0165, 0x019a, 0x019b, 0x019c, 0x019d, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x234f
short g_gfx_ani_descriptions_23[37] = { 0x00f8, 0x00f9, 0x00de, 0x00fa, 0x00fb, 0x00fc, 0x00fd, 0x00e3, 0x011e, 0x011f, 0x0120, 0x0121, 0x013e, 0x013f, 0x0140, 0x0141, 0x01ca, 0x01cb, 0x01cc, 0x01cd, 0x01e5, 0x0166, 0x0167, 0x0168, 0x0169, 0x019e, 0x019f, 0x01a0, 0x01a1, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x2399
short g_gfx_ani_descriptions_24[37] = { 0x00dc, 0x00dd, 0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x010a, 0x010b, 0x010c, 0x010d, 0x012a, 0x012b, 0x012c, 0x012d, 0x01ba, 0x01ce, 0x01cf, 0x01d0, 0x01e6, 0x016a, 0x016b, 0x016c, 0x016d, 0x01a2, 0x01a3, 0x01a4, 0x01a5, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x23e3
short g_gfx_ani_descriptions_25[37] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x01d1, 0x01d2, 0x01d3, 0x01d4, 0x01e2, 0x016e, 0x016f, 0x0170, 0x0171, 0x01a6, 0x01a7, 0x01a8, 0x01a9, -0x0001, -0x0001, -0x0001, -0x0001, 0x01ea, 0x01eb, 0x01ec, 0x01ed }; // ds:0x242d
short g_gfx_ani_descriptions_26[37] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b, 0x0018, 0x0019, 0x001a, 0x001b, 0x01d1, 0x01d2, 0x01d3, 0x01d4, 0x01e7, 0x016e, 0x016f, 0x0170, 0x0171, 0x01aa, 0x01ab, 0x01ac, 0x01ad, -0x0001, -0x0001, -0x0001, -0x0001, 0x01ee, 0x01ef, 0x01f0, 0x01f1 }; // ds:0x2477
short g_gfx_ani_descriptions_27[37] = { 0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0014, 0x0015, 0x0016, 0x0017, 0x0024, 0x0025, 0x0026, 0x0027, 0x01d5, 0x01d6, 0x01d7, 0x01d8, 0x01e8, 0x0172, 0x0173, 0x0174, 0x0175, 0x01ae, 0x01af, 0x01b0, 0x01b1, 0x01f2, 0x01f3, 0x01f4, 0x01f5, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x24c1
short g_gfx_ani_descriptions_28[37] = { 0x00fe, 0x00ff, 0x0100, 0x0101, 0x0102, 0x0103, 0x0104, 0x0105, 0x0122, 0x0123, 0x0124, 0x0125, 0x0142, 0x0143, 0x0144, 0x0145, 0x01d9, 0x01da, 0x01db, 0x01dc, 0x01e9, 0x0176, 0x0177, 0x0178, 0x0179, 0x01b2, 0x01b3, 0x01b4, 0x01b5, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x250b
long g_gfx_ani_index[41] = { 0x00000000, 0x14fc1a65, 0x14fc1ae7, 0x14fc1b69, 0x14fc1beb, 0x14fc1c6d, 0x14fc1cef, 0x14fc1d71, 0x14fc1df3, 0x14fc1e75, 0x14fc1ef7, 0x00000000, 0x14fc1a65, 0x14fc1f79, 0x14fc1f79, 0x14fc1beb, 0x14fc1f79, 0x14fc1cef, 0x14fc1d71, 0x14fc1ffb, 0x14fc1e75, 0x14fc207d, 0x00000000, 0x14fc20ff, 0x14fc2149, 0x14fc2149, 0x14fc2193, 0x14fc21dd, 0x14fc2227, 0x14fc2271, 0x14fc22bb, 0x14fc2305, 0x14fc234f, 0x14fc2399, 0x14fc23e3, 0x14fc242d, 0x14fc2477, 0x14fc24c1, 0x14fc250b, 0x14fc21dd, 0x14fc250b }; // ds:0x2555; RealPt
char g_two_fielded_sprite_id[5] = { 0x1b, 0x26, 0x28, 0x27, -1 }; // ds:0x25f9
unsigned short g_weaponani_table[72] = { 0x0000, 0x0003, 0x0006, 0x0009, 0x000c, 0x000f, 0x0012, 0x0015, 0x0001, 0x0004, 0x0007, 0x000a, 0x000d, 0x0010, 0x0013, 0x0016, 0x0002, 0x0005, 0x0008, 0x000b, 0x000e, 0x0011, 0x0014, 0x0017, 0x0018, 0x001b, 0x001e, 0x0021, 0x0024, 0x0027, 0x002a, 0x002d, 0x0019, 0x001c, 0x001f, 0x0022, 0x0025, 0x0028, 0x002b, 0x002e, 0x001a, 0x001d, 0x0020, 0x0023, 0x0026, 0x0029, 0x002c, 0x002f, 0x0030, 0x0033, 0x0036, 0x0039, 0x000c, 0x003c, 0x0012, 0x003f, 0x0031, 0x0034, 0x0037, 0x003a, 0x000d, 0x003d, 0x0013, 0x0040, 0x0032, 0x0035, 0x0038, 0x003b, 0x000e, 0x003e, 0x0014, 0x0041 }; // ds:0x25fe
signed char g_weaponani_types[22] = { 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0 }; // ds:0x268e
signed char g_food_message_shown[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x26a4
char g_ems_enabled = 0; // ds:0x26ab
signed char g_fig_initiative = 0; // ds:0x26ac, 0 = random, 1 = enemies, 2 = heroes (attack first)
signed short g_fig_msg_counter = 0; // ds:0x26ad
unsigned short g_always_one = 0; // ds:0x26af, writeonly (1)
unsigned short g_fig_continue_print = 0; // ds:0x26b1
unsigned short g_fig_char_pic = 0; // ds:0x26b3
unsigned short g_fig_enemy_pic = 0; // ds:0x26b5
unsigned short g_gui_entering_savegame = 0; // ds:0x26b7
unsigned short g_check_disease = 0; // ds:0x26b9
unsigned short g_check_poison = 0; // ds:0x26bb
unsigned short g_text_file_index = 0xffff; // ds:0x26bd
signed short g_tx_file_index = -1; // ds:0x26bf, index of file stored with load_tx
unsigned short g_fig_discard = 0; // ds:0x26c1, , whether to discard the fight data after the fight
struct{unsigned char r,g,b;} g_palette_allblack2[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 }
}; // ds:0x26c3
struct{unsigned char r,g,b;} g_palette_unknown1[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x29 },
	{ 0x00, 0x00, 0x0e },
	{ 0x26, 0x1a, 0x12 },
	{ 0x26, 0x16, 0x0e },
	{ 0x26, 0x12, 0x06 },
	{ 0x22, 0x0e, 0x02 },
	{ 0x1e, 0x0a, 0x00 },
	{ 0x1a, 0x06, 0x00 },
	{ 0x12, 0x02, 0x00 },
	{ 0x0e, 0x00, 0x00 },
	{ 0x06, 0x00, 0x00 },
	{ 0x02, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x22, 0x22, 0x22 },
	{ 0x1a, 0x1a, 0x1a },
	{ 0x16, 0x16, 0x16 },
	{ 0x12, 0x12, 0x12 },
	{ 0x0a, 0x0a, 0x0a },
	{ 0x06, 0x06, 0x06 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x20, 0x00 },
	{ 0x00, 0x0e, 0x00 },
	{ 0x26, 0x22, 0x00 },
	{ 0x1e, 0x16, 0x00 },
	{ 0x12, 0x0a, 0x00 },
	{ 0x26, 0x02, 0x00 },
	{ 0x1a, 0x00, 0x00 },
	{ 0x0e, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x26, 0x26, 0x26 }
}; // ds:0x2723
struct{unsigned char r,g,b;} g_palette_fight1[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x3c, 0x2c, 0x24 },
	{ 0x3c, 0x28, 0x1c },
	{ 0x34, 0x20, 0x18 },
	{ 0x28, 0x18, 0x14 },
	{ 0x20, 0x14, 0x10 },
	{ 0x18, 0x0c, 0x08 },
	{ 0x10, 0x08, 0x08 },
	{ 0x0c, 0x04, 0x04 },
	{ 0x34, 0x34, 0x34 },
	{ 0x28, 0x28, 0x28 },
	{ 0x20, 0x20, 0x20 },
	{ 0x18, 0x18, 0x18 },
	{ 0x14, 0x14, 0x14 },
	{ 0x10, 0x10, 0x10 },
	{ 0x0c, 0x0c, 0x0c },
	{ 0x08, 0x08, 0x08 },
	{ 0x14, 0x0c, 0x08 },
	{ 0x00, 0x00, 0x00 },
	{ 0x18, 0x14, 0x3c },
	{ 0x14, 0x00, 0x00 },
	{ 0x1c, 0x00, 0x00 },
	{ 0x24, 0x00, 0x00 },
	{ 0x2c, 0x00, 0x00 },
	{ 0x3c, 0x00, 0x00 },
	{ 0x1c, 0x10, 0x10 },
	{ 0x00, 0x1c, 0x00 },
	{ 0x00, 0x28, 0x00 },
	{ 0x00, 0x04, 0x20 },
	{ 0x2c, 0x2c, 0x0c },
	{ 0x38, 0x38, 0x10 },
	{ 0x3c, 0x3c, 0x3c }
}; // ds:0x2783
struct{unsigned char r,g,b;} g_palette_special[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x38, 0x38, 0x38 },
	{ 0x34, 0x34, 0x34 },
	{ 0x30, 0x30, 0x30 },
	{ 0x2c, 0x2c, 0x2c },
	{ 0x28, 0x28, 0x28 },
	{ 0x24, 0x24, 0x24 },
	{ 0x20, 0x20, 0x20 },
	{ 0x1c, 0x1c, 0x1c },
	{ 0x18, 0x18, 0x18 },
	{ 0x14, 0x14, 0x14 },
	{ 0x10, 0x10, 0x10 },
	{ 0x0c, 0x0c, 0x0c },
	{ 0x08, 0x08, 0x08 },
	{ 0x04, 0x04, 0x04 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x3c, 0x08 },
	{ 0x3c, 0x30, 0x28 },
	{ 0x3c, 0x2c, 0x28 },
	{ 0x2c, 0x1c, 0x18 },
	{ 0x24, 0x14, 0x10 },
	{ 0x1c, 0x10, 0x0c },
	{ 0x14, 0x08, 0x08 },
	{ 0x0c, 0x04, 0x04 },
	{ 0x0c, 0x08, 0x00 },
	{ 0x2c, 0x00, 0x00 },
	{ 0x10, 0x14, 0x3c },
	{ 0x00, 0x08, 0x38 },
	{ 0x00, 0x08, 0x34 },
	{ 0x00, 0x00, 0x18 },
	{ 0x3c, 0x3c, 0x00 },
	{ 0x3c, 0x3c, 0x3c }
}; // ds:0x27e3
unsigned char g_unkn_006[2] = { 0x32, 0x00 }; // ds:0x2843
signed char g_pp20_index = -1; // ds:0x2845, archive file index of current pp20
signed short g_request_refresh = 0; // ds:0x2846
struct{char unkn[32]; unsigned short mask[16];} g_default_mouse_cursor = { { -0x01, 0x7f, -0x01, -0x61, -0x01, -0x79, -0x01, -0x3f, 0x7f, -0x40, 0x1f, -0x20, 0x07, -0x20, 0x0f, -0x10, 0x1f, -0x10, 0x0f, -0x08, -0x79, -0x08, -0x3d, -0x03, -0x1d, -0x01, -0x09, -0x01, -0x01, -0x01, -0x01, -1 }, { 0x8000, 0x6000, 0x7800, 0x3e00, 0x3f80, 0x1fe0, 0x1ff8, 0x0ff0, 0x0fe0, 0x07f0, 0x0778, 0x023c, 0x001c, 0x0008, 0x0000, 0x0000 } }; // ds:0x2848
struct{char unkn[32]; unsigned short mask[16];} g_cursor_arrow_up = { { -0x01, -0x01, -0x01, -0x01, 0x7f, -0x01, 0x3f, -0x02, 0x1f, -0x04, 0x0f, -0x08, 0x07, -0x10, 0x03, -0x20, 0x1f, -0x04, 0x1f, -0x04, 0x1f, -0x04, 0x1f, -0x04, 0x1f, -0x04, 0x1f, -0x04, -0x01, -0x01, -0x01, -1 }, { 0x0000, 0x0000, 0x0080, 0x01c0, 0x03e0, 0x07f0, 0x0ff8, 0x1ffc, 0x03e0, 0x03e0, 0x03e0, 0x03e0, 0x03e0, 0x03e0, 0x0000, 0x0000 } }; // ds:0x2888
struct{char unkn[32]; unsigned short mask[16];} g_cursor_arrow_down = { { -0x01, -0x01, -0x01, -0x01, 0x3f, -0x08, 0x3f, -0x08, 0x3f, -0x08, 0x3f, -0x08, 0x3f, -0x08, 0x3f, -0x08, 0x07, -0x40, 0x0f, -0x20, 0x1f, -0x10, 0x3f, -0x08, 0x7f, -0x04, -0x01, -0x02, -0x01, -0x01, -0x01, -1 }, { 0x0000, 0x0000, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x07c0, 0x3ff8, 0x1ff0, 0x0fe0, 0x07c0, 0x0380, 0x0100, 0x0000, 0x0000 } }; // ds:0x28c8
struct{char unkn[32]; unsigned short mask[16];} g_cursor_arrow_left = { { -0x01, -0x01, -0x01, -0x01, -0x01, -0x03, -0x01, -0x07, -0x01, -0x0f, 0x1f, -0x20, 0x07, -0x40, 0x03, -0x20, -0x7d, -0x0f, -0x3f, -0x07, -0x3f, -0x03, -0x3f, -0x01, -0x3f, -0x01, -0x3f, -0x01, -0x01, -0x01, -0x01, -1 }, { 0x0000, 0x0000, 0x0200, 0x0600, 0x0e00, 0x1fe0, 0x3ff8, 0x1ffc, 0x0e7c, 0x063e, 0x023e, 0x003e, 0x003e, 0x003e, 0x0000, 0x0000 } }; // ds:0x2908
struct{char unkn[32]; unsigned short mask[16];} g_cursor_arrow_right = { { -0x01, -0x01, -0x01, -0x01, -0x41, -0x01, -0x61, -0x01, -0x71, -0x01, 0x07, -0x08, 0x03, -0x20, 0x07, -0x40, -0x71, -0x3f, -0x61, -0x7d, -0x41, -0x7d, -0x01, -0x7d, -0x01, -0x7d, -0x01, -0x7d, -0x01, -0x01, -0x01, -1 }, { 0x0000, 0x0000, 0x0040, 0x0060, 0x0070, 0x07f8, 0x1ffc, 0x3ff8, 0x3e70, 0x7c60, 0x7c40, 0x7c00, 0x7c00, 0x7c00, 0x0000, 0x0000 } }; // ds:0x2948
unsigned short g_mouse_posy_min = 0; // ds:0x2988
unsigned short g_mouse_posx_min = 0; // ds:0x298a
unsigned short g_mouse_posy_max = 0x00c7; // ds:0x298c
unsigned short g_mouse_posx_max = 0x0136; // ds:0x298e
struct{unsigned char unkn[8];} g_pic_copy_ds_rect = { 0x00, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x3f, 0x01 }; // ds:0x2990, struct screen_rect
unsigned short g_mouse_locked = 0; // ds:0x2998
signed short g_mouse_refresh_flag = -1; // ds:0x299a
unsigned short g_mouse_posx = 0x00a0; // ds:0x299c
unsigned short g_mouse_posy = 0x0064; // ds:0x299e
unsigned short g_mouse_posx_bak = 0x00a0; // ds:0x29a0
unsigned short g_mouse_posy_bak = 0x0064; // ds:0x29a2
unsigned short g_mouse_moved = 0; // ds:0x29a4
unsigned short g_mouse_pointer_offsetx = 0; // ds:0x29a6
unsigned short g_mouse_pointer_offsety = 0; // ds:0x29a8
unsigned short g_mouse_pointer_offsetx_bak = 0; // ds:0x29aa
unsigned short g_mouse_pointer_offsety_bak = 0; // ds:0x29ac
unsigned short g_ani_enabled = 0; // ds:0x29ae
unsigned char g_unkn_007[2] = { 0xff, 0xff }; // ds:0x29b0
unsigned short g_statusmenu_allowed = 1; // ds:0x29b2, , readonly
unsigned short g_heroswap_allowed = 1; // ds:0x29b4
unsigned short g_intemple = 1; // ds:0x29b6, writeonly (0,1), 0 while in temple
unsigned short g_intemple2 = 1; // ds:0x29b8, , copy of INTEMPLE
unsigned short g_always_zero3 = 0; // ds:0x29ba, writeonly (0)
unsigned char g_unkn_008[16] = { 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x05, 0x00, 0x06, 0x00, 0x07, 0x00 }; // ds:0x29bc
struct{signed short x1, x2, y1, y2; unsigned short action;} g_action_table_menu[2] = { { 0x0000, 0x0000, 0x013f, 0x00c7, 0x001c }, { -0x0001, -0x0001, -0x0001, -0x0001, 0xffff } }; // ds:0x29cc
long g_action_table_primary = 0x14fc29cc; // ds:0x29e0, to ACTION_TABLE_MENU; RealPt
long g_action_table_secondary = 0; // ds:0x29e4; RealPt
struct{signed short x1, x2, y1, y2; unsigned short action;} g_action_table_playmask[24] = {
	{ 0x00f0, 0x0000, 0x0140, 0x0014, 0x00fd },
	{ 0x00f0, 0x0015, 0x0140, 0x0038, 0x00fc },
	{ 0x0010, 0x0024, 0x0043, 0x0060, 0x004b },
	{ 0x00ac, 0x0024, 0x00df, 0x0060, 0x004d },
	{ 0x0044, 0x0004, 0x00ab, 0x0033, 0x0048 },
	{ 0x0044, 0x0059, 0x00ab, 0x0088, 0x0050 },
	{ 0x00f1, 0x0039, 0x0108, 0x0050, 0x0081 },
	{ 0x010c, 0x0039, 0x0123, 0x0050, 0x0082 },
	{ 0x0127, 0x0039, 0x013e, 0x0050, 0x0083 },
	{ 0x00f1, 0x0054, 0x0108, 0x006b, 0x0084 },
	{ 0x010c, 0x0054, 0x0123, 0x006b, 0x0085 },
	{ 0x0127, 0x0054, 0x013e, 0x006b, 0x0086 },
	{ 0x00f1, 0x006f, 0x0108, 0x0086, 0x0087 },
	{ 0x010c, 0x006f, 0x0123, 0x0086, 0x0088 },
	{ 0x0127, 0x006f, 0x013e, 0x0086, 0x0089 },
	{ 0x0003, 0x009d, 0x002d, 0x00c5, 0x00f1 },
	{ 0x002e, 0x009d, 0x0058, 0x00c5, 0x00f2 },
	{ 0x0059, 0x009d, 0x0083, 0x00c5, 0x00f3 },
	{ 0x0084, 0x009d, 0x00ae, 0x00c5, 0x00f4 },
	{ 0x00af, 0x009d, 0x00d9, 0x00c5, 0x00f5 },
	{ 0x00da, 0x009d, 0x0104, 0x00c5, 0x00f6 },
	{ 0x0113, 0x009d, 0x013d, 0x00c5, 0x00f7 },
	{ 0x0000, 0x0000, 0x013f, 0x00c7, 0x00fe },
	{ -0x0001, -0x0001, -0x0001, -0x0001, 0xffff }
}; // ds:0x29e8
struct{signed short x1, x2, y1, y2; unsigned short action;} g_action_table_status[30] = {
	{ 0x0010, 0x0029, 0x001f, 0x0031, 0x004b },
	{ 0x0020, 0x0029, 0x0030, 0x0031, 0x004d },
	{ 0x0044, 0x0037, 0x0054, 0x0047, 0x0080 },
	{ 0x003a, 0x0050, 0x004a, 0x0060, 0x0081 },
	{ 0x0091, 0x0050, 0x00a1, 0x0060, 0x0082 },
	{ 0x0044, 0x006a, 0x0054, 0x007a, 0x0083 },
	{ 0x0087, 0x006a, 0x0097, 0x007a, 0x0084 },
	{ 0x0044, 0x008c, 0x0054, 0x009c, 0x0085 },
	{ 0x0087, 0x00ae, 0x0097, 0x00be, 0x0086 },
	{ 0x000f, 0x0037, 0x001f, 0x0047, 0x0087 },
	{ 0x0020, 0x0037, 0x0030, 0x0047, 0x0088 },
	{ 0x000f, 0x0048, 0x001f, 0x0058, 0x0089 },
	{ 0x0020, 0x0048, 0x0030, 0x0058, 0x008a },
	{ 0x000f, 0x0059, 0x001f, 0x0069, 0x008b },
	{ 0x0020, 0x0059, 0x0030, 0x0069, 0x008c },
	{ 0x000f, 0x006a, 0x001f, 0x007a, 0x008d },
	{ 0x0020, 0x006a, 0x0030, 0x007a, 0x008e },
	{ 0x000f, 0x007b, 0x001f, 0x008b, 0x008f },
	{ 0x0020, 0x007b, 0x0030, 0x008b, 0x0090 },
	{ 0x000f, 0x008c, 0x001f, 0x009c, 0x0091 },
	{ 0x0020, 0x008c, 0x0030, 0x009c, 0x0092 },
	{ 0x000f, 0x009d, 0x001f, 0x00ad, 0x0093 },
	{ 0x0020, 0x009d, 0x0030, 0x00ad, 0x0094 },
	{ 0x000f, 0x00ae, 0x001f, 0x00bd, 0x0095 },
	{ 0x0020, 0x00ae, 0x0030, 0x00bd, 0x0096 },
	{ 0x0080, 0x0037, 0x0090, 0x0047, 0x0097 },
	{ 0x0091, 0x0037, 0x00a1, 0x0047, 0x0098 },
	{ 0x009b, 0x001e, 0x00b9, 0x0024, 0x00f0 },
	{ 0x0000, 0x0000, 0x013f, 0x00c7, 0x00fe },
	{ -0x0001, -0x0001, -0x0001, -0x0001, 0xffff }
}; // ds:0x2ad8
struct{signed short x1, x2, y1, y2; unsigned short action;} g_action_table_merchant[2] = {
	{ 0x0010, 0x0004, 0x00df, 0x008a, 0x0090 },
	{ -0x0001, -0x0001, -0x0001, -0x0001, 0xffff }
}; // ds:0x2c04
struct{signed short LE_ORIG, LE, AE_ORIG, AE;} g_char_status_bars[7] = {
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 }
}; // ds:0x2c18
signed short g_disease_prices[8] = { 0x0000, 0x0006, 0x0004, 0x0009, 0x0008, 0x0008, 0x0007, 0x000a }; // ds:0x2c50
signed short g_disease_delays[8] = { 0x0000, -0x000a, 0x0014, -0x0014, -0x001e, -0x0014, 0x0000, -0x001e }; // ds:0x2c60
signed short g_poison_prices[10] = { 0x0000, 0x0006, 0x0005, 0x0004, 0x0005, 0x0005, 0x0004, 0x000a, 0x000c, 0x000f }; // ds:0x2c70
signed short g_poison_delays[10] = { 0x0000, -0x001e, -0x0019, -0x0014, -0x0019, -0x0019, -0x0014, -0x0032, -0x003c, -0x004b }; // ds:0x2c84
unsigned char g_dialogbox_lock = 0; // ds:0x2c98
short g_timers_disabled = 0; // ds:0x2c99
signed short g_status_page_mode = 1; // ds:0x2c9b, one of 1,2,3,4,5
signed short g_status_page_hero = 0; // ds:0x2c9d
signed char g_status_page_hunger = -1; // ds:0x2c9f
signed char g_status_page_thirst = -1; // ds:0x2ca0
unsigned char g_missing_file_guilock = 0; // ds:0x2ca1, writeonly (0,1)
signed short g_basepos_x = 0; // ds:0x2ca2
signed short g_basepos_y = 0; // ds:0x2ca4
unsigned char g_dng_area_loaded = 0; // ds:0x2ca6
unsigned char g_city_area_loaded = 0; // ds:0x2ca7
signed char g_travel_map_loaded = 0; // ds:0x2ca8
unsigned char g_unkn_009[33] = { 0x00, 0x00, 0x0a, 0x46, 0x82, 0xbe, 0xff, 0xe5, 0xea, 0xf4, 0xf5, 0xf6, 0xff, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01 }; // ds:0x2ca9
unsigned char g_ani_unknown_flag = 1; // ds:0x2cca, writeonly (0,1)
signed short g_area_prepared = -1; // ds:0x2ccb, -1 = unprepared, 0 = dungeon, 1 = town
unsigned char g_unkn_010[1] = { 0x00 }; // ds:0x2ccd
char g_always_zero4 = 0; // ds:0x2cce, writeonly (0)
short g_current_ani = -1; // ds:0x2ccf
signed short g_fig_figure1 = -1; // ds:0x2cd1
signed short g_fig_figure2 = -1; // ds:0x2cd3
short g_in_fight = 0; // ds:0x2cd5
short g_fight_round = 0; // ds:0x2cd7
unsigned char g_unkn_011[2] = { 0x00, 0x00 }; // ds:0x2cd9
signed short g_skilled_hero_pos = -1; // ds:0x2cdb, {-1, 0..6}
struct{unsigned short x,y;} g_gui_buttons_pos[9] = {
	{ 0x00f1, 0x0039 },
	{ 0x010c, 0x0039 },
	{ 0x0127, 0x0039 },
	{ 0x00f1, 0x0054 },
	{ 0x010c, 0x0054 },
	{ 0x0127, 0x0054 },
	{ 0x00f1, 0x006f },
	{ 0x010c, 0x006f },
	{ 0x0127, 0x006f }
}; // ds:0x2cdd
unsigned short g_hero_pic_posx[7] = { 0x0003, 0x002e, 0x0059, 0x0084, 0x00af, 0x00da, 0x0113 }; // ds:0x2d01
signed char g_levelup_ta_rise[12] = { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x0f, 0x14, 0x14, 0x14 }; // ds:0x2d0f
signed char g_levelup_sp_rise[6] = { 0x19, 0x19, 0x28, 0x14, 0x14, 0x14 }; // ds:0x2d1b
signed char g_levelup_spta_conv[6] = { 5, 5, 5, 0, 0, 0 }; // ds:0x2d21
signed char g_mr_modificators[13] = { 0, 2, 0, 0, 2, -2, 2, 2, 2, 2, 3, 4, 3 }; // ds:0x2d27, { 0, 2, 0, 0, 2, -2, 2, 2, 2, 2, 3, 4, 3 }
unsigned char g_datseg_status_start = 0; // ds:0x2d34, 99 = game finished, area of the datseg that is stored one to one in savegame files
signed char g_current_group = 0; // ds:0x2d35
signed char g_group_member_counts[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d36, members per group
signed char g_total_hero_counter = 0; // ds:0x2d3c
unsigned char g_direction = 0; // ds:0x2d3d
unsigned char g_groups_direction[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d3e
unsigned short g_x_target = 0; // ds:0x2d44
unsigned short g_y_target = 0; // ds:0x2d46
unsigned short g_groups_x_target[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d48
unsigned short g_groups_y_target[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d54
signed char g_location = 0; // ds:0x2d60
signed char g_groups_location[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d61
signed char g_current_town = 0; // ds:0x2d67
signed char g_groups_town[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d68
signed char g_dungeon_index = 0; // ds:0x2d6e
signed char g_groups_dng_index[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d6f
signed char g_dungeon_level = 0; // ds:0x2d75
signed char g_groups_dng_level[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d76
unsigned char g_direction_bak = 0; // ds:0x2d7c
unsigned char g_groups_direction_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d7d
signed short g_x_target_bak = 0; // ds:0x2d83
signed short g_y_target_bak = 0; // ds:0x2d85
signed short g_groups_x_target_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d87
signed short g_groups_y_target_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2d93
signed char g_location_bak = 0; // ds:0x2d9f
signed char g_groups_location_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2da0
signed char g_current_town_bak = 0; // ds:0x2da6
signed char g_groups_town_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2da7
signed char g_dungeon_index_bak = 0; // ds:0x2dad
signed char g_groups_dng_index_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2dae
signed char g_dungeon_level_bak = 0; // ds:0x2db4
signed char g_groups_dng_level_bak[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x2db5
long g_day_timer = 0; // ds:0x2dbb
char g_day_of_week = 0; // ds:0x2dbf
char g_day_of_month = 0; // ds:0x2dc0
char g_month = 0; // ds:0x2dc1
char g_year = 0; // ds:0x2dc2
char g_special_day = 0; // ds:0x2dc3
signed long g_ingame_timers[26] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x2dc4
struct{long u1; short u2; char u3; char u4;} g_modification_timers[100] = {
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 },
	{ 0x00000000, 0x0000, 0x00, 0x00 }
}; // ds:0x2e2c
unsigned char g_unkn_012[2] = { 0x00, 0x00 }; // ds:0x314c
signed long g_gods_estimation[15] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x314e
unsigned char g_tav_cheated_flags[88] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x318a
struct{short unkn1; long unkn2;} g_smith_repairitems[50] = {
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 },
	{ 0x0000, 0x00000000 }
}; // ds:0x31e2
unsigned short g_dng_handled_pos = 0; // ds:0x330e
signed short g_deathtrap_steps = 0; // ds:0x3310
signed short g_deathtrap = 0; // ds:0x3312
signed char g_dng01_amulet_taken = 0; // ds:0x3314
signed char g_dng01_sabre_taken = 0; // ds:0x3315
signed char g_dng01_crossbow_taken = 0; // ds:0x3316
signed char g_dng01_ardora_freed = 0; // ds:0x3317
unsigned char g_unkn_013[1] = { 0x00 }; // ds:0x3318
signed char g_dng01_key_taken = 0; // ds:0x3319
signed char g_dng01_corpse_looted = 0; // ds:0x331a
signed short g_weather1 = 0; // ds:0x331b, random(6)
signed short g_weather2 = 0; // ds:0x331d, random(7)
signed char g_daspota_fightflags[19] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x331f
signed char g_treasure_maps[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3332
unsigned char g_debtbook_read_flag = 1; // ds:0x333c
unsigned char g_orcdocument_read_flag = 0; // ds:0x333d
unsigned short g_gardanium_used_ae = 0; // ds:0x333e
signed short g_min_map_parts = 0; // ds:0x3340
short g_subvention = 0; // ds:0x3342, {0-4}
unsigned short g_otta_windriders = 0; // ds:0x3344
unsigned short g_otta_stormchildren = 0; // ds:0x3346
unsigned short g_otta_garaldsson = 0; // ds:0x3348
signed short g_heard_announce = 0; // ds:0x334a, {0 = not heard, 1 = heard, 3 = spoke with hetman}
signed short g_got_main_quest = 0; // ds:0x334c
short g_quested_months = 0; // ds:0x334e
signed short g_monthly_credit = 0; // ds:0x3350
signed short g_got_letter_jad = 0; // ds:0x3352
signed short g_visited_miller = 0; // ds:0x3354
signed short g_quest_ugdalf = 0; // ds:0x3356
signed short g_academy_daily_curse = 0; // ds:0x3358
signed short g_academy_daily_ident = 0; // ds:0x335a
signed short g_bank_deposit = 0; // ds:0x335c
signed short g_days_to_cens = 0; // ds:0x335e
signed short g_debt_days = 0; // ds:0x3360
unsigned short g_in_academy = 0; // ds:0x3362
unsigned char g_informer_flags[15] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3364
unsigned char g_unkn_014[1] = { 0x00 }; // ds:0x3373
signed char g_tav_kicked_flags[88] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3374
signed char g_town_outlawed_flags[52] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x33cc
signed char g_herberg_kicked_flags[74] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3400
unsigned char g_got_letter_het = 0; // ds:0x344a
unsigned char g_unkn_015[1] = { 0x00 }; // ds:0x344b
unsigned char g_jurge_awaits_letter = 0; // ds:0x344c
unsigned char g_umbrik_quest_gorah = 0; // ds:0x344d
unsigned char g_unkn_016[1] = { 0x00 }; // ds:0x344e
unsigned char g_isleif_jandas_regards = 0; // ds:0x344f
unsigned char g_isleif_map_given = 0; // ds:0x3450
unsigned char g_ragna_asked_map = 0; // ds:0x3451
unsigned char g_beorn_litt_bold = 0; // ds:0x3452
unsigned char g_beorn_medi_bold = 0; // ds:0x3453
unsigned char g_beorn_very_bold = 0; // ds:0x3454
unsigned char g_eliane_quest_nameless = 0; // ds:0x3455
unsigned char g_olvir_start_hetmann = 0; // ds:0x3456
unsigned char g_olvir_start_hyggelik = 0; // ds:0x3457
unsigned char g_olvir_start_hasgar = 0; // ds:0x3458
unsigned char g_olvir_interrupted = 0; // ds:0x3459
unsigned char g_olvir_singing_hetmann = 0; // ds:0x345a
unsigned char g_olvir_singing_hyggelik = 0; // ds:0x345b
unsigned char g_olvir_singing_hasgar = 0; // ds:0x345c
unsigned char g_swafnild_tp1 = 0; // ds:0x345d
unsigned char g_swafnild_tp2 = 0; // ds:0x345e
unsigned char g_swafnild_tp3 = 0; // ds:0x345f
unsigned char g_swafnild_tp4 = 0; // ds:0x3460
unsigned char g_swafnild_destination = 0; // ds:0x3461
unsigned char g_swafnild_nomap = 0; // ds:0x3462
unsigned char g_treborn_date = 0; // ds:0x3463
unsigned char g_unicorn_hero_pos = 0; // ds:0x3464, {0-6}
char g_unicorn_get_map = 0; // ds:0x3465
char g_unicorn_timer = 0; // ds:0x3466
unsigned char g_algrid_treborns_hint = 0; // ds:0x3467
unsigned char g_tiomar_drinkmate = 0; // ds:0x3468, {0-6}
unsigned char g_tiomar_awaits_letter = 0; // ds:0x3469
long g_unicorn_hero_ptr = 0; // ds:0x346a; RealPt
signed short g_npc_meet_tavern = 0; // ds:0x346e
signed short g_npc_months = 0; // ds:0x3470
signed char g_smith_kicked_flags[50] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3472
signed char g_smith_flogged_flags[50] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x34a4
signed char g_merchant_kicked_flags[74] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x34d6
unsigned char g_npc_unknown_flags[20] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3520
unsigned char g_merchant_kicked2_flags[94] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3534
unsigned char g_merchant_offended_flags[94] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3592
unsigned char g_quest_deadship = 0; // ds:0x35f0
unsigned char g_unkn_017[1] = { 0x00 }; // ds:0x35f1
unsigned char g_quest_deadship_done = 0; // ds:0x35f2
unsigned char g_always_one2 = 0; // ds:0x35f3, writeonly (1)
unsigned char g_dng03_spidereggs_burned = 0; // ds:0x35f4
unsigned char g_unkn_018[2] = { 0x00, 0x00 }; // ds:0x35f5
unsigned char g_dng06_dasptreas_found = 0; // ds:0x35f7
unsigned char g_unkn_019[2] = { 0x00, 0x00 }; // ds:0x35f8
unsigned char g_quest_nameless_done = 0; // ds:0x35fa
unsigned char g_unkn_020[4] = { 0x00, 0x00, 0x00, 0x00 }; // ds:0x35fb
unsigned char g_dng14_ugdalf_done = 0; // ds:0x35ff
unsigned char g_got_grimring = 0; // ds:0x3600
unsigned char g_npc_timers[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x3601
unsigned char g_tlk_tav_firstinfo = 0; // ds:0x3608
unsigned char g_tlk_tav_infopromise = 0; // ds:0x3609
unsigned char g_tlk_tav_round = 0; // ds:0x360a
unsigned char g_tlk_tav_freebeer = 0; // ds:0x360b
unsigned char g_tlk_tav_drinkcount = 0; // ds:0x360c
unsigned char g_tlk_tav_informersex = 0; // ds:0x360d, {1 = male,2 = female}
unsigned char g_unkn_021[1] = { 0x00 }; // ds:0x360e
unsigned char g_tlk_tav_followinformer = 0; // ds:0x360f
unsigned char g_tlk_tav_fullness = 0; // ds:0x3610
unsigned char g_tlk_tav_testdrunk = 0; // ds:0x3611
unsigned char g_current_informer = 0; // ds:0x3612
unsigned char g_dungeon_light = 0; // ds:0x3613, 0 = light is on, 1, 2 = light is off
unsigned char g_show_travel_map = 0; // ds:0x3614
unsigned char g_hermit_visited = 0; // ds:0x3615
unsigned char g_dungeon_type = 0; // ds:0x3616, { 0 = SHIPS, 1 = MARBLES, 2 = STONES }
unsigned char g_estorik_known = 0; // ds:0x3617
struct{unsigned char unkn[38];} g_dialog_partners[10] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x3618
struct{unsigned char unkn[8];} g_dialog_states[160] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x3794
unsigned char g_dng02_sphere_known = 0; // ds:0x3c94
unsigned char g_dng02_corpse = 0; // ds:0x3c95
unsigned char g_dng02_apparature_destroyed = 0; // ds:0x3c96
unsigned char g_dng02_sphere_timer = 0; // ds:0x3c97, {0,...,7}
unsigned char g_dng02_sphere_active = 0; // ds:0x3c98
unsigned char g_dng02_raven_destroyed = 0; // ds:0x3c99
unsigned char g_dng02_secret_door1 = 0; // ds:0x3c9a
unsigned char g_dng02_secret_door2 = 0; // ds:0x3c9b
unsigned char g_dng02_secret_door3 = 0; // ds:0x3c9c
unsigned char g_dng03_lever_trap = 1; // ds:0x3c9d
unsigned char g_dng03_lever_chest11 = 1; // ds:0x3c9e
unsigned char g_dng03_sanctum_smashed = 0; // ds:0x3c9f
unsigned char g_dng04_corpse0_flag = 0; // ds:0x3ca0
unsigned char g_dng04_corpse1_flag = 0; // ds:0x3ca1
unsigned char g_dng04_corpse2_flag = 0; // ds:0x3ca2
unsigned char g_dng04_gap_flag = 0; // ds:0x3ca3
unsigned char g_dng04_helmet_flag = 0; // ds:0x3ca4
unsigned char g_dng04_lantern_flag = 0; // ds:0x3ca5
unsigned char g_dng04_deepgap_flag = 0; // ds:0x3ca6
unsigned char g_dng06_pitdoor_flag = 0; // ds:0x3ca7
unsigned char g_dng06_proviant_flag = 0; // ds:0x3ca8
unsigned char g_dng06_money_flag = 0; // ds:0x3ca9
unsigned char g_dng06_goldkey_flag = 0; // ds:0x3caa
unsigned char g_dng06_countdown_flag = 5; // ds:0x3cab
unsigned char g_dng06_lever_flag = 0; // ds:0x3cac
unsigned char g_dng06_book_flag = 0; // ds:0x3cad
unsigned char g_dng06_fight19_flag = 0; // ds:0x3cae
unsigned char g_dng05_proviant_flag = 0; // ds:0x3caf
unsigned char g_dng05_bats_flag = 0; // ds:0x3cb0
unsigned char g_dng05_god_flag = 0; // ds:0x3cb1
unsigned char g_dng07_muelixier_flag = 0; // ds:0x3cb2
unsigned char g_dng07_antimuelixier_flag = 0; // ds:0x3cb3
unsigned char g_dng07_flicker_flag = 0; // ds:0x3cb4
unsigned char g_dng07_poison_flag = 0; // ds:0x3cb5
unsigned long g_dng07_poison_timer = 0; // ds:0x3cb6
unsigned char g_dng08_bed_00 = 0; // ds:0x3cba
unsigned char g_dng08_bed_01 = 0; // ds:0x3cbb
unsigned char g_dng08_bed_02 = 0; // ds:0x3cbc
unsigned char g_dng08_bed_03 = 0; // ds:0x3cbd
unsigned char g_dng08_bed_04 = 0; // ds:0x3cbe
unsigned char g_dng08_bed_05 = 0; // ds:0x3cbf
unsigned char g_dng08_bed_06 = 0; // ds:0x3cc0
unsigned char g_dng08_bed_07 = 0; // ds:0x3cc1
unsigned char g_dng08_bed_08 = 0; // ds:0x3cc2
unsigned char g_dng08_bed_09 = 0; // ds:0x3cc3
unsigned char g_dng08_bed_10 = 0; // ds:0x3cc4
unsigned char g_dng08_bed_11 = 0; // ds:0x3cc5
unsigned char g_dng08_timer1 = 0; // ds:0x3cc6, {0, 1, ..., 24}
unsigned char g_dng08_timer2 = 0; // ds:0x3cc7, {0, 1, ..., 24}
unsigned char g_dng08_bundles_done = 0; // ds:0x3cc8
unsigned char g_dng08_ballista_done = 0; // ds:0x3cc9
unsigned char g_dng08_chest2_looted = 0; // ds:0x3cca
signed char g_dng08_secret_door = 0; // ds:0x3ccb, {0,1 = found,2 = opened}
unsigned char g_dng08_chest0_looted = 0; // ds:0x3ccc
unsigned char g_dng08_chest35_looted = 0; // ds:0x3ccd
char g_daspota_location01_loot[29] = { 0x36, 0x01, 0x0c, 0x01, 0x0d, 0x1e, -0x62, 0x01, -0x61, 0x01, 0x5c, 0x0a, 0x17, 0x32, 0x5b, 0x14, 0x4a, 0x01, 0x4a, 0x01, 0x22, 0x01, -0x6e, 0x01, -0x72, 0x01, -0x06, -0x01, -1 }; // ds:0x3cce
char g_daspota_location02_loot[15] = { 0x0c, 0x01, 0x0c, 0x01, 0x0d, 0x1e, 0x07, 0x01, 0x07, 0x01, 0x19, 0x01, 0x29, 0x01, -1 }; // ds:0x3ceb
char g_daspota_location03_loot[15] = { 0x0c, 0x01, 0x0c, 0x01, 0x0d, 0x1e, 0x07, 0x01, 0x07, 0x01, 0x19, 0x01, 0x29, 0x01, -1 }; // ds:0x3cfa
char g_daspota_location04_loot[9] = { 0x08, 0x01, 0x17, 0x0a, 0x56, 0x01, 0x4d, 0x01, -1 }; // ds:0x3d09
char g_daspota_location05_loot[31] = { -0x60, 0x01, -0x5f, 0x01, 0x15, 0x01, 0x6d, 0x01, 0x5b, 0x14, 0x4c, 0x02, 0x24, 0x01, 0x1d, 0x01, 0x22, 0x01, 0x2a, 0x01, 0x26, 0x01, 0x23, 0x01, 0x39, 0x01, 0x3b, 0x01, -0x71, 0x01, -1 }; // ds:0x3d12
char g_daspota_location06_loot[25] = { 0x03, 0x03, 0x01, 0x03, 0x07, 0x03, 0x08, 0x03, 0x10, 0x03, 0x13, 0x03, 0x36, 0x03, 0x4e, 0x03, 0x54, 0x03, 0x75, 0x03, 0x52, 0x03, 0x51, 0x03, -1 }; // ds:0x3d31
char g_daspota_location07_loot[7] = { 0x17, 0x14, 0x5b, 0x14, 0x5c, 0x0a, -1 }; // ds:0x3d4a
char g_daspota_location08_loot[15] = { 0x4c, 0x05, 0x4a, 0x05, 0x22, 0x01, 0x22, 0x01, 0x1f, 0x01, 0x2e, 0x01, 0x22, 0x01, -1 }; // ds:0x3d51
char g_daspota_location10_loot[7] = { 0x17, 0x32, 0x5b, 0x14, 0x5c, 0x0a, -1 }; // ds:0x3d60
char g_daspota_location12_loot[21] = { 0x1a, 0x03, 0x20, 0x03, 0x28, 0x03, 0x2e, 0x03, 0x48, 0x03, 0x55, 0x03, 0x5f, 0x03, 0x41, 0x03, 0x79, 0x03, 0x1f, 0x03, -1 }; // ds:0x3d67
char g_daspota_location13_loot[9] = { 0x08, 0x03, 0x79, 0x03, 0x1b, 0x03, 0x10, 0x02, -1 }; // ds:0x3d7c
char g_daspota_location14_loot[5] = { 0x17, 0x50, 0x5c, 0x0a, -1 }; // ds:0x3d85
char g_daspota_location16_loot[5] = { 0x17, 0x32, 0x2d, 0x0a, -1 }; // ds:0x3d8a
char g_daspota_location18_loot[19] = { 0x5c, 0x0a, 0x17, 0x28, 0x4c, 0x05, 0x4a, 0x05, 0x1f, 0x02, 0x5f, 0x01, 0x7e, 0x01, 0x3a, 0x01, -0x80, 0x01, -1 }; // ds:0x3d8f
unsigned char g_tevent004_flag = 0; // ds:0x3da2
unsigned char g_tevent005_flag = 0; // ds:0x3da3
unsigned char g_tevent008_flag = 0; // ds:0x3da4
unsigned char g_tevent009_flag = 0; // ds:0x3da5
unsigned char g_tevent011_flag = 0; // ds:0x3da6
unsigned char g_tevent013_flag = 0; // ds:0x3da7
unsigned char g_tevent014_flag = 0; // ds:0x3da8
unsigned char g_tevent016_flag = 0; // ds:0x3da9
unsigned char g_tevent017_flag = 0; // ds:0x3daa
unsigned char g_tevent020_flag = 0; // ds:0x3dab
unsigned char g_tevent021_flag = 0; // ds:0x3dac
unsigned char g_tevent022_flag = 0; // ds:0x3dad
unsigned char g_tevent022_track_flag = 0; // ds:0x3dae
unsigned char g_tevent024_flag = 0; // ds:0x3daf
unsigned char g_tevent025_flag = 0; // ds:0x3db0
unsigned char g_tevent028_flag = 0; // ds:0x3db1
unsigned char g_tevent030_flag = 0; // ds:0x3db2
unsigned char g_tevent031_flag = 0; // ds:0x3db3
unsigned char g_tevent032_flag = 0; // ds:0x3db4
unsigned char g_tevent032_herb_flag = 0; // ds:0x3db5
unsigned char g_tevent034_flag = 0; // ds:0x3db6
unsigned char g_tevent035_flag = 0; // ds:0x3db7
unsigned char g_tevent036_flag = 0; // ds:0x3db8
unsigned char g_tevent036_herb_flag = 0; // ds:0x3db9
unsigned char g_tevent037_flag = 0; // ds:0x3dba
unsigned char g_tevent039_flag = 0; // ds:0x3dbb
unsigned char g_tevent040_flag = 0; // ds:0x3dbc
unsigned char g_tevent041_flag = 0; // ds:0x3dbd
unsigned char g_tevent042_flag = 0; // ds:0x3dbe
unsigned char g_tevent043_flag = 0; // ds:0x3dbf
unsigned char g_tevent048_flag = 0; // ds:0x3dc0
unsigned char g_tevent048_track_flag = 0; // ds:0x3dc1
unsigned char g_tevent049_flag = 0; // ds:0x3dc2
unsigned char g_tevent050_flag = 0; // ds:0x3dc3
unsigned char g_tevent050_herb_flag = 0; // ds:0x3dc4
unsigned char g_tevent051_flag = 0; // ds:0x3dc5
unsigned char g_tevent053_flag = 0; // ds:0x3dc6
unsigned char g_tevent058_flag = 0; // ds:0x3dc7
unsigned char g_tevent061_flag = 0; // ds:0x3dc8
unsigned char g_tevent064_flag = 0; // ds:0x3dc9
unsigned char g_tevent066_flag = 0; // ds:0x3dca
unsigned char g_tevent066_track_flag = 0; // ds:0x3dcb
unsigned char g_tevent067_flag = 0; // ds:0x3dcc
unsigned char g_tevent069_flag = 0; // ds:0x3dcd
unsigned char g_tevent070_flag = 0; // ds:0x3dce
unsigned char g_tevent070_herb_flag = 0; // ds:0x3dcf
unsigned char g_tevent070_trail_flag = 0; // ds:0x3dd0
unsigned char g_tevent071_flag = 0; // ds:0x3dd1
unsigned char g_teventu01_flag = 0; // ds:0x3dd2
unsigned char g_tevent064_silent_flag = 0; // ds:0x3dd3
unsigned char g_unkn_022[1] = { 0x00 }; // ds:0x3dd4
unsigned char g_teventu02_flag = 0; // ds:0x3dd5
unsigned char g_teventu03_flag = 0; // ds:0x3dd6
unsigned char g_teventu04_flag = 0; // ds:0x3dd7
unsigned char g_teventu05_flag = 0; // ds:0x3dd8
unsigned char g_teventu06_flag = 0; // ds:0x3dd9
unsigned char g_tevent071_orcstatue = 0; // ds:0x3dda
unsigned char g_met_unicorn_flag = 0; // ds:0x3ddb
unsigned char g_find_hyggelik = 0; // ds:0x3ddc, {0,1 = you are able to find Hyggelik}
unsigned char g_tevent072_flag = 0; // ds:0x3ddd
unsigned char g_tevent073_flag = 0; // ds:0x3dde
unsigned char g_tevent074_flag = 0; // ds:0x3ddf
unsigned char g_tevent075_flag = 0; // ds:0x3de0
unsigned char g_tevent076_flag = 0; // ds:0x3de1
unsigned char g_tevent077_flag = 0; // ds:0x3de2
unsigned char g_tevent079_flag = 0; // ds:0x3de3
unsigned char g_tevent080_flag = 0; // ds:0x3de4
unsigned char g_tevent080_tatzelwurm = 0; // ds:0x3de5
unsigned char g_tevent081_flag = 0; // ds:0x3de6
unsigned char g_tevent083_flag = 0; // ds:0x3de7
unsigned char g_tevent084_flag = 0; // ds:0x3de8
unsigned char g_tevent085_flag = 0; // ds:0x3de9
unsigned char g_tevent085_herb_flag = 0; // ds:0x3dea
unsigned char g_tevent086_flag = 0; // ds:0x3deb
unsigned char g_tevent088_flag = 0; // ds:0x3dec
unsigned char g_tevent091_flag = 0; // ds:0x3ded
unsigned char g_tevent093_flag = 0; // ds:0x3dee
unsigned char g_tevent094_flag = 0; // ds:0x3def
unsigned char g_teventu07_flag = 0; // ds:0x3df0
unsigned char g_teventu08_flag = 0; // ds:0x3df1
unsigned char g_tevent099_flag = 0; // ds:0x3df2
unsigned char g_tevent100_flag = 0; // ds:0x3df3
unsigned char g_tevent101_flag = 0; // ds:0x3df4
unsigned char g_tevent106_flag = 0; // ds:0x3df5
unsigned char g_tevent108_flag = 0; // ds:0x3df6
unsigned char g_tevent109_flag = 0; // ds:0x3df7
unsigned char g_tevent111_flag = 0; // ds:0x3df8
unsigned char g_tevent112_flag = 0; // ds:0x3df9
unsigned char g_tevent112_herb_flag = 0; // ds:0x3dfa
unsigned char g_tevent115_flag = 0; // ds:0x3dfb
unsigned char g_tevent116_flag = 0; // ds:0x3dfc
unsigned char g_tevent118_flag = 0; // ds:0x3dfd
unsigned char g_tevent119_flag = 0; // ds:0x3dfe
unsigned char g_tevent120_flag = 0; // ds:0x3dff
unsigned char g_tevent122_flag = 0; // ds:0x3e00
unsigned char g_unkn_023[1] = { 0x00 }; // ds:0x3e01
unsigned char g_tevent128_flag = 0; // ds:0x3e02
unsigned char g_tevent128_replen_flag = 0; // ds:0x3e03
unsigned char g_tevent129_flag = 0; // ds:0x3e04
unsigned char g_tevent131_flag = 0; // ds:0x3e05
unsigned char g_tevent132_flag = 0; // ds:0x3e06
unsigned char g_tevent132_herb_flag = 0; // ds:0x3e07
unsigned char g_tevent134_flag = 0; // ds:0x3e08
unsigned char g_tevent137_flag = 0; // ds:0x3e09
unsigned char g_tevent138_flag = 0; // ds:0x3e0a
unsigned char g_teventu09_flag = 0; // ds:0x3e0b
unsigned char g_tevent140_flag = 0; // ds:0x3e0c
unsigned char g_tevent140_herb_flag = 0; // ds:0x3e0d
unsigned char g_tevent141_flag = 0; // ds:0x3e0e
unsigned char g_tevent142_flag = 0; // ds:0x3e0f
unsigned char g_unkn_024[1] = { 0x00 }; // ds:0x3e10
unsigned char g_teventu10_flag = 0; // ds:0x3e11
unsigned char g_teventu11_flag = 0; // ds:0x3e12
unsigned char g_teventu12_flag = 0; // ds:0x3e13
unsigned char g_teventu13_flag = 0; // ds:0x3e14
unsigned char g_tevent114_olimone_flag = 0; // ds:0x3e15
unsigned char g_tevent074_fight_flag = 0xff; // ds:0x3e16
unsigned char g_tevent077_fight_flag = 0xff; // ds:0x3e17
long g_random_tlk_hero = 0; // ds:0x3e18; RealPt
long g_ruin_hero = 0; // ds:0x3e1c; RealPt
long g_main_acting_hero = 0; // ds:0x3e20; RealPt
unsigned char g_tevent073_corpse[3] = { 0xaa, 0x01, 0xff }; // ds:0x3e24
unsigned char g_tevent014_chest[4] = { 0x01, 0x6e, 0xa2, 0xff }; // ds:0x3e27
unsigned char g_tevent064_hut_content[19] = { 0x4b, 0x01, 0x5c, 0x01, 0x5b, 0x01, 0x7e, 0x01, 0x78, 0x01, 0x80, 0x01, 0x1d, 0x01, 0x46, 0x01, 0x92, 0x01, 0xff }; // ds:0x3e2b
unsigned char g_tevent064_chest[21] = { 0xa4, 0x01, 0xa5, 0x01, 0x92, 0x01, 0xb4, 0x02, 0xa6, 0x01, 0xa7, 0x01, 0x7e, 0x02, 0x82, 0x01, 0x9d, 0x01, 0x83, 0x01, 0xff }; // ds:0x3e3e
struct{unsigned char r,g,b;} g_palette_floor[32] = {
	{ 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 }, { 0x00, 0x00, 0x00 } }; // ds:0x3e53
struct{unsigned char r,g,b;}
_palette_buildings[32] = { { 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 }
}; // ds:0x3eb3
struct{unsigned char r,g,b;} g_palette_sky[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 }
}; // ds:0x3f13
unsigned char g_need_letter = 0; // ds:0x3f73
unsigned char g_gremob_invited = 0; // ds:0x3f74
unsigned char g_harlot_date = 0; // ds:0x3f75
unsigned char g_drug_timer = 0; // ds:0x3f76, {0, 1, ..., 10}
unsigned char g_ptemple_closed = 0; // ds:0x3f77
unsigned char g_alrik_derondan = 0; // ds:0x3f78
unsigned char g_alrik_derondan_insulted = 0; // ds:0x3f79
unsigned char g_dng13_lantern_flag = 0; // ds:0x3f7a
unsigned char g_dng13_corpse0_flag = 0; // ds:0x3f7b
unsigned char g_dng13_corpse1_flag = 0; // ds:0x3f7c
unsigned char g_dng13_passage1_flag = 0; // ds:0x3f7d
unsigned char g_dng13_passage2_flag = 0; // ds:0x3f7e
unsigned char g_dng13_passage3_flag = 0; // ds:0x3f7f
unsigned char g_dng13_passage4_flag = 0; // ds:0x3f80
unsigned char g_dng13_passage5_flag = 0; // ds:0x3f81
unsigned char g_dng13_money_flag = 0; // ds:0x3f82
unsigned char g_dng13_chest_equips[13] = { 0x5d, 0x03, 0x49, 0x01, 0x79, 0x03, 0x1b, 0x03, 0x41, 0x0f, 0x4d, 0x01, 0xff }; // ds:0x3f83
unsigned char g_dng13_chest0_content[6] = { 0x0e, 0x55, 0x41, 0x41, 0x79, 0xff }; // ds:0x3f90
unsigned char g_dng13_chest1_content[5] = { 0x0e, 0x01, 0x41, 0x55, 0xff }; // ds:0x3f96
signed char g_dng12_tunnel1 = 0x2d; // ds:0x3f9b
signed char g_dng12_tunnel2 = 0x28; // ds:0x3f9c
signed char g_dng12_tunnel3 = 0x23; // ds:0x3f9d
signed char g_dng12_tunnel4 = 0x1e; // ds:0x3f9e
unsigned char g_dng12_ingerimm_sacrifice = 0; // ds:0x3f9f
unsigned char g_dng12_ingerimm_hint = 0; // ds:0x3fa0
signed char g_dng12_watertrap_water_runs = 0; // ds:0x3fa1
signed long g_dng12_watertrap_timer = 0x00001194; // ds:0x3fa2
signed char g_dng12_watertrap_active = 1; // ds:0x3fa6
signed char g_dng12_obstacle_hp = 0x28; // ds:0x3fa7, {-25,...,40}
signed char g_dng12_obstacle_active = 1; // ds:0x3fa8
signed char g_dng12_speartrap_active = 1; // ds:0x3fa9
signed char g_dng12_chest1_content[12] = { 0x50, 0x50, -0x79, -0x79, 0x06, 0x06, 0x06, 0x4e, 0x4e, -0x6f, -0x66, -1 }; // ds:0x3faa
unsigned char g_dng14_money_flag = 0; // ds:0x3fb6
unsigned char g_dng14_alarm_flag = 0; // ds:0x3fb7
unsigned char g_dng14_secretdoor1 = 0; // ds:0x3fb8, {0, 1 = found, 2 = unlocked}
unsigned char g_dng14_secretdoor2 = 0; // ds:0x3fb9, {0, 1 = found, 2 = unlocked}
unsigned char g_dng14_secretdoor3 = 0; // ds:0x3fba, {0, 1 = found, 2 = unlocked}
unsigned char g_dng14_secretdoor4 = 0; // ds:0x3fbb, {0, 1 = found, 2 = unlocked}
unsigned char g_dng14_secretdoor5 = 0; // ds:0x3fbc, {0, 1 = found, 2 = unlocked}
unsigned char g_dng14_poisontrap = 0; // ds:0x3fbd
unsigned char g_dng14_lvl2_fight = 0; // ds:0x3fbe
unsigned char g_dng14_booty_flag = 0; // ds:0x3fbf
unsigned char g_dng14_torches_flag = 0; // ds:0x3fc0
unsigned char g_dng14_spear_flag = 0; // ds:0x3fc1
unsigned char g_dng14_hatchet_flag = 0; // ds:0x3fc2
unsigned char g_dng14_ring_flag = 0; // ds:0x3fc3
unsigned char g_dng14_orknase_flag = 0; // ds:0x3fc4
unsigned char g_dng14_spooky_flag = 0; // ds:0x3fc5
unsigned char g_dng14_cellarexit_flag = 0; // ds:0x3fc6
unsigned char g_dng14_chest_pantry[9] = { 0x2d, 0x32, 0x17, 0x14, 0x5b, 0x14, 0x5c, 0x05, 0xff }; // ds:0x3fc7
unsigned char g_dng14_chest_gear[13] = { 0x5d, 0x03, 0x49, 0x02, 0x79, 0x03, 0x41, 0x0e, 0x29, 0x14, 0x1a, 0x03, 0xff }; // ds:0x3fd0
unsigned char g_dng14_chest_barrel[7] = { 0x05, 0x03, 0x67, 0x03, 0x69, 0x01, 0xff }; // ds:0x3fdd
unsigned char g_dng14_chest_x1[7] = { 0x5c, 0x9a, 0x9a, 0x0e, 0x9b, 0x9b, 0xff }; // ds:0x3fe4
unsigned char g_dng14_chest_x2[16] = { 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x9a, 0x9a, 0x9a, 0x9b, 0x9b, 0x9b, 0xff }; // ds:0x3feb
unsigned char g_dng14_chest_x3[11] = { 0x09, 0x03, 0x0c, 0x01, 0x62, 0x04, 0x0d, 0x14, 0x0a, 0x32, 0xff }; // ds:0x3ffb
unsigned char g_dng14_chest_x4[14] = { 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x0e, 0x0e, 0x0e, 0x0e, 0x87, 0x87, 0x92, 0xff }; // ds:0x4006
unsigned char g_dng14_chest_x5[10] = { 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5c, 0x5c, 0x91, 0x91, 0xff }; // ds:0x4014
unsigned char g_dng14_chest_x6[8] = { 0x4a, 0x4a, 0x4a, 0x27, 0x27, 0x22, 0x4c, 0xff }; // ds:0x401e
unsigned char g_dng14_chest_x7[7] = { 0xef, 0xef, 0xef, 0xef, 0xef, 0xef, 0xff }; // ds:0x4026
unsigned char g_dng14_chest_x8[13] = { 0x88, 0x88, 0x88, 0x86, 0x86, 0x86, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0xff }; // ds:0x402d
unsigned char g_dng14_fullmap_flag = 1; // ds:0x403a
unsigned char g_dng02_chest00_content[2] = { 0x86, 0xff }; // ds:0x403b
unsigned char g_dng02_chest01_content[4] = { 0x03, 0x62, 0x04, 0xff }; // ds:0x403d
unsigned char g_dng02_chest06_content[4] = { 0x48, 0x1e, 0x0e, 0xff }; // ds:0x4041
unsigned char g_dng02_chest02_content[8] = { 0x2f, 0x99, 0x91, 0x91, 0x94, 0xa7, 0xcb, 0xff }; // ds:0x4045
unsigned char g_dng02_chest03_content[8] = { 0x2f, 0x95, 0xec, 0xb4, 0xa9, 0xcc, 0xf3, 0xff }; // ds:0x404d
unsigned char g_dng02_chest05_content[8] = { 0x2f, 0x95, 0xec, 0xb4, 0xa9, 0xcc, 0xf3, 0xff }; // ds:0x4055
signed char g_dng03_chest00_content[7] = { 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, -1 }; // ds:0x405d
signed char g_dng03_chest01_content[8] = { 0x79, 0x79, 0x1b, 0x49, 0x1a, 0x28, -0x6f, -1 }; // ds:0x4064
signed char g_dng03_chest02_content[13] = { 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, -1 }; // ds:0x406c
signed char g_dng03_chest03_content[3] = { -0x28, -0x66, -1 }; // ds:0x4079
signed char g_dng03_chest04_content[9] = { 0x4c, 0x4c, 0x4c, 0x5b, 0x5b, 0x5b, 0x5e, -0x01, -1 }; // ds:0x407c
signed char g_dng03_chest06_content[8] = { 0x4c, 0x4c, 0x4c, 0x5b, 0x5b, 0x5b, 0x5e, -1 }; // ds:0x4085
signed char g_dng03_chest07_content[2] = { -0x1f, -1 }; // ds:0x408d
signed char g_dng03_chest08_content[4] = { -0x66, -0x66, -0x66, -1 }; // ds:0x408f
signed char g_dng03_chest09_content[11] = { 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, -1 }; // ds:0x4093
signed char g_dng03_chest12_content[7] = { -0x0b, -0x0b, -0x0a, 0x27, 0x27, -0x2d, -1 }; // ds:0x409e
signed char g_dng04_chest_corpse0[4] = { 0x03, 0x0e, 0x5c, -1 }; // ds:0x40a5
signed char g_dng04_chest_corpse1[12] = { 0x01, 0x01, -0x78, 0x0e, 0x0e, 0x6e, 0x50, 0x79, 0x49, 0x19, -0x50, -1 }; // ds:0x40a9
signed char g_dng04_chest_corpse2[10] = { 0x0e, 0x13, 0x54, 0x79, 0x48, 0x1e, 0x55, 0x2e, -0x6e, -1 }; // ds:0x40b5
signed char g_dng06_chest1_content[16] = { 0x70, 0x70, 0x01, 0x01, 0x35, 0x35, 0x4e, 0x4e, 0x07, 0x07, 0x0e, 0x0e, 0x0c, 0x0c, 0x50, -1 }; // ds:0x40bf
signed char g_dng06_chest_dasptreas[17] = { -0x3a, 0x01, 0x4a, 0x01, 0x4a, 0x01, -0x6e, 0x01, -0x6e, 0x01, -0x65, 0x01, -0x65, 0x01, -0x67, 0x01, -1 }; // ds:0x40cf
signed char g_dng08_chest1_content[11] = { 0x03, 0x08, 0x05, 0x03, 0x42, 0x02, 0x09, 0x01, 0x0a, 0x28, -1 }; // ds:0x40e0
signed char g_dng08_chest2_content[2] = { -0x4f, -1 }; // ds:0x40eb
signed char g_dng08_chest4_content[2] = { -0x4e, -1 }; // ds:0x40ed
signed char g_dng08_chest5_content[6] = { 0x27, 0x27, 0x4a, -0x6d, -0x4d, -1 }; // ds:0x40ef
unsigned char g_dng09_lever1_flag = 0; // ds:0x40f5
unsigned char g_dng09_bolttrap1_flag = 3; // ds:0x40f6
unsigned char g_dng09_bolttrap2_flag = 3; // ds:0x40f7
unsigned char g_dng09_bolttrap3_flag = 1; // ds:0x40f8
unsigned char g_dng09_cultist_flag = 1; // ds:0x40f9
unsigned char g_dng09_lever2_flag = 0; // ds:0x40fa
unsigned char g_dng09_bolttrap4_flag = 0x0a; // ds:0x40fb
unsigned char g_dng09_crystal_flag = 0; // ds:0x40fc
unsigned char g_dng09_pit_flag = 0; // ds:0x40fd, , number of heroes in pit
unsigned char g_unkn_025[1] = { 0x00 }; // ds:0x40fe
unsigned char g_dng09_altar_flag = 0; // ds:0x40ff
unsigned char g_dng09_secretdoor1 = 0; // ds:0x4100, {0, 1 = found, 2 = unlocked}
unsigned char g_dng09_secretdoor2 = 0; // ds:0x4101, {0, 1 = found, 2 = unlocked}
unsigned char g_dng09_chest0[12] = { 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x5b, 0x5b, 0x5c, 0xff }; // ds:0x4102
unsigned char g_dng09_chest1[10] = { 0x4c, 0x4c, 0x4c, 0x19, 0x19, 0x19, 0x29, 0x29, 0x29, 0xff }; // ds:0x410e
unsigned char g_dng09_chest2[8] = { 0x4a, 0x4a, 0x27, 0x27, 0x27, 0xea, 0x9a, 0xff }; // ds:0x4118
unsigned char g_dng09_chest3[21] = { 0x4b, 0x4b, 0x4b, 0x30, 0x30, 0x30, 0x31, 0x31, 0x31, 0x0e, 0x0e, 0x0e, 0x01, 0x5b, 0x17, 0xff, 0x01, 0x0e, 0x4a, 0x23, 0xff }; // ds:0x4120
unsigned char g_dng09_chest5[4] = { 0xbd, 0xbe, 0x4c, 0xff }; // ds:0x4135
unsigned char g_dng09_chest6[7] = { 0x4a, 0x4a, 0x27, 0x27, 0x27, 0xd9, 0xff }; // ds:0x4139
char g_dng10_corpse_looted = 0; // ds:0x4140, unsgiend
unsigned char g_dng10_lever_found = 0; // ds:0x4141, ; default = 0
unsigned char g_dng10_hole_state = 0; // ds:0x4142, ; default = 0
unsigned char g_dng10_lever_state = 0; // ds:0x4143, ; default = 0
unsigned char g_dng10_hole_damage = 0; // ds:0x4144, {0, 1, ..., 255} ; default = 0
unsigned char g_dng10_floorplate_found = 0; // ds:0x4145
unsigned char g_dng10_floorplate_loads = 3; // ds:0x4146, ; default = 3
char g_dng10_mummy_lever = 0; // ds:0x4147
char g_dng10_heshtot = 0; // ds:0x4148
char g_dng10_dragon_quest = 0; // ds:0x4149
char g_dng10_hoard_plundered = 0; // ds:0x414a
char g_dng10_chest0_content[5] = { 0x50, 0x1b, -0x6f, -0x49, -1 }; // ds:0x414b
char g_dng10_chest1_content[4] = { -0x6f, -0x6e, -0x6f, -1 }; // ds:0x4150
char g_dng10_chest2_content[4] = { -0x66, -0x65, -0x66, -1 }; // ds:0x4154
char g_dng10_chest3_content[3] = { -0x39, -0x3b, -1 }; // ds:0x4158
char g_dng10_chest4_content[2] = { -0x21, -1 }; // ds:0x415b
unsigned char g_dng11_waterbarrel1 = 0x50; // ds:0x415d
unsigned char g_dng11_waterbarrel2 = 0x14; // ds:0x415e
unsigned char g_dng11_efferd_sacrifice = 0; // ds:0x415f
unsigned char g_dng11_efferd_hint = 0; // ds:0x4160
unsigned char g_dng11_unknown1_flag = 0; // ds:0x4161
unsigned char g_dng11_firetrap1_flag = 2; // ds:0x4162
unsigned char g_dng11_unknown2_flag = 1; // ds:0x4163
unsigned char g_dng11_firetrap2_flag = 3; // ds:0x4164
unsigned char g_dng11_secretdoor1_flag = 0; // ds:0x4165
unsigned char g_dng11_secretdoor2_flag = 0; // ds:0x4166
unsigned char g_dng11_secretdoor3_flag = 0; // ds:0x4167
unsigned char g_dng11_lever_flag = 2; // ds:0x4168, {0-5}
unsigned char g_dng11_proviant1_flag = 0; // ds:0x4169
unsigned char g_dng11_proviant2_flag = 0; // ds:0x416a
unsigned char g_dng11_chest3[15] = { 0x03, 0x03, 0x03, 0x03, 0x03, 0x70, 0x70, 0x70, 0x70, 0x70, 0x01, 0x86, 0x86, 0x88, 0xff }; // ds:0x416b
unsigned char g_dng11_chest4[11] = { 0x09, 0x09, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0c, 0xfb, 0xfc, 0xff }; // ds:0x417a
unsigned char g_dng11_chest5[5] = { 0x0e, 0x5c, 0x27, 0x30, 0xff }; // ds:0x4185
unsigned char g_dng11_chest6[7] = { 0x86, 0x27, 0x5b, 0x60, 0x31, 0x91, 0xff }; // ds:0x418a
unsigned char g_dng11_chest7 = 0xff; // ds:0x4191
unsigned char g_dng11_chest8[6] = { 0x5c, 0x5c, 0x5c, 0x0e, 0x91, 0xff }; // ds:0x4192
unsigned char g_dng11_chest9[6] = { 0x1a, 0x5d, 0x49, 0x87, 0x87, 0xff }; // ds:0x4198
unsigned char g_dng11_chest10[11] = { 0x79, 0x79, 0x79, 0x79, 0x1b, 0x1b, 0x1b, 0x1b, 0xfd, 0x87, 0xff }; // ds:0x419e
unsigned char g_dng11_chest11[4] = { 0x5b, 0xc0, 0x0e, 0xff }; // ds:0x41a9
unsigned char g_dng11_chest12[13] = { 0x4a, 0x4a, 0x4a, 0x4a, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x4c, 0x4c, 0xff }; // ds:0x41ad
unsigned char g_dng11_chest13[6] = { 0x91, 0x94, 0x2f, 0xcb, 0x01, 0xff }; // ds:0x41ba
unsigned char g_dng11_chest14[6] = { 0x24, 0x1d, 0x5b, 0x9a, 0xbd, 0xff }; // ds:0x41c0
unsigned char g_dng15_took_cursed_money = 0; // ds:0x41c6
unsigned char g_dng15_unknown_flag = 1; // ds:0x41c7
unsigned char g_dng15_reached_hands = 0; // ds:0x41c8
unsigned char g_dng15_lever_south = 0; // ds:0x41c9
unsigned char g_dng15_lever_north = 0; // ds:0x41ca
unsigned char g_dng15_took_hoe = 0; // ds:0x41cb
unsigned char g_dng15_ceilings_a[18] = { 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 3, 1, 1 }; // ds:0x41cc
unsigned char g_dng15_cursed_money_a[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x41de
unsigned char g_dng15_undead_fight = 0; // ds:0x41e4
unsigned char g_dng15_chest_equips[7] = { 0x5d, 0x02, 0x1b, 0x03, 0x65, 0x01, 0xff }; // ds:0x41e5
unsigned char g_dng01_chest1_content[8] = { 0x70, 0x79, 0x79, 0x79, 0x1b, 0x08, 0x18, 0xff }; // ds:0x41ec
unsigned char g_dng01_chest2_content[10] = { 0x03, 0x6d, 0x5c, 0x19, 0x29, 0x24, 0x1d, 0x27, 0x91, 0xff }; // ds:0x41f4
unsigned char g_dng01_chest3_content[2] = { 0x0e, 0xff }; // ds:0x41fe
unsigned char g_dng01_chest5_content[13] = { 0x6e, 0x6e, 0x03, 0x03, 0x70, 0x70, 0x43, 0x62, 0x62, 0x62, 0x10, 0x66, 0xff }; // ds:0x4200
unsigned char g_dng01_chest7_content[5] = { 0x01, 0x0e, 0x4a, 0x23, 0xff }; // ds:0x420d
unsigned char g_unconscious_message[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x4212
unsigned char g_food_message[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x4219
unsigned char g_unkn_026[2] = { 0x00, 0x00 }; // ds:0x4220
short g_cityindex = 0; // ds:0x4222
short g_typeindex = 0; // ds:0x4224
unsigned char g_dng03_highpriest_killed = 0; // ds:0x4226, {0, 14 = in fight 224, 16 = in fight 222}
unsigned char g_dng03_chest12_loads = 6; // ds:0x4227, {0,1,...,6}
unsigned short g_trv_i = 0; // ds:0x4228
unsigned short g_route_stepcount = 0; // ds:0x422a
unsigned short g_forcedmarch_le_cost = 0; // ds:0x422c
unsigned short g_route_total_steps = 0; // ds:0x422e
unsigned short g_route_length = 0; // ds:0x4230
unsigned short g_route_duration = 0; // ds:0x4232
unsigned short g_route_timedelta = 0; // ds:0x4234
unsigned short g_route_mousehover = 0; // ds:0x4236
unsigned short g_route_progress = 0; // ds:0x4238
unsigned short g_route_stepsize = 0; // ds:0x423a
unsigned short g_route_dayprogress = 0; // ds:0x423c
unsigned short g_sea_travel_passage_no = 0; // ds:0x423e
unsigned short g_route_encounter_flag = 0; // ds:0x4240
unsigned short g_route_encounter_time = 0; // ds:0x4242
unsigned short g_route_informer_flag = 0; // ds:0x4244
unsigned short g_route_informer_time = 0; // ds:0x4246
unsigned short g_route_fight_flag = 0; // ds:0x4248
unsigned short g_route_fight_time = 0; // ds:0x424a
unsigned short g_travel_speed = 0; // ds:0x424c
unsigned short g_passage_deadship_flag = 0; // ds:0x424e
unsigned short g_passage_deadship_time = 0; // ds:0x4250
unsigned short g_passage_octopus_flag = 0; // ds:0x4252
unsigned short g_passage_octopus_time = 0; // ds:0x4254
unsigned short g_passage_pirates_flag = 0; // ds:0x4256
unsigned short g_passage_pirates_time = 0; // ds:0x4258
long g_route_course_ptr = 0; // ds:0x425a; RealPt
long g_route_course_start = 0; // ds:0x425e; RealPt
long g_route_course_ptr2 = 0; // ds:0x4262; RealPt
long g_sea_travel_courses = 0; // ds:0x4266; RealPt
unsigned long g_tevents_tab_ptr = 0; // ds:0x426a
unsigned long g_travel_route_ptr = 0; // ds:0x426e
struct{short place, event_id;} g_route_tevents[15] = {
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 },
	{ 0x0000, 0x0000 }
}; // ds:0x4272
signed char g_sea_travel_psgbooked_flag = 0; // ds:0x42ae
signed char g_sea_travel_psgbooked_timer = 0; // ds:0x42af
signed char g_sea_travel_passage_unkn1 = 0; // ds:0x42b0
signed char g_sea_travel_passage_id = 0; // ds:0x42b1
struct{unsigned char unkn[12];} g_harbour_options[10] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x42b2
signed short g_sea_travel_passage_price = 0; // ds:0x432a
signed short g_sea_travel_passage_unkn2 = 0; // ds:0x432c
long g_travel_map_ptr = 0; // ds:0x432e; RealPt
unsigned char g_forcedmarch_timer = 0; // ds:0x4332
unsigned char g_travel_detour = 0; // ds:0x4333
unsigned short g_current_dirsign = 0; // ds:0x4334
signed short g_trv_return = 0; // ds:0x4336, {-1, 0, 1, 2} + ?
unsigned short g_trv_dest_reached = 0; // ds:0x4338
unsigned short g_arrival_x_target = 0; // ds:0x433a
unsigned short g_arrival_y_target = 0; // ds:0x433c
signed short g_arrival_direction = 0; // ds:0x433e
long g_tm_unused1_ptr = 0; // ds:0x4340; RealPt
unsigned char g_trv_menu_towns[6] = { 0, 0, 0, 0, 0, 0 }; // ds:0x4344
unsigned short g_trv_destination = 0; // ds:0x434a
signed char g_dng08_waterbarrel = 0; // ds:0x434c
unsigned char g_dng13_collapsecount = 0; // ds:0x434d
unsigned char g_dng13_herocount = 0; // ds:0x434e
signed short g_camp_incident = -1; // ds:0x434f, -1 = not determined or will not happen, 0,1,2 = guard that will be affected
char g_known_monsters[78] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x4351
unsigned char g_nameless_destroyed = 0; // ds:0x439f
unsigned char g_deadship_final = 0; // ds:0x43a0
unsigned char g_dng09_lever_fast = 0; // ds:0x43a1
unsigned char g_dng11_soup_supply = 0x0a; // ds:0x43a2
signed short g_arsenal_money = -1; // ds:0x43a3, {-1, 0 - 60 }
signed char g_announce_day = 0; // ds:0x43a5, UNUSED
char g_known_persons[17] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x43a6
unsigned char g_unkn_027[3] = { 0x00, 0x00, 0x00 }; // ds:0x43b7
signed short g_diary_entry_counter = 0; // ds:0x43ba
struct{short day, month, year, town;} g_diary_entries[23] = {
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 },
	{ 0x0000, 0x0000, 0x0000, 0x0000 }
}; // ds:0x43bc
char g_datseg_status_end = 0; // ds:0x4474
unsigned char g_fading_state = 0; // ds:0x4475
unsigned char g_music_enabled = 1; // ds:0x4476
unsigned char g_snd_effects_enabled = 0; // ds:0x4477
unsigned char g_unkn_028[2] = { 0xff, 0xff }; // ds:0x4478
signed short g_music_current_track = -1; // ds:0x447a
unsigned short g_snd_voc_enabled = 0; // ds:0x447c
unsigned char g_unkn_029[2] = { 0x00, 0x20 }; // ds:0x447e
long g_str_file_missing_ptr = 0x14fc48b5; // ds:0x4480, to STR_FILE_MISSING; RealPt
unsigned short g_mouse_irq_init = 0; // ds:0x4484
unsigned char g_unkn_030[4] = { 0xff, 0xff, 0x00, 0x00 }; // ds:0x4486
char g_pause_string[10] = "P A U S E"; // ds:0x448a
unsigned char g_npc_last_farewellcheck = 0; // ds:0x4494
char g_check_party = 0; // ds:0x4495
char g_food_mod = 0; // ds:0x4496
unsigned char g_travel_herokeeping = 0; // ds:0x4497
struct{unsigned char r,g,b;} g_floor_fade_palette[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x28, 0x00, 0x28 },
	{ 0x16, 0x0c, 0x08 },
	{ 0x13, 0x09, 0x06 },
	{ 0x11, 0x06, 0x03 },
	{ 0x0f, 0x04, 0x01 },
	{ 0x0c, 0x01, 0x00 },
	{ 0x0a, 0x00, 0x00 },
	{ 0x08, 0x00, 0x00 },
	{ 0x05, 0x00, 0x00 },
	{ 0x03, 0x00, 0x00 },
	{ 0x01, 0x00, 0x00 },
	{ 0x00, 0x09, 0x00 },
	{ 0x00, 0x07, 0x00 },
	{ 0x00, 0x05, 0x00 },
	{ 0x00, 0x03, 0x00 },
	{ 0x00, 0x01, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x1f },
	{ 0x00, 0x00, 0x1c },
	{ 0x00, 0x00, 0x1a },
	{ 0x00, 0x00, 0x18 },
	{ 0x00, 0x00, 0x16 },
	{ 0x00, 0x00, 0x14 },
	{ 0x00, 0x00, 0x11 },
	{ 0x00, 0x00, 0x0f },
	{ 0x00, 0x00, 0x0d },
	{ 0x00, 0x00, 0x0b }
}; // ds:0x4498
struct{unsigned char r,g,b;} g_building_fade_palette[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x22, 0x22, 0x26 },
	{ 0x1b, 0x1b, 0x1f },
	{ 0x15, 0x15, 0x19 },
	{ 0x0f, 0x0f, 0x13 },
	{ 0x09, 0x09, 0x0d },
	{ 0x03, 0x03, 0x07 },
	{ 0x00, 0x00, 0x04 },
	{ 0x00, 0x00, 0x00 },
	{ 0x20, 0x19, 0x19 },
	{ 0x1b, 0x12, 0x12 },
	{ 0x16, 0x0c, 0x0c },
	{ 0x11, 0x06, 0x07 },
	{ 0x0b, 0x00, 0x04 },
	{ 0x07, 0x00, 0x04 },
	{ 0x01, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x0a, 0x00, 0x00 },
	{ 0x15, 0x00, 0x04 },
	{ 0x20, 0x00, 0x04 },
	{ 0x13, 0x15, 0x09 },
	{ 0x09, 0x0e, 0x03 },
	{ 0x00, 0x07, 0x04 },
	{ 0x00, 0x00, 0x04 },
	{ 0x00, 0x00, 0x00 },
	{ 0x1b, 0x0e, 0x04 },
	{ 0x12, 0x07, 0x04 },
	{ 0x09, 0x00, 0x04 },
	{ 0x00, 0x00, 0x01 },
	{ 0x00, 0x00, 0x08 },
	{ 0x00, 0x03, 0x0f },
	{ 0x00, 0x08, 0x16 }
}; // ds:0x44f8
struct{unsigned char r,g,b;} g_sky_fade_palette[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x11 },
	{ 0x00, 0x00, 0x1b },
	{ 0x28, 0x00, 0x28 },
	{ 0x28, 0x00, 0x28 },
	{ 0x0e, 0x0e, 0x19 },
	{ 0x0b, 0x0b, 0x17 },
	{ 0x09, 0x09, 0x15 },
	{ 0x07, 0x07, 0x14 },
	{ 0x05, 0x05, 0x12 },
	{ 0x04, 0x04, 0x11 },
	{ 0x02, 0x02, 0x0f },
	{ 0x01, 0x01, 0x0d },
	{ 0x01, 0x01, 0x0c },
	{ 0x00, 0x00, 0x0a },
	{ 0x00, 0x00, 0x09 },
	{ 0x00, 0x00, 0x0e },
	{ 0x00, 0x00, 0x0b },
	{ 0x00, 0x00, 0x09 },
	{ 0x00, 0x00, 0x07 },
	{ 0x00, 0x00, 0x04 },
	{ 0x00, 0x00, 0x02 },
	{ 0x00, 0x00, 0x00 },
	{ 0x28, 0x00, 0x28 },
	{ 0x28, 0x00, 0x28 },
	{ 0x28, 0x00, 0x28 },
	{ 0x28, 0x00, 0x28 },
	{ 0x28, 0x00, 0x28 },
	{ 0x07, 0x07, 0x16 },
	{ 0x07, 0x07, 0x15 },
	{ 0x07, 0x07, 0x14 },
	{ 0x08, 0x07, 0x13 }
}; // ds:0x4558
unsigned char g_special_screen = 1; // ds:0x45b8, , e.g. diary, treasure map, game options, automap
struct{char month, day, id;} g_special_days[43] = {
	{ 0x01, 0x01, 0x01 },
	{ 0x01, 0x02, 0x02 },
	{ 0x01, 0x03, 0x02 },
	{ 0x02, 0x05, 0x03 },
	{ 0x02, 0x0f, 0x04 },
	{ 0x02, 0x10, 0x04 },
	{ 0x03, 0x01, 0x05 },
	{ 0x03, 0x09, 0x06 },
	{ 0x03, 0x10, 0x07 },
	{ 0x03, 0x1d, 0x08 },
	{ 0x03, 0x1e, 0x09 },
	{ 0x04, 0x01, 0x0a },
	{ 0x04, 0x02, 0x0b },
	{ 0x04, 0x03, 0x0b },
	{ 0x04, 0x04, 0x0c },
	{ 0x04, 0x0c, 0x0d },
	{ 0x05, 0x01, 0x0e },
	{ 0x05, 0x16, 0x0f },
	{ 0x05, 0x18, 0x10 },
	{ 0x05, 0x1e, 0x11 },
	{ 0x06, 0x07, 0x12 },
	{ 0x06, 0x1e, 0x13 },
	{ 0x07, 0x01, 0x14 },
	{ 0x07, 0x1e, 0x15 },
	{ 0x08, 0x05, 0x16 },
	{ 0x08, 0x1e, 0x17 },
	{ 0x09, 0x10, 0x18 },
	{ 0x09, 0x18, 0x19 },
	{ 0x09, 0x1e, 0x1a },
	{ 0x0a, 0x01, 0x1b },
	{ 0x0a, 0x12, 0x1c },
	{ 0x0b, 0x01, 0x1d },
	{ 0x0b, 0x08, 0x1e },
	{ 0x0b, 0x15, 0x1f },
	{ 0x0c, 0x01, 0x20 },
	{ 0x0c, 0x02, 0x20 },
	{ 0x0c, 0x03, 0x20 },
	{ 0x0c, 0x04, 0x20 },
	{ 0x0c, 0x05, 0x20 },
	{ 0x0c, 0x06, 0x20 },
	{ 0x0c, 0x07, 0x20 },
	{ 0x0c, 0x1e, 0x21 },
	{ -0x01, 0x00, 0x00 }
}; // ds:0x45b9
char g_months_spring[4] = { 0x0a, 0x0b, 0x0c, -1 }; // ds:0x463a
char g_months_winter[4] = { 7, 8, 9, -1 }; // ds:0x463e
char g_months_summer[4] = { 1, 2, 3, -1 }; // ds:0x4642
signed short g_bank_heller = 0; // ds:0x4646
char g_consume_quiet = 0; // ds:0x4648
unsigned char g_herokeeping_flag = 0; // ds:0x4649
unsigned char g_unkn_031[4] = { 0x00, 0x00, 0x00, 0x00 }; // ds:0x464a
signed long g_level_ap_tab[21] = { 0x00000000, 0x00000064, 0x0000012c, 0x00000258, 0x000003e8, 0x000005dc, 0x00000834, 0x00000af0, 0x00000e10, 0x00001194, 0x0000157c, 0x000019c8, 0x00001e78, 0x0000238c, 0x00002904, 0x00002ee0, 0x00003520, 0x00003bc4, 0x000042cc, 0x00004a38, 0x00005208 }; // ds:0x464e
unsigned char g_delay_or_keypress_flag = 0; // ds:0x46a2, writeonly (0,1)
signed short g_merchant_items_posx[15] = { 0x001e, 0x001e, 0x001e, 0x001e, 0x001e, 0x005f, 0x005f, 0x005f, 0x005f, 0x005f, 0x00a0, 0x00a0, 0x00a0, 0x00a0, 0x00a0 }; // ds:0x46a3
signed short g_merchant_items_posy[15] = { 0x0023, 0x0037, 0x004b, 0x005f, 0x0073, 0x0023, 0x0037, 0x004b, 0x005f, 0x0073, 0x0023, 0x0037, 0x004b, 0x005f, 0x0073 }; // ds:0x46c1
signed char g_refresh_status_line = 0; // ds:0x46df
char g_dsa_version_string[12] = "DSA VERSION"; // ds:0x46e0
char g_game_version[6] = "V3.02"; // ds:0x46ec
unsigned char g_unkn_032[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0x46f2
unsigned char g_version_token1 = 3; // ds:0x46f8, = 3
unsigned char g_version_token2 = 1; // ds:0x46f9, = 1
unsigned char g_version_token3 = 1; // ds:0x46fa, = 1
unsigned char g_version_token4 = 1; // ds:0x46fb, = 1
struct{unsigned char unkn[19];} g_questions_handbook[10] = {
	{ 0x01, 0x06, 0x02, 0x07, 0xab, 0xb7, 0xb0, 0xad, 0xa8, 0xbe, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x07, 0x01, 0x0c, 0xa9, 0xb0, 0xad, 0xac, 0xb6, 0xbc, 0xb7, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x02, 0x02, 0x01, 0x11, 0xa8, 0xb6, 0xac, 0xac, 0xba, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x03, 0x02, 0x19, 0xb0, 0xad, 0xab, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x05, 0x02, 0x3a, 0xb7, 0xba, 0xa7, 0xba, 0xb1, 0xb4, 0xb1, 0xb0, 0xab, 0xba, 0xb1, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x3c, 0xac, 0xab, 0xbe, 0xbd, 0xa5, 0xbe, 0xaa, 0xbd, 0xba, 0xad, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x05, 0x01, 0x43, 0xaf, 0xbe, 0xad, 0xbe, 0xbb, 0xba, 0xa8, 0xba, 0xad, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x01, 0x01, 0x4a, 0xac, 0xb4, 0xba, 0xb3, 0xba, 0xab, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x05, 0x02, 0x4d, 0xb0, 0xb3, 0xb8, 0xb6, 0xb1, 0xa8, 0xaa, 0xad, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x02, 0x01, 0x57, 0xbe, 0xbd, 0xac, 0xbc, 0xb7, 0xb1, 0xb6, 0xab, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x46fc
struct{unsigned char unkn[3];} g_questions_map[10] = {
	{ 0x00, 0x0a, 0x09 },
	{ 0x01, 0x05, 0x06 },
	{ 0x03, 0x26, 0x20 },
	{ 0x01, 0x1e, 0x1c },
	{ 0x02, 0x14, 0x11 },
	{ 0x02, 0x08, 0x07 },
	{ 0x00, 0x0b, 0x0c },
	{ 0x00, 0x28, 0x29 },
	{ 0x00, 0x18, 0x2e },
	{ 0x03, 0x19, 0x1a }
}; // ds:0x47ba
char g_snd_menu_question[17] = "BITTE AUSW\x8eHLEN:"; // ds:0x47d8
char g_snd_menu_radio1[12] = "KEINE MUSIK"; // ds:0x47e9
char g_snd_menu_radio2[10] = "NUR MUSIK"; // ds:0x47f5
char g_snd_menu_radio3[12] = "NUR EFFEKTE"; // ds:0x47ff
char g_snd_menu_radio4[18] = "MUSIK UND EFFEKTE"; // ds:0x480b
char g_fname_sound_cfg[10] = "SOUND.CFG"; // ds:0x481d
char g_fname_sound_adv2[10] = "SOUND.ADV"; // ds:0x4827
char g_fname_digi_adv[9] = "DIGI.ADV"; // ds:0x4831
char g_snd_txt_disabled_mem[51] = "SOUND EFFEKTE ABGESCHALTET - NICHT GENUG SPEICHER!"; // ds:0x483a
char g_snd_txt_hw_not_found[31] = "SOUND HARDWARE NICHT GEFUNDEN!"; // ds:0x486d
char g_fname_sound_adv[10] = "SOUND.ADV"; // ds:0x488c
char g_snd_txt_hw_not_found2[31] = { 0x53, 0x4f, 0x55, 0x4e, 0x44, 0x20, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x20, 0x4e, 0x49, 0x43, 0x48, 0x54, 0x20, 0x47, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x4e, 0x21, 0x00 }; // ds:0x4896, == SND_TXT_HW_NOT_FOUND
char g_str_file_missing[20] = "FILE %s IS MISSING!"; // ds:0x48b5
unsigned char g_unkn_033[1] = { 0x00 }; // ds:0x48c9
char g_fname_schick_dat[11] = "SCHICK.DAT"; // ds:0x48ca
char g_snd_txt_disabled_mem2[43] = "MUSIK ABGESCHALTET - NICHT GENUG SPEICHER!"; // ds:0x48d5
char g_diary_string1[14] = "%2d.~%-8s~%s."; // ds:0x4900
char g_diary_string2[17] = "%2d.~%-8s~IN %s."; // ds:0x490e
char g_diary_string3[27] = "%2d.~%-8s~BESUCHEN VON %s."; // ds:0x491f
char g_diary_string4[6] = "~~%s."; // ds:0x493a
char g_diary_string5[9] = "~~IN %s."; // ds:0x4940
char g_diary_string6[19] = "~~ABENTEUER IN %s."; // ds:0x4949
char g_diary_string7[19] = "~~RUMH\x8eNGEN IN %s."; // ds:0x495c
unsigned char g_unkn_034[1] = { 0x00 }; // ds:0x496f
struct{signed char x,y;} g_visual_field_dir0[31] = {
	{ -0x01, 0x00 },
	{ 0x00, 0x00 },
	{ 0x01, 0x00 },
	{ -0x02, -1 },
	{ -0x01, -1 },
	{ 0x00, -1 },
	{ 0x01, -1 },
	{ 0x02, -1 },
	{ -0x03, -0x02 },
	{ -0x02, -0x02 },
	{ -0x01, -0x02 },
	{ 0x00, -0x02 },
	{ 0x01, -0x02 },
	{ 0x02, -0x02 },
	{ 0x03, -0x02 },
	{ -0x03, -0x03 },
	{ -0x02, -0x03 },
	{ -0x01, -0x03 },
	{ 0x00, -0x03 },
	{ 0x01, -0x03 },
	{ 0x02, -0x03 },
	{ 0x03, -0x03 },
	{ -0x03, -0x04 },
	{ -0x02, -0x04 },
	{ -0x01, -0x04 },
	{ 0x00, -0x04 },
	{ 0x01, -0x04 },
	{ 0x02, -0x04 },
	{ 0x03, -0x04 },
	{ 0x00, -1 },
	{ 0x00, 0x01 }
}; // ds:0x4970
struct{signed char x,y;} g_visual_field_dir1[31] = {
	{ 0x00, -1 },
	{ 0x00, 0x00 },
	{ 0x00, 0x01 },
	{ 0x01, -0x02 },
	{ 0x01, -1 },
	{ 0x01, 0x00 },
	{ 0x01, 0x01 },
	{ 0x01, 0x02 },
	{ 0x02, -0x03 },
	{ 0x02, -0x02 },
	{ 0x02, -1 },
	{ 0x02, 0x00 },
	{ 0x02, 0x01 },
	{ 0x02, 0x02 },
	{ 0x02, 0x03 },
	{ 0x03, -0x03 },
	{ 0x03, -0x02 },
	{ 0x03, -1 },
	{ 0x03, 0x00 },
	{ 0x03, 0x01 },
	{ 0x03, 0x02 },
	{ 0x03, 0x03 },
	{ 0x04, -0x03 },
	{ 0x04, -0x02 },
	{ 0x04, -1 },
	{ 0x04, 0x00 },
	{ 0x04, 0x01 },
	{ 0x04, 0x02 },
	{ 0x04, 0x03 },
	{ 0x01, 0x00 },
	{ -0x01, 0x00 }
}; // ds:0x49ae
struct{signed char x,y;} g_visual_field_dir2[31] = {
	{ 0x01, 0x00 },
	{ 0x00, 0x00 },
	{ -0x01, 0x00 },
	{ 0x02, 0x01 },
	{ 0x01, 0x01 },
	{ 0x00, 0x01 },
	{ -0x01, 0x01 },
	{ -0x02, 0x01 },
	{ 0x03, 0x02 },
	{ 0x02, 0x02 },
	{ 0x01, 0x02 },
	{ 0x00, 0x02 },
	{ -0x01, 0x02 },
	{ -0x02, 0x02 },
	{ -0x03, 0x02 },
	{ 0x03, 0x03 },
	{ 0x02, 0x03 },
	{ 0x01, 0x03 },
	{ 0x00, 0x03 },
	{ -0x01, 0x03 },
	{ -0x02, 0x03 },
	{ -0x03, 0x03 },
	{ 0x03, 0x04 },
	{ 0x02, 0x04 },
	{ 0x01, 0x04 },
	{ 0x00, 0x04 },
	{ -0x01, 0x04 },
	{ -0x02, 0x04 },
	{ -0x03, 0x04 },
	{ 0x00, 0x01 },
	{ 0x00, -1 }
}; // ds:0x49ec
struct{signed char x,y;} g_visual_field_dir3[31] = {
	{ 0x00, 0x01 },
	{ 0x00, 0x00 },
	{ 0x00, -1 },
	{ -0x01, 0x02 },
	{ -0x01, 0x01 },
	{ -0x01, 0x00 },
	{ -0x01, -1 },
	{ -0x01, -0x02 },
	{ -0x02, 0x03 },
	{ -0x02, 0x02 },
	{ -0x02, 0x01 },
	{ -0x02, 0x00 },
	{ -0x02, -1 },
	{ -0x02, -0x02 },
	{ -0x02, -0x03 },
	{ -0x03, 0x03 },
	{ -0x03, 0x02 },
	{ -0x03, 0x01 },
	{ -0x03, 0x00 },
	{ -0x03, -1 },
	{ -0x03, -0x02 },
	{ -0x03, -0x03 },
	{ -0x04, 0x03 },
	{ -0x04, 0x02 },
	{ -0x04, 0x01 },
	{ -0x04, 0x00 },
	{ -0x04, -1 },
	{ -0x04, -0x02 },
	{ -0x04, -0x03 },
	{ -0x01, 0x00 },
	{ 0x01, 0x00 }
}; // ds:0x4a2a
char g_noway_string[40] = "IN DIESE RICHTUNG GEHT ES NICHT WEITER."; // ds:0x4a68
unsigned short g_ani_busy = 0; // ds:0x4a90
unsigned short g_pic_copy_flag = 0; // ds:0x4a92
char g_status_bar_colors[4] = { -0x10, 0x00, -0x07, 0x00 }; // ds:0x4a94, {le_color, 0, ae_color, 0}
unsigned char g_unkn_035[2] = { 0x00, 0x00 }; // ds:0x4a98
signed char g_status_page_hunger_max_counter = 0; // ds:0x4a9a
signed char g_status_page_hunger_max_color = 0; // ds:0x4a9b
signed char g_status_page_thirst_max_counter = 0; // ds:0x4a9c
signed char g_status_page_thirst_max_color = 0; // ds:0x4a9d
signed short g_wallclock_pos = 0; // ds:0x4a9e, position of sun/moon
signed char g_wallclock_pos_y[81] = { 0x14, 0x12, 0x11, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0b, 0x0a, 0x09, 0x09, 0x08, 0x07, 0x07, 0x06, 0x06, 0x05, 0x05, 0x05, 0x04, 0x04, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x07, 0x07, 0x08, 0x09, 0x09, 0x0a, 0x0b, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x14 }; // ds:0x4aa0
struct{unsigned char r,g,b;} g_wallclock_palette_day[3] = { { 0x10, 0x14, 0x3c }, { 0x00, 0x08, 0x38 }, { 0x00, 0x08, 0x34 } }; // ds:0x4af1
struct{unsigned char r,g,b;} g_wallclock_palette_night[3] = { { 0x00, 0x00, 0x1a }, { 0x00, 0x00, 0x18 }, { 0x00, 0x00, 0x1c } }; // ds:0x4afa
char g_color_pal_black[3] = { 0x3f, 0x3f, 0x3f }; // ds:0x4b03, {0x3f,0x3f,0x3f}
struct{unsigned char r,g,b;} g_palette_allblack[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x00 }
}; // ds:0x4b06
short g_delay_factor = 4; // ds:0x4b66
long g_str_temp_xx_ptr = 0x14fc4b95; // ds:0x4b68, to STR_TEMP_XX; RealPt
signed char g_fig_star_colors[12] = { 0x03, 0x03, 0x0c, 0x0c, 0x04, 0x0b, 0x0d, 0x01, 0x07, 0x0e, 0x02, 0x07 }; // ds:0x4b6c
signed char g_fig_star_counter = 0; // ds:0x4b78
signed short g_fig_star_timer = 0; // ds:0x4b79
unsigned char g_fig_star_last_count = 0xff; // ds:0x4b7b
signed short g_fig_msg_dtps[12] = { 0x0036, 0x0037, 0x0036, 0x0037, 0x0038, 0x0039, 0x003a, 0x003b, 0x0000, 0x0000, 0x003b, 0x0000 }; // ds:0x4b7c
signed char g_fig_star_printed = 0; // ds:0x4b94
char g_str_temp_xx[8] = "TEMP\\XX"; // ds:0x4b95
unsigned char g_unkn_036[1] = { 0x00 }; // ds:0x4b9d
signed short g_fight_figs_index = -1; // ds:0x4b9e
unsigned short g_random_schick_seed = 0x327b; // ds:0x4ba0
char g_emm_sig[8] = { 0x45, 0x4d, 0x4d, 0x58, 0x58, 0x58, 0x58, 0x30 }; // ds:0x4ba2
long g_ems_frame_ptr = 0; // ds:0x4baa; RealPt
struct{signed short x1, x2, y1, y2; unsigned short action;} g_action_table_options[10] = {
	{ 0x0005, 0x001e, 0x001c, 0x0035, 0x0081 },
	{ 0x0005, 0x003c, 0x001c, 0x0053, 0x0082 },
	{ 0x0005, 0x005a, 0x001c, 0x0071, 0x0083 },
	{ 0x0046, 0x00aa, 0x005d, 0x00c1, 0x0084 },
	{ 0x006e, 0x00aa, 0x0085, 0x00c1, 0x0085 },
	{ 0x0096, 0x00aa, 0x00ad, 0x00c1, 0x0086 },
	{ 0x00be, 0x00aa, 0x00d5, 0x00c1, 0x0087 },
	{ 0x00ec, 0x00aa, 0x0103, 0x00c1, 0x0088 },
	{ 0x0000, 0x0000, 0x013f, 0x00c7, 0x0089 },
	{ -0x0001, -0x0001, -0x0001, -0x0001, 0xffff }
}; // ds:0x4bae
signed short g_tmap_x[10] = { 0x0002, 0x0076, 0x00c1, 0x0003, 0x0076, 0x00c1, 0x0000, 0x0076, 0x00c1, 0x0000 }; // ds:0x4c12
signed short g_tmap_y[10] = { 0x0004, 0x0004, 0x0004, 0x0046, 0x0046, 0x0046, 0x0088, 0x0088, 0x0088, 0x0088 }; // ds:0x4c26
unsigned char g_renderbuf_in_use_flag = 0; // ds:0x4c3a
long g_location_handlers[19] = { 0x00000000, 0x14f90020, 0x137e0020, 0x13770020, 0x13620020, 0x13690020, 0x135c0020, 0x13650020, 0x13730020, 0x138e0020, 0x12de003e, 0x13860020, 0x12de0052, 0x12de004d, 0x12de0039, 0x00000000, 0x12de0048, 0x1392002f, 0x135f0020 }; // ds:0x4c3b, (void (*)(void))[19]; RealPt
unsigned char g_unkn_037[1] = { 0x00 }; // ds:0x4c87
long g_str_temp_xx_ptr2 = 0x14fc515e; // ds:0x4c88, to STR_TEMP_XX2; RealPt
long g_fnames[308] = { 0x14fc5167, 0x14fc5170, 0x14fc517b, 0x14fc5186, 0x14fc5191, 0x14fc519c, 0x14fc51a6, 0x14fc51ad, 0x14fc51b9, 0x14fc51c3, 0x14fc51cd, 0x14fc51d8, 0x14fc51de, 0x14fc51e4, 0x14fc51ee, 0x14fc51f7, 0x14fc51fd, 0x14fc5205, 0x14fc5211, 0x14fc5219, 0x14fc5225, 0x14fc522e, 0x14fc523b, 0x14fc5240, 0x14fc5249, 0x14fc524f, 0x14fc5259, 0x14fc5265, 0x14fc5270, 0x14fc527b, 0x14fc5288, 0x14fc5295, 0x14fc52a2, 0x14fc52ad, 0x14fc52ba, 0x14fc52c5, 0x14fc52d2, 0x14fc52dd, 0x14fc52e8, 0x14fc52f8, 0x14fc5303, 0x14fc5310, 0x14fc531a, 0x14fc5328, 0x14fc5335, 0x14fc5342, 0x14fc534f, 0x14fc535c, 0x14fc5369, 0x14fc5375, 0x14fc5380, 0x14fc538a, 0x14fc5396, 0x14fc539e, 0x14fc53a8, 0x14fc53b6, 0x14fc53c0, 0x14fc53cd, 0x14fc53da, 0x14fc53e3, 0x14fc53ee, 0x14fc53f7, 0x14fc5404, 0x14fc5410, 0x14fc541a, 0x14fc5423, 0x14fc542f, 0x14fc5439, 0x14fc5446, 0x14fc5453, 0x14fc5460, 0x14fc546b, 0x14fc5477, 0x14fc5484, 0x14fc548f, 0x14fc549b, 0x14fc54a8, 0x14fc54b5, 0x14fc54bf, 0x14fc54cb, 0x14fc54d6, 0x14fc54e1, 0x14fc54ee, 0x14fc54fb, 0x14fc5508, 0x14fc5513, 0x14fc5520, 0x14fc552b, 0x14fc5538, 0x14fc5543, 0x14fc554e, 0x14fc555b, 0x14fc5566, 0x14fc5573, 0x14fc557d, 0x14fc558a, 0x14fc5597, 0x14fc55a4, 0x14fc55b1, 0x14fc55be, 0x14fc55cb, 0x14fc55d7, 0x14fc55e2, 0x14fc55ec, 0x14fc55f8, 0x14fc5600, 0x14fc560a, 0x14fc5617, 0x14fc5621, 0x14fc562e, 0x14fc563b, 0x14fc5644, 0x14fc564f, 0x14fc5658, 0x14fc5665, 0x14fc5671, 0x14fc567b, 0x14fc5684, 0x14fc5690, 0x14fc569a, 0x14fc56a7, 0x14fc56b4, 0x14fc56c1, 0x14fc56cc, 0x14fc56d8, 0x14fc56e5, 0x14fc56f0, 0x14fc56fd, 0x14fc570a, 0x14fc5717, 0x14fc5723, 0x14fc572e, 0x14fc5739, 0x14fc5745, 0x14fc574f, 0x14fc5758, 0x14fc5764, 0x14fc5771, 0x14fc577b, 0x14fc5786, 0x14fc5791, 0x14fc579c, 0x14fc57a8, 0x14fc57b4, 0x14fc57c0, 0x14fc57cb, 0x14fc57d5, 0x14fc57df, 0x14fc57e7, 0x14fc57f2, 0x14fc57fb, 0x14fc5807, 0x14fc5811, 0x14fc5817, 0x14fc5821, 0x14fc5822, 0x14fc5823, 0x14fc582c, 0x14fc5838, 0x14fc5839, 0x14fc5846, 0x14fc5853, 0x14fc5860, 0x14fc586a, 0x14fc5874, 0x14fc587e, 0x14fc5888, 0x14fc5892, 0x14fc589c, 0x14fc58a6, 0x14fc58b2, 0x14fc58be, 0x14fc58ca, 0x14fc58d6, 0x14fc58df, 0x14fc58ea, 0x14fc58f7, 0x14fc5903, 0x14fc590c, 0x14fc5919, 0x14fc5926, 0x14fc592f, 0x14fc593a, 0x14fc5946, 0x14fc5953, 0x14fc595f, 0x14fc596c, 0x14fc5977, 0x14fc5982, 0x14fc598d, 0x14fc5998, 0x14fc59a4, 0x14fc59b1, 0x14fc59be, 0x14fc59cb, 0x14fc59d8, 0x14fc59e5, 0x14fc59f2, 0x14fc59ff, 0x14fc5a0c, 0x14fc5a19, 0x14fc5a26, 0x14fc5a32, 0x14fc5a3e, 0x14fc5a4a, 0x14fc5a56, 0x14fc5a60, 0x14fc5a6b, 0x14fc5a75, 0x14fc5a7e, 0x14fc5a87, 0x14fc5a94, 0x14fc5aa1, 0x14fc5aad, 0x14fc5ab8, 0x14fc5ac1, 0x14fc5aca, 0x14fc5ad2, 0x14fc5ade, 0x14fc5aea, 0x14fc5af6, 0x14fc5b00, 0x14fc5b0d, 0x14fc5b1a, 0x14fc5b25, 0x14fc5b31, 0x14fc5b39, 0x14fc5b45, 0x14fc5b50, 0x14fc5b5b, 0x14fc5b66, 0x14fc5b72, 0x14fc5b7b, 0x14fc5b86, 0x14fc5b90, 0x14fc5b96, 0x14fc5ba0, 0x14fc5bad, 0x14fc5bba, 0x14fc5bc4, 0x14fc5bce, 0x14fc5bd7, 0x14fc5be4, 0x14fc5bed, 0x14fc5bf6, 0x14fc5bff, 0x14fc5c08, 0x14fc5c11, 0x14fc5c1a, 0x14fc5c23, 0x14fc5c2c, 0x14fc5c35, 0x14fc5c3e, 0x14fc5c47, 0x14fc5c50, 0x14fc5c59, 0x14fc5c65, 0x14fc5c6f, 0x14fc5c78, 0x14fc5c81, 0x14fc5c8a, 0x14fc5c93, 0x14fc5c9c, 0x14fc5ca5, 0x14fc5cae, 0x14fc5cb7, 0x14fc5cc0, 0x14fc5cc9, 0x14fc5cd2, 0x14fc5cdb, 0x14fc5ce4, 0x14fc5cf0, 0x14fc5cfa, 0x14fc5d03, 0x14fc5d0c, 0x14fc5d15, 0x14fc5d1e, 0x14fc5d27, 0x14fc5d30, 0x14fc5d39, 0x14fc5d42, 0x14fc5d4b, 0x14fc5d54, 0x14fc5d5d, 0x14fc5d66, 0x14fc5d6f, 0x14fc5d7b, 0x14fc5d85, 0x14fc5d91, 0x14fc5d9b, 0x14fc5da3, 0x14fc5dab, 0x14fc5db3, 0x14fc5dbb, 0x14fc5dc3, 0x14fc5dcb, 0x14fc5dd3, 0x14fc5ddb, 0x14fc5de3, 0x14fc5dec, 0x14fc5df5, 0x14fc5dfe, 0x14fc5e07, 0x14fc5e10, 0x14fc5e19, 0x14fc5e22, 0x14fc5e2b, 0x14fc5e34 }; // ds:0x4c8c
unsigned short g_loaded_head_id = 0xffff; // ds:0x515c
char g_str_temp_xx2[8] = "TEMP\\%s"; // ds:0x515e
char g_schick_dat_fnames[3288] = { 0x00, 0x50, 0x4c, 0x41, 0x59, 0x4d, 0x5f, 0x55, 0x4b, 0x00, 0x4b, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x43, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x53, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x41, 0x52, 0x54, 0x45, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x42, 0x49, 0x43, 0x4f, 0x4e, 0x53, 0x00, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x53, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4c, 0x52, 0x4f, 0x55, 0x54, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x53, 0x52, 0x4f, 0x55, 0x54, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x48, 0x53, 0x52, 0x4f, 0x55, 0x54, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x4f, 0x4e, 0x54, 0x36, 0x00, 0x46, 0x4f, 0x4e, 0x54, 0x38, 0x00, 0x47, 0x47, 0x53, 0x54, 0x53, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x54, 0x45, 0x58, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x49, 0x43, 0x4f, 0x4e, 0x53, 0x00, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x00, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x2e, 0x54, 0x41, 0x42, 0x00, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x53, 0x53, 0x00, 0x4d, 0x41, 0x50, 0x54, 0x45, 0x58, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x5a, 0x55, 0x53, 0x54, 0x41, 0x5f, 0x55, 0x4b, 0x00, 0x46, 0x49, 0x47, 0x48, 0x54, 0x54, 0x58, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x41, 0x4e, 0x49, 0x53, 0x00, 0x41, 0x4e, 0x49, 0x53, 0x2e, 0x54, 0x41, 0x42, 0x00, 0x4d, 0x46, 0x49, 0x47, 0x53, 0x00, 0x4d, 0x46, 0x49, 0x47, 0x53, 0x2e, 0x54, 0x41, 0x42, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x53, 0x45, 0x52, 0x53, 0x4b, 0x45, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x42, 0x52, 0x45, 0x49, 0x44, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x50, 0x45, 0x49, 0x4c, 0x49, 0x4e, 0x45, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x4f, 0x56, 0x41, 0x4d, 0x55, 0x4e, 0x44, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4e, 0x4f, 0x52, 0x44, 0x56, 0x45, 0x53, 0x54, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x52, 0x41, 0x56, 0x49, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x4c, 0x4c, 0x45, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4d, 0x45, 0x52, 0x53, 0x4b, 0x45, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x45, 0x46, 0x46, 0x45, 0x52, 0x44, 0x55, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x4a, 0x4f, 0x49, 0x4c, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x55, 0x4b, 0x49, 0x41, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x41, 0x4e, 0x47, 0x42, 0x4f, 0x44, 0x49, 0x52, 0x54, 0x41, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x41, 0x55, 0x50, 0x4c, 0x4f, 0x47, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x56, 0x49, 0x4c, 0x4e, 0x48, 0x45, 0x49, 0x4d, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x42, 0x4f, 0x44, 0x4f, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4f, 0x42, 0x45, 0x52, 0x4f, 0x52, 0x4b, 0x45, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x50, 0x48, 0x45, 0x58, 0x43, 0x41, 0x45, 0x52, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x47, 0x52, 0x4f, 0x45, 0x4e, 0x56, 0x45, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x45, 0x4c, 0x53, 0x54, 0x45, 0x59, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x45, 0x49, 0x4e, 0x53, 0x49, 0x45, 0x44, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4f, 0x52, 0x4b, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x43, 0x4c, 0x41, 0x4e, 0x45, 0x47, 0x48, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4c, 0x49, 0x53, 0x4b, 0x4f, 0x52, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x48, 0x4f, 0x53, 0x53, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x4a, 0x41, 0x4e, 0x53, 0x45, 0x54, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x41, 0x4c, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4f, 0x52, 0x56, 0x49, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4f, 0x56, 0x45, 0x52, 0x54, 0x48, 0x4f, 0x52, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x4f, 0x56, 0x49, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x48, 0x4a, 0x41, 0x4c, 0x53, 0x49, 0x4e, 0x47, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x47, 0x55, 0x44, 0x44, 0x41, 0x53, 0x55, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x4f, 0x52, 0x44, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x52, 0x45, 0x42, 0x41, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x41, 0x52, 0x59, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x48, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4f, 0x54, 0x54, 0x41, 0x52, 0x4a, 0x45, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x53, 0x4b, 0x4a, 0x41, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x50, 0x52, 0x45, 0x4d, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x44, 0x41, 0x53, 0x50, 0x4f, 0x54, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x59, 0x42, 0x4f, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4c, 0x4a, 0x41, 0x53, 0x44, 0x41, 0x48, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x56, 0x41, 0x52, 0x4e, 0x48, 0x45, 0x49, 0x4d, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x56, 0x41, 0x45, 0x52, 0x4d, 0x48, 0x41, 0x47, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x59, 0x4c, 0x44, 0x4f, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x56, 0x49, 0x44, 0x53, 0x41, 0x4e, 0x44, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x42, 0x52, 0x45, 0x4e, 0x44, 0x48, 0x49, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4d, 0x41, 0x4e, 0x52, 0x49, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x54, 0x4a, 0x4f, 0x49, 0x4c, 0x41, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x41, 0x4e, 0x47, 0x42, 0x4f, 0x44, 0x49, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x48, 0x4a, 0x41, 0x4c, 0x4c, 0x41, 0x4e, 0x44, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x52, 0x55, 0x4e, 0x49, 0x4e, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x45, 0x52, 0x53, 0x4b, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x42, 0x52, 0x45, 0x49, 0x44, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x50, 0x45, 0x49, 0x4c, 0x49, 0x4e, 0x45, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x52, 0x4f, 0x56, 0x41, 0x4d, 0x55, 0x4e, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4e, 0x4f, 0x52, 0x44, 0x56, 0x45, 0x53, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4b, 0x52, 0x41, 0x56, 0x49, 0x4b, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x4b, 0x45, 0x4c, 0x45, 0x4c, 0x4c, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4d, 0x45, 0x52, 0x53, 0x4b, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x45, 0x46, 0x46, 0x45, 0x52, 0x44, 0x55, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x4a, 0x4f, 0x49, 0x4c, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x52, 0x55, 0x4b, 0x49, 0x41, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x41, 0x4e, 0x47, 0x42, 0x4f, 0x44, 0x49, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x41, 0x55, 0x50, 0x4c, 0x4f, 0x47, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x56, 0x49, 0x4c, 0x4e, 0x48, 0x45, 0x49, 0x4d, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x42, 0x4f, 0x44, 0x4f, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4f, 0x42, 0x45, 0x52, 0x4f, 0x52, 0x4b, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x50, 0x48, 0x45, 0x58, 0x43, 0x41, 0x45, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x47, 0x52, 0x4f, 0x45, 0x4e, 0x56, 0x45, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x4c, 0x53, 0x54, 0x45, 0x59, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x45, 0x49, 0x4e, 0x53, 0x49, 0x45, 0x44, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4f, 0x52, 0x4b, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x43, 0x4c, 0x41, 0x4e, 0x45, 0x47, 0x48, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4c, 0x49, 0x53, 0x4b, 0x4f, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x48, 0x4f, 0x53, 0x53, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x4a, 0x41, 0x4e, 0x53, 0x45, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x41, 0x4c, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4f, 0x52, 0x56, 0x49, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4f, 0x56, 0x45, 0x52, 0x54, 0x48, 0x4f, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x52, 0x4f, 0x56, 0x49, 0x4b, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x48, 0x4a, 0x41, 0x4c, 0x53, 0x49, 0x4e, 0x47, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x47, 0x55, 0x44, 0x44, 0x41, 0x53, 0x55, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4b, 0x4f, 0x52, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x52, 0x45, 0x42, 0x41, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x41, 0x52, 0x59, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x52, 0x55, 0x4e, 0x49, 0x4e, 0x53, 0x48, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4f, 0x54, 0x54, 0x41, 0x52, 0x4a, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x4b, 0x4a, 0x41, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x50, 0x52, 0x45, 0x4d, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x44, 0x41, 0x53, 0x50, 0x4f, 0x54, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x52, 0x59, 0x42, 0x4f, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4c, 0x4a, 0x41, 0x53, 0x44, 0x41, 0x48, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x56, 0x41, 0x52, 0x4e, 0x48, 0x45, 0x49, 0x4d, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x56, 0x41, 0x45, 0x52, 0x4d, 0x48, 0x41, 0x47, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x59, 0x4c, 0x44, 0x4f, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x56, 0x49, 0x44, 0x53, 0x41, 0x4e, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x42, 0x52, 0x45, 0x4e, 0x44, 0x48, 0x49, 0x4c, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4d, 0x41, 0x4e, 0x52, 0x49, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x5f, 0x54, 0x4a, 0x4f, 0x49, 0x4c, 0x41, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x5f, 0x41, 0x4e, 0x47, 0x42, 0x4f, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x48, 0x4a, 0x41, 0x4c, 0x4c, 0x41, 0x4e, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4c, 0x5f, 0x52, 0x55, 0x4e, 0x49, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x41, 0x56, 0x45, 0x52, 0x4e, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x53, 0x50, 0x53, 0x54, 0x41, 0x52, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x47, 0x55, 0x45, 0x52, 0x54, 0x45, 0x4c, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x41, 0x46, 0x45, 0x4e, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x41, 0x43, 0x45, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x59, 0x47, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x59, 0x47, 0x47, 0x45, 0x4c, 0x49, 0x4b, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x53, 0x4b, 0x55, 0x4c, 0x4c, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4f, 0x55, 0x54, 0x52, 0x4f, 0x31, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4f, 0x55, 0x54, 0x52, 0x4f, 0x32, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4f, 0x55, 0x54, 0x52, 0x4f, 0x33, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x54, 0x4f, 0x57, 0x4e, 0x50, 0x41, 0x4c, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x45, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x54, 0x45, 0x52, 0x4d, 0x53, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x53, 0x4d, 0x49, 0x54, 0x48, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x49, 0x4e, 0x4e, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x48, 0x45, 0x41, 0x4c, 0x45, 0x52, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x43, 0x41, 0x4d, 0x50, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x56, 0x49, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x2e, 0x41, 0x44, 0x00, 0x41, 0x54, 0x54, 0x49, 0x43, 0x00, 0x50, 0x4f, 0x50, 0x55, 0x50, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x00, 0x00, 0x46, 0x30, 0x39, 0x32, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x48, 0x45, 0x52, 0x42, 0x45, 0x52, 0x47, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x00, 0x44, 0x41, 0x53, 0x50, 0x4f, 0x54, 0x41, 0x31, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x44, 0x41, 0x53, 0x50, 0x4f, 0x54, 0x41, 0x32, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x44, 0x41, 0x53, 0x50, 0x4f, 0x54, 0x41, 0x33, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x31, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x32, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x33, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x34, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x35, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x36, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x49, 0x4e, 0x46, 0x4f, 0x37, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x53, 0x43, 0x48, 0x4d, 0x49, 0x45, 0x44, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x47, 0x48, 0x41, 0x4e, 0x44, 0x45, 0x4c, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x4b, 0x48, 0x41, 0x4e, 0x44, 0x45, 0x4c, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x57, 0x48, 0x41, 0x4e, 0x44, 0x45, 0x4c, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x46, 0x31, 0x31, 0x35, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x45, 0x52, 0x45, 0x4d, 0x49, 0x54, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x48, 0x59, 0x47, 0x47, 0x45, 0x4c, 0x49, 0x4b, 0x2e, 0x54, 0x4c, 0x4b, 0x00, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x53, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x42, 0x55, 0x43, 0x48, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x53, 0x50, 0x45, 0x4c, 0x4c, 0x4f, 0x42, 0x4a, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x49, 0x4e, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x53, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x54, 0x45, 0x4d, 0x50, 0x49, 0x43, 0x4f, 0x4e, 0x00, 0x53, 0x48, 0x49, 0x50, 0x53, 0x4c, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x53, 0x4c, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4d, 0x41, 0x52, 0x42, 0x4c, 0x45, 0x53, 0x4c, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x54, 0x46, 0x4c, 0x4f, 0x4f, 0x52, 0x31, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x54, 0x44, 0x49, 0x56, 0x45, 0x52, 0x53, 0x45, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x31, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x32, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x33, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x34, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x31, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x32, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x33, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x34, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x35, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x36, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x37, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x38, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x49, 0x47, 0x48, 0x54, 0x4f, 0x42, 0x4a, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x53, 0x43, 0x45, 0x4e, 0x41, 0x52, 0x49, 0x4f, 0x2e, 0x4c, 0x53, 0x54, 0x00, 0x4b, 0x44, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x43, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4b, 0x53, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x49, 0x47, 0x48, 0x54, 0x2e, 0x4c, 0x53, 0x54, 0x00, 0x53, 0x4b, 0x41, 0x52, 0x54, 0x45, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x2e, 0x4e, 0x41, 0x4d, 0x00, 0x49, 0x54, 0x45, 0x4d, 0x4e, 0x41, 0x4d, 0x45, 0x00, 0x4d, 0x4f, 0x4e, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x31, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x32, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x43, 0x4f, 0x4d, 0x42, 0x41, 0x54, 0x2e, 0x58, 0x4d, 0x49, 0x00, 0x50, 0x4c, 0x41, 0x59, 0x4d, 0x5f, 0x55, 0x53, 0x00, 0x5a, 0x55, 0x53, 0x54, 0x41, 0x5f, 0x55, 0x53, 0x00, 0x41, 0x4e, 0x49, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x57, 0x45, 0x41, 0x50, 0x41, 0x4e, 0x49, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x42, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x53, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x43, 0x48, 0x41, 0x52, 0x54, 0x45, 0x58, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x50, 0x45, 0x4c, 0x4c, 0x54, 0x58, 0x54, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x57, 0x4f, 0x4e, 0x44, 0x45, 0x52, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x54, 0x52, 0x41, 0x53, 0x53, 0x45, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4e, 0x53, 0x43, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x4e, 0x41, 0x52, 0x49, 0x45, 0x4c, 0x4c, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x48, 0x41, 0x52, 0x49, 0x4b, 0x41, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x43, 0x55, 0x52, 0x49, 0x41, 0x4e, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x41, 0x52, 0x44, 0x4f, 0x52, 0x41, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x47, 0x41, 0x52, 0x53, 0x56, 0x49, 0x4b, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x45, 0x52, 0x57, 0x4f, 0x2e, 0x4e, 0x50, 0x43, 0x00, 0x46, 0x49, 0x4e, 0x47, 0x45, 0x52, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x4c, 0x54, 0x55, 0x52, 0x4d, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x57, 0x46, 0x49, 0x47, 0x53, 0x00, 0x57, 0x46, 0x49, 0x47, 0x53, 0x2e, 0x54, 0x41, 0x42, 0x00, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x45, 0x53, 0x2e, 0x44, 0x41, 0x54, 0x00, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x39, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x50, 0x48, 0x45, 0x58, 0x31, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x50, 0x48, 0x45, 0x58, 0x32, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x57, 0x49, 0x4c, 0x44, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x57, 0x41, 0x46, 0x46, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x53, 0x48, 0x49, 0x50, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x30, 0x34, 0x36, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x30, 0x35, 0x31, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x30, 0x36, 0x31, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x30, 0x37, 0x36, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x30, 0x39, 0x34, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x31, 0x30, 0x30, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x31, 0x30, 0x38, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x31, 0x32, 0x36, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x31, 0x32, 0x39, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x31, 0x33, 0x31, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x4f, 0x42, 0x45, 0x52, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x50, 0x52, 0x45, 0x4d, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x2e, 0x44, 0x4e, 0x47, 0x00, 0x53, 0x48, 0x49, 0x50, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x30, 0x34, 0x36, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x30, 0x35, 0x31, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x30, 0x36, 0x31, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x30, 0x37, 0x36, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x30, 0x39, 0x34, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x31, 0x30, 0x30, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x31, 0x30, 0x38, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x31, 0x32, 0x36, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x31, 0x32, 0x39, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x31, 0x33, 0x31, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x4f, 0x42, 0x45, 0x52, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x50, 0x52, 0x45, 0x4d, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x2e, 0x44, 0x44, 0x54, 0x00, 0x53, 0x48, 0x49, 0x50, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x30, 0x34, 0x36, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x30, 0x35, 0x31, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x30, 0x36, 0x31, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x30, 0x37, 0x36, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x30, 0x39, 0x34, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x31, 0x30, 0x30, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x31, 0x30, 0x38, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x31, 0x32, 0x36, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x31, 0x32, 0x39, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x31, 0x33, 0x31, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x4f, 0x42, 0x45, 0x52, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x50, 0x52, 0x45, 0x4d, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x54, 0x48, 0x4f, 0x52, 0x57, 0x41, 0x4c, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x2e, 0x44, 0x54, 0x58, 0x00, 0x54, 0x46, 0x4c, 0x4f, 0x4f, 0x52, 0x32, 0x2e, 0x4e, 0x56, 0x46, 0x00, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x2e, 0x4c, 0x54, 0x58, 0x00, 0x46, 0x58, 0x31, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x32, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x33, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x34, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x35, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x36, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x37, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x38, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x39, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x30, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x31, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x32, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x33, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x34, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x35, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x36, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x37, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x46, 0x58, 0x31, 0x38, 0x2e, 0x56, 0x4f, 0x43, 0x00, 0x4f, 0x55, 0x54, 0x52, 0x4f, 0x2e, 0x58, 0x4d, 0x49, 0x00 }; // ds:0x5166, names of files in SCHICK.DAT
char g_chr_file_suffix[5] = ".CHR"; // ds:0x5e3e
char g_savegame_suffix[5] = ".gam"; // ds:0x5e43
char g_all_files_wildcard[4] = "*.*"; // ds:0x5e48
char g_all_chr_wildcard[6] = "*.CHR"; // ds:0x5e4c
char g_empty_string1[1] = ""; // ds:0x5e52
char g_empty_string2[1] = ""; // ds:0x5e53
char g_savegame_suffix2[5] = ".gam"; // ds:0x5e54
char g_savegame_suffix3[5] = ".gam"; // ds:0x5e59
char g_all_chr_wildcard2[6] = "*.CHR"; // ds:0x5e5e
char g_all_chr_wildcard3[6] = "*.CHR"; // ds:0x5e64
long g_pp20_buffers[9] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x5e6a; RealPt
unsigned long g_pp20_buffer_lengths[9] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0x5e8e
unsigned short g_current_fight_id = 0; // ds:0x5eb2
unsigned char g_unkn_038[4] = { 0xb8, 0x14, 0x00, 0x50 }; // ds:0x5eb4
unsigned short g_locations_tab_size = 0; // ds:0x5eb8
unsigned short g_areadescr_dng_level = 0; // ds:0x5eba
unsigned short g_areadescr_fileid = 0; // ds:0x5ebc
unsigned short g_areadescr_dng_flag = 0; // ds:0x5ebe
signed short g_ems_unused_lpage = 0; // ds:0x5ec0
signed short g_ems_unused_offset = 0x0300; // ds:0x5ec2
unsigned char g_unkn_039[8] = { 0x0b, 0xc0, 0x75, 0x06, 0xb8, 0x01, 0x00, 0x00 }; // ds:0x5ec4
signed char g_loaded_menu_icons[9] = { -2, -2, -2, -2, -2, -2, -2, -2, -2 }; // ds:0x5ecc, { -2, -2, -2, -2, -2, -2, -2, -2, -2 }
unsigned char g_unkn_040[1] = { 0x00 }; // ds:0x5ed5
struct{short name_id; char town, unkn;} g_informer_tab[15] = { { 0x02bc, 0x26, 0x00 }, { 0x02bd, 0x25, 0x00 }, { 0x02be, 0x19, 0x01 }, { 0x02bf, 0x1c, 0x00 }, { 0x02c0, 0x14, 0x00 }, { 0x02c1, 0x2e, 0x01 }, { 0x02c2, 0x0d, 0x00 }, { 0x02c3, 0x03, 0x00 }, { 0x02c4, 0x2b, 0x01 }, { 0x02c5, -0x01, 0x00 }, { 0x02c6, -0x01, 0x01 }, { 0x02c7, -0x01, 0x00 }, { 0x02c8, -0x01, 0x00 }, { 0x02c9, 0x1f, 0x01 }, { 0x02ca, 0x30, 0x00 } }; // ds:0x5ed6
signed short g_fig_dropped_counter = 0; // ds:0x5f12
unsigned short g_fig_all_heroes_withdrawn = 0; // ds:0x5f14
signed short g_max_enemies = 0; // ds:0x5f16, an upper bound for the number of enemies
char g_str_error_on_obj_malloc[23] = "ERROR ON OBJECT MALLOC"; // ds:0x5f18
unsigned char g_unkn_041[1] = { 0x00 }; // ds:0x5f2f
unsigned char g_finalfight_tumult = 0; // ds:0x5f30
unsigned char g_autofight_magic = 0; // ds:0x5f31
char g_red_string1[5] = "\xf1%s\xf0"; // ds:0x5f32
char g_red_string2[5] = "\xf1%s\xf0"; // ds:0x5f37
char g_space_separated_strings[6] = "%s %s"; // ds:0x5f3c
char g_empty_string3[1] = ""; // ds:0x5f42
char g_empty_string4[1] = ""; // ds:0x5f43
char g_empty_string5[1] = ""; // ds:0x5f44
unsigned char g_unkn_042[1] = { 0x00 }; // ds:0x5f45
signed short g_cb_obj_nonobstacle[27] = { 0x0017, 0x0018, 0x0019, 0x001a, 0x001b, 0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f, 0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 0x0038, -1 }; // ds:0x5f46, { 23,24,25,26,27,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,-1 }
struct{signed short x, y;} g_viewdir_offsets1[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5f7c, ; { , {0,-1}, {-1,0},  }
struct{signed short x, y;} g_viewdir_offsets2[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5f8c, ; { , {0,-1}, {-1,0},  }
char g_string_14spaces[15] = "              "; // ds:0x5f9c
unsigned char g_unkn_043[1] = { 0x00 }; // ds:0x5fab
char g_af_spell_list[11] = { 0x34, 0x0c, 0x35, 0x21, 0x08, 0x1b, 0x2e, 0x31, 0x36, 0x38, 0x48 }; // ds:0x5fac
struct{signed short x,y;} g_viewdir_offsets3[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5fb7, ; { , {0,-1}, {-1,0},  }
struct{signed short x,y;} g_viewdir_offsets4[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5fc7, ; { , {0,-1}, {-1,0},  }
unsigned char g_unkn_044[1] = { 0x00 }; // ds:0x5fd7
struct{signed short x,y;} g_viewdir_offsets5[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5fd8, ; { , {0,-1}, {-1,0},  }
struct{signed short x,y;} g_viewdir_offsets6[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x5fe8, ; { , {0,-1}, {-1,0},  }
struct{signed short x,y;} g_viewdir_invoffsets1[4] = {
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 },
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 }
}; // ds:0x5ff8, ; { {-1,0}, , , {0,-1} }
struct{signed short x,y;} g_viewdir_offsets7[4] = {
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 },
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 }
}; // ds:0x6008, ; { , {0,-1}, {-1,0},  }
struct{signed short x,y;} g_gfxtab_twofielded_extra_cb[4] = {
	{ -0x0001, 0x0000 },
	{ 0x0000, 0x0001 },
	{ 0x0001, 0x0000 },
	{ 0x0000, -1 }
}; // ds:0x6018, ; { {-1,0}, , , {0,-1} }
signed char g_gfxtab_twofielded_extra_ox[4] = { 0x0a, -0x0a, -0x0a, 0x0a }; // ds:0x6028, { 10,-10,-10,10 }
signed char g_gfxtab_twofielded_extra_oy[4] = { 5, 5, -5, -5 }; // ds:0x602c, { 10,-10,-5,-5 }
signed char g_gfxtab_twofielded_x1[4] = { 0x10, 0x00, 0x00, 0x10 }; // ds:0x6030
signed char g_gfxtab_twofielded_x2[4] = { 0x1f, 0x0f, 0x0f, 0x1f }; // ds:0x6034
signed char g_gfxtab_twofielded_extra_x1[4] = { 0x00, 0x10, 0x10, 0x00 }; // ds:0x6038
signed char g_gfxtab_twofielded_extra_x2[4] = { 0x0f, 0x1f, 0x1f, 0x0f }; // ds:0x603c
struct{signed char x,y;} g_cb_rear_border[15] = {
	{ 0x00, 0x10 },
	{ 0x01, 0x10 },
	{ 0x02, 0x10 },
	{ 0x03, 0x10 },
	{ 0x03, 0x11 },
	{ 0x03, 0x12 },
	{ 0x03, 0x13 },
	{ 0x04, 0x14 },
	{ 0x05, 0x14 },
	{ 0x06, 0x14 },
	{ 0x07, 0x14 },
	{ 0x07, 0x15 },
	{ 0x07, 0x16 },
	{ 0x07, 0x17 },
	{ -0x01, 0x00 }
}; // ds:0x6040, ; { , , , , , , , , , , , , , , {-1,0} }
unsigned short g_fightobj_count = 0; // ds:0x605e
signed short g_gfxtab_obj_offset_x[63] = { -0x0001, 0x0005, 0x0004, 0x0005, -0x0005, -0x0005, -0x0005, 0x0001, 0x0000, 0x0000, -0x0006, -0x0005, -0x0005, -0x0005, 0x0005, 0x0005, 0x0005, 0x0005, 0x0000, -0x0001, -0x0001, -0x0001, -0x0001, 0x0000, 0x0000, -0x0001, 0x0000, -0x0001, -0x0001, 0x0005, 0x0005, 0x0005, -0x0004, -0x0004, -0x0004, 0x0000, 0x0005, -0x0004, 0x0001, -0x0003, 0x0001, 0x0000, 0x0002, -0x0004, 0x0002, 0x0000, -0x0001, 0x0000, -0x0008, 0x0000, 0x0009, -0x0003, 0x0004, -0x0005, 0x0005, -0x0010, 0x0003, 0x0001, -0x0001, 0x0000, 0x0022, 0x0023, 0x0000 }; // ds:0x6060
signed short g_gfxtab_obj_offset_y[63] = { 0x0006, 0x0006, 0x0006, 0x0008, 0x000a, 0x0005, 0x0005, 0x0005, 0x0004, 0x000a, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0003, 0x0004, 0x0003, 0x0002, 0x0002, 0x0002, 0x0003, 0x0003, 0x0003, 0x0004, 0x0003, 0x0003, 0x0003, 0x0003, 0x0005, 0x0004, 0x0002, 0x0004, 0x0002, 0x0003, 0x0003, 0x0004, 0x0003, 0x0003, 0x0004, 0x0002, 0x0004, 0x0002, 0x0007, 0x0006, 0x0003, 0x0007, 0x0004, 0x0005, 0x0003, 0x0001, 0x000b, 0x0003, 0x0003, 0x0028, 0x0001 }; // ds:0x60de
signed short g_force_weapons[9] = { 0x0002, 0x0014, 0x0042, 0x0045, 0x0047, 0x0065, 0x008c, 0x0085, -1 }; // ds:0x615c, terminated with -1
signed short g_knive_weapons[5] = { 0x0004, 0x000e, 0x0015, 0x008b, -1 }; // ds:0x616e, terminated with -1
struct{signed char x,y;} g_viewdir_invoffsets2[4] = { { -0x01, 0x00 }, { 0x00, 0x01 }, { 0x01, 0x00 }, { 0x00, -1 } }; // ds:0x6178, ; { {-1,0}, , , {0,-1} }
char g_string_casts_spell[14] = "%s ZAUBERT %s"; // ds:0x6180
unsigned short g_mspell_awake_flag = 0; // ds:0x618e
struct{signed char x,y;} g_viewdir_invoffsets3[4] = {
	{ -0x01, 0x00 },
	{ 0x00, 0x01 },
	{ 0x01, 0x00 },
	{ 0x00, -1 }
}; // ds:0x6190, ; { {-1,0}, , , {0,-1} }
unsigned short g_gfxtab_shotbolt_ox[24] = { 0xffef, 0xfffd, 0xfffd, 0x0003, 0xffef, 0xfffd, 0xfffd, 0x0003, 0xffef, 0xfffd, 0xfffd, 0x0003, 0xffef, 0xfffd, 0xfffd, 0x0003, 0xffef, 0xfffd, 0xfffd, 0x0003, 0xffef, 0xfffd, 0xfffd, 0x0003 }; // ds:0x6198
unsigned short g_gfxtab_shotbolt_oy[24] = { 0xffe2, 0xffec, 0xffec, 0xffec, 0xffe2, 0xffec, 0xffec, 0xffec, 0xffe2, 0xffec, 0xffec, 0xffec, 0xffe2, 0xffec, 0xffec, 0xffec, 0xffe2, 0xffec, 0xffec, 0xffec, 0xffe2, 0xffec, 0xffec, 0xffec }; // ds:0x61c8
signed short g_gfxtab_shotbolt_nvfno[6] = { 0x0000, 0x0004, 0x0008, 0x000c, 0x0010, 0x0014 }; // ds:0x61f8
signed short g_gfxtab_shotbolt_height[6] = { 0x000f, 0x000f, 0x000f, 0x0005, 0x0005, 0x0008 }; // ds:0x6204
signed short g_gfxtab_shotbolt_width[6] = { 0x0019, 0x0019, 0x0019, 0x0009, 0x0009, 0x0010 }; // ds:0x6210
char g_anitab_shotbolt_data[168] = { -0x02, 0x01, 0x00, 0x00, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x01, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x02, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x03, 0x00, 0x00, -0x01, -0x02, 0x01, 0x00, 0x04, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x05, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x06, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x07, 0x00, 0x00, -0x01, -0x02, 0x01, 0x00, 0x08, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x08, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x08, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x08, 0x00, 0x00, -0x01, -0x02, 0x01, 0x00, 0x0c, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x0d, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x0e, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x0f, 0x00, 0x00, -0x01, -0x02, 0x01, 0x00, 0x10, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x11, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x12, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x13, 0x00, 0x00, -0x01, -0x02, 0x01, 0x00, 0x14, 0x00, 0x00, -0x01, -0x02, 0x00, -0x01, 0x15, 0x00, 0x00, -0x01, -0x02, -0x01, 0x00, 0x16, 0x00, 0x00, -0x01, -0x02, 0x00, 0x01, 0x17, 0x00, 0x00, -1 }; // ds:0x621c, arrays, each terminated by -1
long g_anitab_shotbolt_index2[24] = { 0x14fc621c, 0x14fc6223, 0x14fc622a, 0x14fc6231, 0x14fc6238, 0x14fc623f, 0x14fc6246, 0x14fc624d, 0x14fc6254, 0x14fc625b, 0x14fc6262, 0x14fc6269, 0x14fc6270, 0x14fc6277, 0x14fc627e, 0x14fc6285, 0x14fc628c, 0x14fc6293, 0x14fc629a, 0x14fc62a1, 0x14fc62a8, 0x14fc62af, 0x14fc62b6, 0x14fc62bd }; // ds:0x62c4, 6 long arrays of length 4 (viewdir); RealPt
long g_anitab_shotbolt_index[6] = { 0x14fc62c4, 0x14fc62d4, 0x14fc62e4, 0x14fc62f4, 0x14fc6304, 0x14fc6314 }; // ds:0x6324; RealPt
signed char g_anitab_spell_nvfno[2] = { 0x09, 0x1b }; // ds:0x633c
signed short g_anitab_spell_ox[2] = { 0, 0 }; // ds:0x633e
signed short g_anitab_spell_oy[2] = { 0, 0 }; // ds:0x6342
char g_anitab_spell_data[32] = { 0x09, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x09, 0x00, 0x00, -0x01, 0x1b, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x1b, 0x00, 0x00, -1 }; // ds:0x6346, 2 arrays, each terminated by -1
long g_anitab_spell_index[2] = { 0x14fc6346, 0x14fc6356 }; // ds:0x6366; RealPt
unsigned char g_statuspage_selitem1_no = 1; // ds:0x636e
unsigned char g_statuspage_selitem2_no = 1; // ds:0x636f
unsigned char g_statuspage_selitem3_no = 7; // ds:0x6370
unsigned char g_statuspage_selitem4_no = 0xff; // ds:0x6371
struct{unsigned char r,g,b;} g_statuspage_palette[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x06, 0x06, 0x06 },
	{ 0x3f, 0x26, 0x10 },
	{ 0x3f, 0x1e, 0x00 },
	{ 0x33, 0x18, 0x00 },
	{ 0x27, 0x13, 0x00 },
	{ 0x1c, 0x0e, 0x00 },
	{ 0x10, 0x08, 0x00 },
	{ 0x3f, 0x3f, 0x00 },
	{ 0x3c, 0x00, 0x00 },
	{ 0x1b, 0x00, 0x00 },
	{ 0x00, 0x0e, 0x3f },
	{ 0x00, 0x00, 0x25 },
	{ 0x3c, 0x30, 0x21 },
	{ 0x34, 0x28, 0x19 },
	{ 0x2c, 0x1f, 0x12 },
	{ 0x24, 0x17, 0x0a },
	{ 0x3c, 0x3c, 0x3c },
	{ 0x38, 0x38, 0x38 },
	{ 0x34, 0x34, 0x34 },
	{ 0x30, 0x30, 0x30 },
	{ 0x2c, 0x2c, 0x2c },
	{ 0x28, 0x28, 0x28 },
	{ 0x24, 0x24, 0x24 },
	{ 0x20, 0x20, 0x20 },
	{ 0x1c, 0x1c, 0x1c },
	{ 0x18, 0x18, 0x18 },
	{ 0x14, 0x14, 0x14 },
	{ 0x10, 0x10, 0x10 },
	{ 0x0c, 0x0c, 0x0c },
	{ 0x08, 0x08, 0x08 },
	{ 0x3f, 0x3f, 0x3f }
}; // ds:0x6372
struct{unsigned short x,y;} g_invslot_iconxy_table[23] = {
	{ 0x0045, 0x0038 },
	{ 0x003b, 0x0051 },
	{ 0x0092, 0x0051 },
	{ 0x0045, 0x006b },
	{ 0x0088, 0x006b },
	{ 0x0045, 0x008d },
	{ 0x0088, 0x00af },
	{ 0x0010, 0x0038 },
	{ 0x0021, 0x0038 },
	{ 0x0010, 0x0049 },
	{ 0x0021, 0x0049 },
	{ 0x0010, 0x005a },
	{ 0x0021, 0x005a },
	{ 0x0010, 0x006b },
	{ 0x0021, 0x006b },
	{ 0x0010, 0x007c },
	{ 0x0021, 0x007c },
	{ 0x0010, 0x008d },
	{ 0x0021, 0x008d },
	{ 0x0010, 0x009e },
	{ 0x0021, 0x009e },
	{ 0x0010, 0x00af },
	{ 0x0021, 0x00af }
}; // ds:0x63d2
struct{unsigned short x_name,x_val,y;} g_statuspage_spells_xy[8] = {
	{ 0x0005, 0x0068, 0x003e },
	{ 0x0005, 0x0068, 0x0068 },
	{ 0x0070, 0x00d1, 0x003e },
	{ 0x0070, 0x00d1, 0x006f },
	{ 0x0070, 0x00d1, 0x008b },
	{ 0x00d9, 0x013b, 0x003e },
	{ 0x00d9, 0x013b, 0x0068 },
	{ 0x00d9, 0x013b, 0x00a0 }
}; // ds:0x642e
struct{unsigned short x_name,x_val,y;} g_statuspage_spells2_xy[4] = {
	{ 0x0005, 0x0068, 0x003e },
	{ 0x0005, 0x0068, 0x008b },
	{ 0x0070, 0x00d1, 0x003e },
	{ 0x00d9, 0x013b, 0x003e }
}; // ds:0x645e
struct{unsigned short x_name,x_val,y;} g_statuspage_skills_xy[7] = {
	{ 0x0005, 0x0068, 0x003e },
	{ 0x00d9, 0x013b, 0x003e },
	{ 0x00d9, 0x013b, 0x008b },
	{ 0x0005, 0x0068, 0x0084 },
	{ 0x0070, 0x00d1, 0x0084 },
	{ 0x0070, 0x00d1, 0x003e },
	{ 0x0005, 0x0068, 0x00b5 }
}; // ds:0x6476
char g_empty_string6[1] = ""; // ds:0x64a0
char g_empty_string7[1] = ""; // ds:0x64a1
signed char g_hero_sel_exclude = -1; // ds:0x64a2
signed short g_seg047_init1[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x64a3, filled with zeroes
signed short g_seg047_init2[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x64b1, filled with zeroes
signed short g_seg047_init3[7] = { 0, 0, 0, 0, 0, 0, 0 }; // ds:0x64bf, filled with zeroes
unsigned char g_unkn_045[1] = { 0x00 }; // ds:0x64cd
struct{signed short x,y;} g_invslot_borderxy_table[25] = {
	{ 0x0044, 0x0037 },
	{ 0x003a, 0x0050 },
	{ 0x0091, 0x0050 },
	{ 0x0044, 0x006a },
	{ 0x0087, 0x006a },
	{ 0x0044, 0x008c },
	{ 0x0087, 0x00ae },
	{ 0x000f, 0x0037 },
	{ 0x0020, 0x0037 },
	{ 0x000f, 0x0048 },
	{ 0x0020, 0x0048 },
	{ 0x000f, 0x0059 },
	{ 0x0020, 0x0059 },
	{ 0x000f, 0x006a },
	{ 0x0020, 0x006a },
	{ 0x000f, 0x007b },
	{ 0x0020, 0x007b },
	{ 0x000f, 0x008c },
	{ 0x0020, 0x008c },
	{ 0x000f, 0x009d },
	{ 0x0020, 0x009d },
	{ 0x000f, 0x00ae },
	{ 0x0020, 0x00ae },
	{ 0x0080, 0x0037 },
	{ 0x0091, 0x0037 }
}; // ds:0x64ce
signed short g_cheatskill_usable = 0; // ds:0x6532
char g_extraspace_separated_strings[7] = "%s %s "; // ds:0x6534
char g_empty_string8[1] = ""; // ds:0x653b
char g_extraspace_separated_strings2[7] = "%s %s "; // ds:0x653c
char g_empty_string9[1] = ""; // ds:0x6543
signed short g_autoinc_spells_witch[3] = { 0x002a, 0x0031, -1 }; // ds:0x6544
signed short g_autoinc_spells_druid[4] = { 0x002a, 0x0005, 0x0029, -1 }; // ds:0x654a
short g_autoinc_spells_mage_table[108] = { 0x0013, 0x0021, 0x003d, 0x0035, 0x0023, 0x0027, 0x0052, 0x003e, 0x0015, 0x004c, -0x0001, 0x002a, 0x002c, 0x0035, 0x0006, 0x002e, 0x000a, 0x0021, 0x002f, 0x0052, 0x000b, 0x0028, -0x0001, 0x0019, 0x002a, 0x001a, 0x0052, 0x0021, 0x0035, 0x0050, 0x0003, 0x0032, 0x0014, 0x0027, -0x0001, 0x0021, 0x0035, 0x0052, 0x002b, 0x004f, 0x001a, 0x002a, 0x0036, 0x004a, 0x004b, 0x0020, -0x0001, 0x004c, 0x002a, 0x0028, 0x003e, 0x0003, 0x0031, 0x0025, 0x0044, 0x0052, 0x0033, -0x0001, 0x0021, 0x0052, 0x000e, 0x0035, 0x0007, 0x003e, 0x003d, 0x0003, 0x000c, -0x0001, 0x0003, 0x0021, 0x0048, 0x0052, 0x0032, 0x000c, 0x0050, 0x0038, 0x002a, 0x0012, 0x003d, 0x0044, 0x0042, 0x0046, -0x0001, 0x0021, 0x0023, 0x0035, 0x0052, 0x0044, 0x003d, 0x0042, 0x0032, 0x004a, 0x002a, 0x0028, -0x0001, 0x0048, 0x003e, 0x0003, 0x0021, 0x0035, 0x002b, 0x001c, 0x0051, 0x004d, 0x0055, 0x0036, 0x0002, -1 }; // ds:0x6552, 9 arrays, each terminated by -1
long g_autoinc_spells_mage_index[9] = { 0x14fc6552, 0x14fc6568, 0x14fc6580, 0x14fc6598, 0x14fc65b0, 0x14fc65c6, 0x14fc65da, 0x14fc65f8, 0x14fc6610 }; // ds:0x662a, by magic school; RealPt
signed short g_auotinc_spells_gelf[7] = { 0x0052, 0x0031, 0x001b, 0x0023, 0x0025, 0x0050, -1 }; // ds:0x664e
signed short g_autoinc_spells_self[7] = { 0x0054, 0x003e, 0x0034, 0x0026, 0x002a, 0x0052, -1 }; // ds:0x665c
signed short g_autoinc_spells_ielf[12] = { 0x0021, 0x002d, 0x0031, 0x0026, 0x0034, 0x003e, 0x0054, 0x002a, 0x0006, 0x001b, 0x0029, -1 }; // ds:0x666a
struct{signed char first, last;} g_magic_school_spellranges[9] = { { 0x01, 0x05 }, { 0x06, 0x11 }, { 0x12, 0x1a }, { 0x1b, 0x20 }, { 0x21, 0x25 }, { 0x26, 0x2c }, { 0x31, 0x39 }, { 0x3c, 0x4b }, { 0x4c, 0x55 } }; // ds:0x6682
signed short g_campfights[4] = { 0x00d9, 0x00da, 0x00db, 0x00e8 }; // ds:0x6694
struct{unsigned char herb_id,chance,ta_mod,max_count;} g_gather_herbs_table[13] = {
	{ 0x7e, 0x05, 0x01, 0x0f },
	{ 0x7b, 0x0c, 0x03, 0x08 },
	{ 0x7c, 0x0a, 0x02, 0x09 },
	{ 0x3f, 0x0f, 0x03, 0x08 },
	{ 0x82, 0x0f, 0x01, 0x0a },
	{ 0x9d, 0x01, 0x01, 0x12 },
	{ 0x7a, 0x0c, 0x02, 0x08 },
	{ 0x40, 0x2d, 0x05, 0x04 },
	{ 0x83, 0x03, 0x01, 0x0f },
	{ 0x3c, 0x28, 0x04, 0x08 },
	{ 0x3d, 0x1e, 0x02, 0x04 },
	{ 0x3e, 0x14, 0x02, 0x04 },
	{ 0xff, 0x00, 0x00, 0x00 }
}; // ds:0x669c
unsigned char g_gather_herbs_special = 0xff; // ds:0x66d0
char g_gather_herbs_str_found[6] = "%d^%s"; // ds:0x66d1
char g_gather_herbs_str_comma[3] = ", "; // ds:0x66d7
char g_gather_herbs_str_and[6] = " UND "; // ds:0x66da
char g_gather_herbs_str_dot[2] = "."; // ds:0x66e0
signed short g_dcampfights[4] = { 0x00fe, 0x00ff, 0x0100, 0x0101 }; // ds:0x66e2
struct{signed char price,quality;} g_healer_descr_table[41] = {
	{ 0x1e, 0x02 },
	{ 0x32, 0x0a },
	{ -0x0a, 0x0a },
	{ 0x0a, 0x0c },
	{ 0x1e, 0x0c },
	{ 0x1e, 0x09 },
	{ 0x00, 0x0c },
	{ 0x00, 0x04 },
	{ -0x0a, 0x06 },
	{ 0x28, 0x0f },
	{ 0x00, 0x07 },
	{ 0x00, 0x10 },
	{ 0x14, 0x03 },
	{ 0x28, 0x05 },
	{ 0x14, 0x0d },
	{ -0x0a, 0x04 },
	{ 0x14, 0x0a },
	{ 0x00, 0x0e },
	{ 0x1e, 0x01 },
	{ 0x14, 0x08 },
	{ 0x00, 0x0c },
	{ 0x0a, 0x0a },
	{ 0x32, 0x06 },
	{ 0x14, 0x02 },
	{ -0x0a, 0x07 },
	{ 0x00, 0x07 },
	{ 0x0a, 0x0e },
	{ 0x00, 0x0c },
	{ 0x14, 0x07 },
	{ 0x28, 0x04 },
	{ -0x14, 0x08 },
	{ 0x0a, 0x0f },
	{ -0x32, 0x0c },
	{ 0x0a, 0x03 },
	{ -0x14, 0x0a },
	{ -0x14, 0x0b },
	{ 0x1e, 0x0c },
	{ 0x14, 0x11 },
	{ 0x14, 0x06 },
	{ -0x0a, 0x03 },
	{ -0x01, 0x00 }
}; // ds:0x66ea
struct{signed short quality,unkn;} g_inn_descr_table[77] = {
	{ 0x000e, 0x0000 },
	{ 0x0007, 0x001e },
	{ 0x000c, -0x000a },
	{ 0x000b, 0x0000 },
	{ 0x0006, 0x0032 },
	{ 0x000b, 0x0001 },
	{ 0x000a, 0x001e },
	{ 0x0009, 0x0028 },
	{ 0x0007, -0x0014 },
	{ 0x0007, 0x0028 },
	{ 0x000a, 0x0014 },
	{ 0x000b, 0x000a },
	{ 0x0007, 0x0000 },
	{ 0x0008, 0x001e },
	{ 0x000e, 0x0000 },
	{ 0x0014, -0x001e },
	{ 0x0009, -0x0014 },
	{ 0x0001, 0x000a },
	{ 0x0008, 0x000a },
	{ 0x000a, -0x001e },
	{ 0x0007, 0x0014 },
	{ 0x000c, 0x0032 },
	{ 0x000c, -0x000a },
	{ 0x0004, 0x0046 },
	{ 0x0009, 0x0028 },
	{ 0x000e, -0x000a },
	{ 0x0003, 0x003c },
	{ 0x0011, 0x0000 },
	{ 0x0009, 0x0014 },
	{ 0x0008, 0x0032 },
	{ 0x0002, 0x0032 },
	{ 0x000d, 0x000a },
	{ 0x000c, 0x0014 },
	{ 0x0008, 0x0028 },
	{ 0x000b, 0x0028 },
	{ 0x0009, 0x0014 },
	{ 0x000e, 0x0028 },
	{ 0x000b, 0x001e },
	{ 0x000c, -0x0014 },
	{ 0x0007, 0x0028 },
	{ 0x0010, 0x0028 },
	{ 0x0003, 0x003c },
	{ 0x000d, -0x0028 },
	{ 0x0008, 0x000a },
	{ 0x000c, 0x000a },
	{ 0x0004, 0x000a },
	{ 0x0005, 0x001e },
	{ 0x000c, 0x0014 },
	{ 0x0010, -0x000a },
	{ 0x000d, 0x0000 },
	{ 0x0008, 0x001e },
	{ 0x0005, 0x0028 },
	{ 0x000a, 0x0046 },
	{ 0x0005, 0x0014 },
	{ 0x000d, -0x000a },
	{ 0x0003, 0x0028 },
	{ 0x000e, 0x0000 },
	{ 0x0009, -0x0014 },
	{ 0x000b, 0x001e },
	{ 0x0011, 0x0032 },
	{ 0x000b, 0x0014 },
	{ 0x0002, 0x001e },
	{ 0x000a, -0x000a },
	{ 0x000c, -0x0014 },
	{ 0x000f, -0x000a },
	{ 0x0003, 0x0032 },
	{ 0x000a, 0x0000 },
	{ 0x000a, 0x000a },
	{ 0x000c, 0x0000 },
	{ 0x0007, 0x0028 },
	{ 0x000e, 0x0000 },
	{ 0x0004, 0x0032 },
	{ 0x000c, -0x000a },
	{ 0x000b, 0x0000 },
	{ 0x0009, 0x0000 },
	{ 0x000a, 0x0000 },
	{ -0x0001, 0x0000 }
}; // ds:0x673c
struct{char price_mod,type,size; short extra_items[3];} g_shop_descr_table[95] = {
	{ 0x32, 0x03, 0x01, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x03, 0x08, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x01, 0x03, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x01, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x02, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x03, 0x12, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x10, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x0c, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x01, 0x0b, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x09, 0x0000, 0x0000, 0x0000 },
	{ 0x3c, 0x01, 0x04, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x02, 0x09, 0x0000, 0x0000, 0x0000 },
	{ -0x14, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x03, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0b, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x01, 0x10, 0x0000, 0x0000, 0x0000 },
	{ 0x3c, 0x02, 0x08, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ -0x1e, 0x03, 0x12, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x02, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x03, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x50, 0x01, 0x01, 0x0000, 0x0000, 0x0000 },
	{ 0x3c, 0x01, 0x08, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x0b, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x04, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x0c, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x01, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x01, 0x0f, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x02, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x03, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x08, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x03, 0x04, 0x0000, 0x0000, 0x0000 },
	{ -0x1e, 0x03, 0x11, 0x0000, 0x0000, 0x0000 },
	{ 0x46, 0x01, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x0c, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x02, 0x04, 0x0000, 0x0000, 0x0000 },
	{ -0x1e, 0x03, 0x12, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x03, 0x01, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x01, 0x0b, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x03, 0x05, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x01, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x02, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x03, 0x05, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0f, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x02, 0x10, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x01, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x13, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x03, 0x0d, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x03, 0x04, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x01, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x05, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x09, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x03, 0x01, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ -0x14, 0x03, 0x10, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x02, 0x01, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x01, 0x05, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x01, 0x07, 0x0000, 0x0000, 0x0000 },
	{ -0x1e, 0x02, 0x0e, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x08, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0c, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x02, 0x0f, 0x0000, 0x0000, 0x0000 },
	{ 0x32, 0x01, 0x10, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x05, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x08, 0x0000, 0x0000, 0x0000 },
	{ 0x1e, 0x01, 0x04, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x01, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x07, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x0d, 0x0000, 0x0000, 0x0000 },
	{ -0x0a, 0x03, 0x10, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x03, 0x0c, 0x0000, 0x0000, 0x0000 },
	{ 0x0a, 0x02, 0x0f, 0x0000, 0x0000, 0x0000 },
	{ 0x14, 0x01, 0x12, 0x0000, 0x0000, 0x0000 },
	{ 0x28, 0x03, 0x11, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x00, 0x00, 0x0000, 0x0000, 0x0000 },
	{ 0x19, 0x03, 0x02, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x01, 0x0a, 0x0000, 0x0000, 0x0000 },
	{ 0x00, 0x03, 0x06, 0x0000, 0x0000, 0x0000 },
	{ -0x01, 0x00, 0x00, 0x0000, 0x0000, 0x0000 }
}; // ds:0x6870
unsigned char g_unkn_046[1] = { 0x00 }; // ds:0x6bc7
char g_buy_screen_str_money_h[5] = "H %d"; // ds:0x6bc8
char g_buy_screen_str_money_s[5] = "S %d"; // ds:0x6bcd
char g_buy_screen_str_money_d[5] = "D %d"; // ds:0x6bd2
signed short g_buy_screen_items_posx[3] = { 0x001e, 0x005f, 0x00a0 }; // ds:0x6bd7
signed short g_buy_screen_items_posy[5] = { 0x0023, 0x0037, 0x004b, 0x005f, 0x0073 }; // ds:0x6bdd
char g_buy_screen_str_d_s[6] = "%d %s"; // ds:0x6be7
char g_buy_screen_str_comma_space[3] = ", "; // ds:0x6bed
char g_sell_screen_str_money_h[5] = "H %d"; // ds:0x6bf0
char g_sell_screen_str_money_s[5] = "S %d"; // ds:0x6bf5
char g_sell_screen_str_money_d[5] = "D %d"; // ds:0x6bfa
signed short g_sell_screen_items_posx[3] = { 0x001e, 0x005f, 0x00a0 }; // ds:0x6bff
signed short g_sell_screen_items_posy[5] = { 0x0023, 0x0037, 0x004b, 0x005f, 0x0073 }; // ds:0x6c05
unsigned char g_unkn_047[1] = { 0x00 }; // ds:0x6c0f
signed short g_smith_descr_table[42] = { 0x0132, 0x0414, 0x0a00, 0x0fec, 0x0a00, 0x0c1e, 0x09f6, 0x0a1e, 0x0214, 0x0900, 0x10d8, 0x0900, 0x0b00, 0x0132, 0x0146, 0x040a, 0x09ec, 0x0628, 0x0ff6, 0x0500, 0x0432, 0x100a, 0x031e, 0x0be2, 0x0114, 0x0ece, 0x0900, 0x0500, 0x1114, 0x0d0a, 0x0300, 0x0c0a, 0x041e, 0x0b00, 0x060a, 0x0dec, 0x0214, 0x0d00, 0x0ff6, 0x041e, 0x041e, 0x00ff }; // ds:0x6c10
char g_smith_str_money_h[5] = "H %d"; // ds:0x6c64
char g_smith_str_money_s[5] = "S %d"; // ds:0x6c69
char g_smith_str_money_d[5] = "D %d"; // ds:0x6c6e
signed short g_smith_items_posx[3] = { 0x001e, 0x005f, 0x00a0 }; // ds:0x6c73
signed short g_smith_items_posy[5] = { 0x0023, 0x0037, 0x004b, 0x005f, 0x0073 }; // ds:0x6c79
unsigned char g_unkn_048[1] = { 0x00 }; // ds:0x6c83
struct{short a,b;} g_tavern_descr_table[89] = {
	{ 0x000c, -0x000a },
	{ 0x000b, 0x0000 },
	{ 0x0009, 0x0000 },
	{ 0x0008, 0x0028 },
	{ 0x000a, 0x000a },
	{ 0x000e, -0x0014 },
	{ 0x000a, 0x0000 },
	{ 0x0010, -0x0028 },
	{ 0x0012, -0x0028 },
	{ 0x000b, 0x000a },
	{ 0x0011, -0x0032 },
	{ 0x0009, 0x000a },
	{ 0x000f, -0x0028 },
	{ 0x000d, -0x000a },
	{ 0x0006, -0x000a },
	{ 0x0011, -0x001e },
	{ 0x0010, -0x001e },
	{ 0x000b, 0x000a },
	{ 0x0012, -0x000a },
	{ 0x0010, -0x0028 },
	{ 0x000e, 0x0000 },
	{ 0x000e, -0x0032 },
	{ 0x000b, 0x0000 },
	{ 0x0012, -0x0028 },
	{ 0x0012, -0x003c },
	{ 0x0006, 0x0000 },
	{ 0x0011, -0x000a },
	{ 0x0006, 0x0014 },
	{ 0x0011, -0x0014 },
	{ 0x0008, 0x0000 },
	{ 0x000d, 0x0000 },
	{ 0x0010, -0x0014 },
	{ 0x0003, 0x001e },
	{ 0x000c, -0x001e },
	{ 0x0004, 0x0000 },
	{ 0x0007, 0x001e },
	{ 0x000b, -0x001e },
	{ 0x0014, -0x0014 },
	{ 0x000a, 0x0000 },
	{ 0x0009, 0x001e },
	{ 0x000b, -0x000a },
	{ 0x0013, -0x0032 },
	{ 0x0006, -0x0014 },
	{ 0x000f, 0x0000 },
	{ 0x000d, -0x0014 },
	{ 0x0008, -0x0014 },
	{ 0x0005, 0x0014 },
	{ 0x000c, 0x0000 },
	{ 0x000f, -0x0014 },
	{ 0x0002, 0x001e },
	{ 0x0007, -0x000a },
	{ 0x0005, 0x0000 },
	{ 0x000f, -0x000a },
	{ 0x0011, -0x001e },
	{ 0x000d, -0x000a },
	{ 0x0006, 0x0000 },
	{ 0x000d, -0x0014 },
	{ 0x0009, 0x0014 },
	{ 0x0012, -0x000a },
	{ 0x0009, 0x0000 },
	{ 0x0006, 0x000a },
	{ 0x0007, 0x0000 },
	{ 0x0013, -0x0028 },
	{ 0x000c, -0x0032 },
	{ 0x0008, -0x000a },
	{ 0x000e, -0x0014 },
	{ 0x0009, -0x001e },
	{ 0x000c, 0x001e },
	{ 0x000f, -0x001e },
	{ 0x0007, 0x0014 },
	{ 0x0012, 0x0000 },
	{ 0x0006, 0x001e },
	{ 0x0010, -0x0014 },
	{ 0x0007, 0x0014 },
	{ 0x000e, 0x0032 },
	{ 0x000a, 0x0000 },
	{ 0x0012, -0x001e },
	{ 0x0008, 0x003c },
	{ 0x000b, -0x001e },
	{ 0x0009, -0x000a },
	{ 0x0007, -0x0014 },
	{ 0x000e, -0x000a },
	{ 0x0007, -0x000a },
	{ 0x0006, 0x000a },
	{ 0x0006, 0x000a },
	{ 0x000f, -0x001e },
	{ 0x000a, 0x0000 },
	{ 0x0013, -0x0032 },
	{ -0x0001, 0x0000 }
}; // ds:0x6c84
char g_god_temples_table_01[2] = { 0x3d, -1 }; // ds:0x6de8, array terminated by -1
char g_god_temples_table_02[6] = { 0x0b, 0x1c, 0x25, 0x2d, 0x33, -1 }; // ds:0x6dea, array terminated by -1
char g_god_temples_table_03[11] = { 0x03, 0x0d, 0x0e, 0x21, 0x22, 0x26, 0x29, 0x2c, 0x35, 0x39, -1 }; // ds:0x6df0, array terminated by -1
char g_god_temples_table_04[16] = { 0x01, 0x08, 0x0a, 0x10, 0x11, 0x14, 0x18, 0x1e, 0x23, 0x2a, 0x2b, 0x2f, 0x30, 0x32, 0x34, -1 }; // ds:0x6dfb, array terminated by -1
char g_god_temples_table_05[2] = { 0x3e, -1 }; // ds:0x6e0b, array terminated by -1
char g_god_temples_table_06[2] = { 0x3f, -1 }; // ds:0x6e0d, array terminated by -1
char g_god_temples_table_07[4] = { 0x12, 0x1a, 0x3a, -1 }; // ds:0x6e0f, array terminated by -1
char g_god_temples_table_08[2] = { 6, -1 }; // ds:0x6e13, array terminated by -1
char g_god_temples_table_09[6] = { 0x05, 0x09, 0x13, 0x27, 0x3b, -1 }; // ds:0x6e15, array terminated by -1
char g_god_temples_table_10[5] = { 0x04, 0x0c, 0x19, 0x3c, -1 }; // ds:0x6e1b, array terminated by -1
char g_god_temples_table_11[3] = { 0x16, 0x1b, -1 }; // ds:0x6e20, array terminated by -1
char g_god_temples_table_12[2] = { 0x40, -1 }; // ds:0x6e23, array terminated by -1
char g_god_temples_table_13[13] = { 0x02, 0x07, 0x0f, 0x15, 0x1d, 0x20, 0x24, 0x28, 0x2e, 0x31, 0x36, 0x38, -1 }; // ds:0x6e25, array terminated by -1
char g_god_temples_table_14[4] = { 0x17, 0x1f, 0x37, -1 }; // ds:0x6e32, array terminated by -1
long g_god_temples_index[15] = { 0x00000000, 0x14fc6de8, 0x14fc6dea, 0x14fc6df0, 0x14fc6dfb, 0x14fc6e0b, 0x14fc6e0d, 0x14fc6e0f, 0x14fc6e13, 0x14fc6e15, 0x14fc6e1b, 0x14fc6e20, 0x14fc6e23, 0x14fc6e25, 0x14fc6e32 }; // ds:0x6e36; RealPt
char g_str_temp_file_wildcard[8] = "TEMP\\%s"; // ds:0x6e72
char g_str_no_save_in_temple[41] = "IN DIESEM TEMPEL KEIN SPEICHERN M\x99GLICH!"; // ds:0x6e7a
unsigned char g_unkn_049[1] = { 0x00 }; // ds:0x6ea3
signed char g_temple_miracle_bonus[15] = { 0x00, 0x02, 0x0f, 0x0a, 0x14, 0x05, 0x0a, 0x01, 0x0f, 0x03, 0x0f, 0x05, 0x0a, 0x00, 0x01 }; // ds:0x6ea4
signed char g_temple_miracle_dice[15] = { 0x00, 0x09, 0x09, 0x0a, 0x11, 0x06, 0x0a, 0x0a, 0x12, 0x0a, 0x13, 0x08, 0x0f, 0x00, 0x0a }; // ds:0x6eb3
signed short g_sea_travel_tx_class[7] = { 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022, 0x0023 }; // ds:0x6ec2
struct{unsigned char passage_type,unkn2,base_price_per_distance,base_speed;} g_ship_table[8] = { { 0x00, 0x01, 0x00, 0x78 }, { 0x03, 0x01, 0x23, 0x64 }, { 0x01, 0x01, 0x00, 0x96 }, { 0x02, 0x01, 0x2d, 0x96 }, { 0x00, 0x01, 0x00, 0x5a }, { 0x04, 0x01, 0x14, 0x50 }, { 0x05, 0x00, 0x0a, 0x3c }, { 0x06, 0x00, 0x00, 0x28 } }; // ds:0x6ed0
signed short g_sea_travel_tx_ship[8] = { 0x0024, 0x0025, 0x0026, 0x0026, 0x0024, 0x0027, 0x0028, 0x0029 }; // ds:0x6ef0
struct{unsigned char unkn[8];} g_sea_travel_passages[46] = {
	{ TOWNS_THORWAL, TOWNS_PREM, 115,  1, 0, 0, 0, 0 },
	{ TOWNS_PREM, TOWNS_HJALSINGOR, 210,  3, 0, 0, 0, 0 },
	{ TOWNS_PREM, TOWNS_MANRIN,  54,  7, 0, 0, 0, 0 }, /* Original-Bug: According to the map, this should be the longest ship route by far. Distance 54 is way too short. Maybe the value originally was 310, which after a byte overflow results in 54. */
	{ TOWNS_PREM, TOWNS_KORD, 135,  7, 0, 0, 0, 0 },
	{ TOWNS_KORD, TOWNS_HJALSINGOR,  80,  6, 0, 0, 0, 0 },
	{ TOWNS_HJALSINGOR, TOWNS_OVERTHORN, 115,  4, 0, 0, 0, 0 },
	{ TOWNS_HJALSINGOR, TOWNS_MANRIN, 110,  5, 0, 0, 0, 0 },
	{ TOWNS_THORWAL, TOWNS_VAERMHAG,  30,  7, 0, 1, 0, 0 },
	{ TOWNS_VAERMHAG, TOWNS_VARNHEIM,  37,  5, 0, 1, 0, 0 },
	{ TOWNS_VARNHEIM, TOWNS_LJASDAHL,  25,  3, 0, 1, 0, 0 },
	{ TOWNS_VARNHEIM, TOWNS_OTTARJE,  25,  8, 0, 1, 0, 0 },
	{ TOWNS_LJASDAHL, TOWNS_OTTARJE,  10,  1, 0, 1, 0, 0 },
	{ TOWNS_SKJAL, TOWNS_OTTARJE,  52,  3, 0, 1, 0, 0 },
	{ TOWNS_SKJAL, TOWNS_PREM,  28,  4, 0, 1, 0, 0 },
	{ TOWNS_PREM, TOWNS_ARYN,  28,  6, 0, 1, 0, 0 },
	{ TOWNS_PREM, TOWNS_RUNINSHAVEN,  35,  7, 0, 1, 0, 0 },
	{ TOWNS_ARYN, TOWNS_RUNINSHAVEN,  25,  4, 0, 1, 0, 0 },
	{ TOWNS_RUNINSHAVEN, TOWNS_TREBAN,  50,  7, 0, 1, 0, 0 },
	{ TOWNS_TREBAN, TOWNS_KORD,  40,  2, 0, 1, 0, 0 },
	{ TOWNS_KORD, TOWNS_GUDDASUNDEN,  65,  2, 0, 1, 0, 0 },
	{ TOWNS_GUDDASUNDEN, TOWNS_HJALSINGOR,  20,  1, 0, 1, 0, 0 },
	{ TOWNS_HJALSINGOR, TOWNS_ROVIK,  46,  2, 0, 1, 0, 0 },
	{ TOWNS_ROVIK, TOWNS_OVERTHORN,  67,  2, 0, 1, 0, 0 },
	{ TOWNS_ROVIK, TOWNS_ORVIL,  18,  1, 0, 1, 0, 0 },
	{ TOWNS_OVERTHORN, TOWNS_TJANSET,  40,  3, 0, 1, 0, 0 },
	{ TOWNS_OVERTHORN, TOWNS_VIDSAND,  48,  1, 0, 1, 0, 0 },
	{ TOWNS_TJANSET, TOWNS_LISKOR,  22,  6, 0, 1, 0, 0 },
	{ TOWNS_LISKOR, TOWNS_VIDSAND,  22,  1, 0, 1, 0, 0 },
	{ TOWNS_TJANSET, TOWNS_VIDSAND,  36,  2, 0, 1, 0, 0 },
	{ TOWNS_OVERTHORN, TOWNS_BRENDHIL,  32,  3, 0, 1, 0, 0 },
	{ TOWNS_BRENDHIL, TOWNS_MANRIN,  57,  5, 0, 1, 0, 0 },
	{ TOWNS_ROVIK, TOWNS_MANRIN,  83,  7, 0, 1, 0, 0 },
	{ TOWNS_THORWAL, TOWNS_MERSKE,  30,  7, 0, 1, 0, 0 },
	{ TOWNS_MERSKE, TOWNS_EFFERDUN,  18,  8, 0, 1, 0, 0 },
	{ TOWNS_THORWAL, TOWNS_EFFERDUN,  47,  3, 0, 1, 0, 0 },
	{ TOWNS_SERSKE, TOWNS_MERSKE,  24,  7, 0, 1, 0, 0 },
	{ TOWNS_SERSKE, TOWNS_EFFERDUN,  41,  5, 0, 1, 0, 0 },
	{ TOWNS_OVERTHORN, TOWNS_LISKOR,  51,  3, 0, 1, 0, 0 },
	{ TOWNS_THORWAL, TOWNS_VARNHEIM,  67,  4, 0, 1, 0, 0 },
	{ TOWNS_OTTARJE, TOWNS_PREM,  62,  4, 0, 1, 0, 0 },
	{ TOWNS_OTTARJE, TOWNS_RUNINSHAVEN,  73,  7, 0, 1, 0, 0 },
	{ TOWNS_SKJAL, TOWNS_RUNINSHAVEN,  55,  6, 0, 1, 0, 0 },
	{ TOWNS_RUNINSHAVEN, TOWNS_LEUCHTTURM_RUNIN,  25,  8, 0, 1, 0, 0 },
	{ TOWNS_TREBAN, TOWNS_LEUCHTTURM_RUNIN,  50, 10, 0, 1, 0, 0 },
	{ TOWNS_MANRIN, TOWNS_OVERTHORN,  60,  5, 0, 1, 0, 0 },
	{ 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x6f00
unsigned char g_travel_by_ship = 0; // ds:0x7070, 0 = on land, 1 = at the ship
signed short g_sea_travel_sleepbonus_table1[7] = { -2, 0, 5, 4, 3, 1, 0 }; // ds:0x7071, { -2, 0, 5, 4, 3, 1, 0 }
signed short g_sea_travel_sleepbonus_table2[7] = { -2, 0, 5, 4, 3, 1, 0 }; // ds:0x707f, { -2, 0, 5, 4, 3, 1, 0 }
char g_sea_travel_str_t[2] = "T"; // ds:0x708d
char g_sea_travel_str_en[3] = "EN"; // ds:0x708f
char g_sea_travel_str_comma[3] = ", "; // ds:0x7092
unsigned char g_unkn_050[1] = { 0x00 }; // ds:0x7095
char g_sea_travel_str_heller[10] = "%d^HELLER"; // ds:0x7096
char g_sea_travel_str_nothing[7] = "NICHTS"; // ds:0x70a0
unsigned char g_unkn_051[1] = { 0x00 }; // ds:0x70a7
struct{short min_size,price_mod,market_day,size;} g_market_descr_table[34] = {
	{ 0x0004, 0x0028, -0x0001, 0x0000 },
	{ 0x000a, 0x0000, -0x0001, 0x0000 },
	{ 0x000b, 0x0000, 0x0003, 0x0000 },
	{ 0x000a, 0x0014, 0x0005, 0x0000 },
	{ 0x000d, -0x001e, 0x0005, 0x0000 },
	{ 0x0009, 0x0000, 0x0000, 0x0000 },
	{ 0x000e, -0x001e, 0x0003, 0x0000 },
	{ 0x000d, 0x0000, 0x0005, 0x0000 },
	{ 0x0013, 0x0000, 0x0003, 0x0000 },
	{ 0x000c, -0x000a, 0x0000, 0x0000 },
	{ 0x0008, 0x000a, 0x0003, 0x0000 },
	{ 0x0011, -0x000a, 0x0004, 0x0000 },
	{ 0x0010, 0x0000, 0x0001, 0x0000 },
	{ 0x000e, 0x000a, 0x0003, 0x0000 },
	{ 0x0006, 0x001e, 0x0005, 0x0000 },
	{ 0x0009, 0x000a, -0x0001, 0x0000 },
	{ 0x000a, 0x0028, -0x0001, 0x0000 },
	{ 0x0001, -0x0032, -0x0001, 0x0000 },
	{ 0x0007, 0x000a, 0x0005, 0x0000 },
	{ 0x000a, -0x0014, 0x0003, 0x0000 },
	{ 0x0009, 0x0014, 0x0003, 0x0000 },
	{ 0x0008, 0x000a, 0x0002, 0x0000 },
	{ 0x000b, 0x0014, 0x0001, 0x0000 },
	{ 0x000a, 0x0000, 0x0000, 0x0000 },
	{ 0x000a, 0x0014, 0x0005, 0x0000 },
	{ 0x0008, 0x0014, 0x0002, 0x0000 },
	{ 0x000e, -0x001e, 0x0005, 0x0000 },
	{ 0x0005, 0x0000, -0x0001, 0x0000 },
	{ 0x0009, -0x000a, 0x0005, 0x0000 },
	{ 0x000c, 0x001e, 0x0005, 0x0000 },
	{ 0x0005, 0x0014, 0x0001, 0x0000 },
	{ 0x000c, 0x0000, 0x0003, 0x0000 },
	{ 0x0004, 0x001e, 0x0004, 0x0000 },
	{ -0x0001, 0x0000, 0x0000, 0x0000 }
}; // ds:0x70a8
unsigned char g_hyg_ani_x0[5] = { 0x52, 0x58, 0x59, 0x5a, 0x5a }; // ds:0x71b8
unsigned char g_hyg_ani_x1 = 0x5a; // ds:0x71bd
unsigned char g_hyg_ani_x2 = 0x5a; // ds:0x71be
unsigned char g_hyg_ani_x3[3] = { 0x5a, 0x5a, 0x5a }; // ds:0x71bf
unsigned char g_hyg_ani_x5 = 0xba; // ds:0x71c2
unsigned char g_hyg_ani_x6 = 0xba; // ds:0x71c3
unsigned char g_hyg_ani_x7[3] = { 0xb1, 0xa8, 0xa4 }; // ds:0x71c4
unsigned char g_hyg_ani_x9[3] = { 0x30, 0x26, 0x26 }; // ds:0x71c7
unsigned char g_towns_cityindex_table[52] = { 0x36, 0x04, 0x08, 0x07, 0x0a, 0x04, 0x02, 0x04, 0x04, 0x0c, 0x03, 0x04, 0x06, 0x03, 0x0c, 0x02, 0x12, 0x18, 0x03, 0x06, 0x01, 0x07, 0x0a, 0x07, 0x06, 0x08, 0x03, 0x0b, 0x0a, 0x03, 0x08, 0x04, 0x0c, 0x03, 0x05, 0x04, 0x08, 0x09, 0x16, 0x13, 0x03, 0x0a, 0x0a, 0x07, 0x06, 0x0a, 0x03, 0x0c, 0x02, 0x01, 0x01, 0x03 }; // ds:0x71ca
long g_daspota_locloot_index[18] = { 0x14fc3cce, 0x14fc3ceb, 0x14fc3cfa, 0x14fc3d09, 0x14fc3d12, 0x14fc3d31, 0x14fc3d4a, 0x14fc3d51, 0x00000000, 0x14fc3d60, 0x00000000, 0x14fc3d67, 0x14fc3d7c, 0x14fc3d85, 0x00000000, 0x14fc3d8a, 0x00000000, 0x14fc3d8f }; // ds:0x71fe; RealPt
unsigned char g_mapval_to_loctype[12] = { 0x00, 0x0f, 0x1f, 0x3f, 0x5f, 0x7f, 0x9f, 0xaf, 0xbf, 0xcf, 0xdf, 0xef }; // ds:0x7246
signed char g_seg066_0bad_unkn0[29] = { 0x01, -0x01, 0x02, -0x01, 0x03, 0x04, 0x05, -0x01, 0x06, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0a, -0x01, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, -0x01, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10 }; // ds:0x7252
signed char g_seg066_0bad_unkn1[29] = { 0x2a, -0x01, 0x2b, -0x01, 0x2c, 0x2d, 0x2e, -0x01, 0x2f, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x33, -0x01, 0x34, 0x35, 0x36, 0x37, 0x38, -0x01, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39 }; // ds:0x726f
signed char g_seg066_0bad_unkn2[29] = { 0x3a, -0x01, 0x3b, -0x01, 0x3c, 0x3d, 0x3e, -0x01, 0x3f, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x43, -0x01, 0x44, 0x45, 0x46, 0x47, 0x48, -0x01, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49 }; // ds:0x728c
signed char g_seg066_0bad_unkn3[29] = { 0x4e, -0x01, 0x4f, -0x01, 0x50, 0x51, 0x52, -0x01, 0x53, 0x53, 0x54, 0x55, 0x56, 0x57, 0x57, -0x01, 0x58, 0x59, 0x5a, 0x5b, 0x5c, -0x01, 0x5d, 0x5d, 0x5d, 0x5d, 0x5d, 0x5d, 0x5d }; // ds:0x72a9
signed char g_seg066_0bad_unkn4[29] = { 0x11, 0x12, 0x13, -0x01, 0x14, 0x15, 0x16, -0x01, -0x01, 0x17, 0x18, 0x19, 0x1a, 0x1b, -0x01, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29 }; // ds:0x72c6
signed char g_seg066_0bad_unkn5[29] = { -0x01, -0x01, -0x01, -0x01, 0x4a, 0x4a, 0x4a, -0x01, -0x01, -0x01, 0x4b, 0x4b, 0x4b, -0x01, -0x01, -0x01, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, -0x01, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d }; // ds:0x72e3
signed char g_seg066_0bad_unkn6[29] = { -0x01, -0x01, -0x01, -0x01, 0x5e, 0x5e, 0x5e, -0x01, -0x01, -0x01, 0x5f, 0x5f, 0x5f, -0x01, -0x01, -0x01, 0x60, 0x60, 0x60, 0x60, 0x60, -0x01, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61 }; // ds:0x7300
signed char g_seg066_0bad_unkn7[29] = { -0x01, -0x01, -0x01, -0x01, 0x62, 0x62, 0x62, -0x01, -0x01, -0x01, 0x63, 0x63, 0x63, -0x01, -0x01, -0x01, 0x64, 0x64, 0x64, 0x64, 0x64, -0x01, 0x65, 0x65, 0x65, 0x65, 0x65, 0x65, 0x65 }; // ds:0x731d
struct{signed short x,y;} g_visual_field_offsets_std[29] = {
	{ 0x0000, 0x0001 },
	{ -0x0001, -1 },
	{ 0x00bd, 0x0001 },
	{ -0x0141, 0x000e },
	{ -0x0097, 0x000e },
	{ 0x0013, 0x000e },
	{ 0x00bd, 0x000e },
	{ 0x0167, 0x000e },
	{ -0x00fd, 0x002e },
	{ -0x0097, 0x002e },
	{ -0x0031, 0x0024 },
	{ 0x0035, 0x0024 },
	{ 0x009b, 0x0024 },
	{ 0x0101, 0x002e },
	{ 0x0167, 0x002e },
	{ -0x005c, 0x0032 },
	{ -0x0024, 0x0032 },
	{ 0x0014, 0x0032 },
	{ 0x004c, 0x0032 },
	{ 0x0084, 0x0032 },
	{ 0x00bc, 0x0032 },
	{ 0x00f4, 0x0032 },
	{ -0x000e, 0x0039 },
	{ 0x0014, 0x0039 },
	{ 0x0036, 0x0039 },
	{ 0x0058, 0x0039 },
	{ 0x007a, 0x0039 },
	{ 0x009c, 0x0039 },
	{ 0x00be, 0x0039 }
}; // ds:0x733a
struct{signed short x,y;} g_visual_field_offsets_sign[29] = {
	{ 0x0014, 0x0001 },
	{ -0x0001, -1 },
	{ 0x00a9, 0x0001 },
	{ -0x0141, 0x000e },
	{ -0x0065, 0x000e },
	{ 0x0013, 0x000e },
	{ 0x008b, 0x000e },
	{ 0x0167, 0x000e },
	{ -0x00fd, 0x002e },
	{ -0x0097, 0x002e },
	{ -0x001d, 0x0024 },
	{ 0x0035, 0x0024 },
	{ 0x0091, 0x0024 },
	{ 0x0101, 0x002e },
	{ 0x0167, 0x002e },
	{ -0x005c, 0x0032 },
	{ -0x0024, 0x0032 },
	{ 0x0014, 0x0032 },
	{ 0x004c, 0x0032 },
	{ 0x0084, 0x0032 },
	{ 0x00bc, 0x0032 },
	{ 0x00f4, 0x0032 },
	{ -0x000e, 0x0039 },
	{ 0x0014, 0x0039 },
	{ 0x0036, 0x0039 },
	{ 0x0058, 0x0039 },
	{ 0x007a, 0x0039 },
	{ 0x009c, 0x0039 },
	{ 0x00be, 0x0039 }
}; // ds:0x73ae
struct{signed short x,y;} g_visual_field_offsets_inn[29] = {
	{ 0x0000, 0x0001 },
	{ -0x0001, -1 },
	{ 0x00bd, 0x0001 },
	{ -0x0141, 0x0000 },
	{ -0x0097, 0x0000 },
	{ 0x002d, 0x0000 },
	{ 0x00bd, 0x0000 },
	{ 0x0167, 0x0000 },
	{ -0x00fd, 0x0000 },
	{ -0x0097, 0x0000 },
	{ -0x0031, 0x0000 },
	{ 0x0046, 0x0000 },
	{ 0x009b, 0x0000 },
	{ 0x0101, 0x0000 },
	{ 0x0167, 0x0000 },
	{ -0x005c, 0x0000 },
	{ -0x0024, 0x0000 },
	{ 0x000e, 0x0000 },
	{ 0x0057, 0x0000 },
	{ 0x008a, 0x0000 },
	{ 0x00bc, 0x0000 },
	{ 0x00f4, 0x0000 },
	{ -0x000e, 0x000e },
	{ 0x0014, 0x000e },
	{ 0x0034, 0x000e },
	{ 0x005c, 0x000e },
	{ 0x007c, 0x000e },
	{ 0x009c, 0x000e },
	{ 0x00be, 0x000e }
}; // ds:0x7422
struct{signed short x,y;} g_visual_field_offsets_grass[29] = {
	{ 0x0000, 0x007a },
	{ 0x0000, 0x007a },
	{ 0x00bd, 0x007a },
	{ 0x0000, 0x0064 },
	{ 0x0000, 0x0064 },
	{ 0x0014, 0x0064 },
	{ 0x009b, 0x0064 },
	{ 0x0167, 0x0064 },
	{ 0x0000, 0x0055 },
	{ 0x0000, 0x0055 },
	{ 0x0000, 0x0055 },
	{ 0x0036, 0x0055 },
	{ 0x0084, 0x0055 },
	{ 0x00be, 0x0055 },
	{ 0x00be, 0x0055 },
	{ 0x0000, 0x004d },
	{ 0x0000, 0x004d },
	{ 0x0017, 0x004d },
	{ 0x004d, 0x004d },
	{ 0x0078, 0x004d },
	{ 0x0099, 0x004d },
	{ 0x00ba, 0x004d },
	{ 0x0000, 0x0043 },
	{ 0x001e, 0x0043 },
	{ 0x003c, 0x0043 },
	{ 0x0059, 0x0043 },
	{ 0x0068, 0x0043 },
	{ 0x006b, 0x0043 },
	{ 0x006d, 0x0043 }
}; // ds:0x7496
struct{unsigned char unkn[18];} g_tex_descr_table[101] = {
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xaa, 0x00, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xde, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x66, 0x00, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0xe9, 0xff, 0xff, 0xff, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xf5, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0a, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x05, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x06, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xaa, 0x00, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xde, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x66, 0x00, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0xe9, 0xff, 0xff, 0xff, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xf5, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xaa, 0x00, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xde, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x66, 0x00, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0xe9, 0xff, 0xff, 0xff, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xf5, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x31, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x1c, 0x00, 0x0d, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0f, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x09, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xaa, 0x00, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0a, 0x00, 0xde, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x66, 0x00, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x0b, 0x00, 0xe9, 0xff, 0xff, 0xff, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xf5, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0xe8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0xf2, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0xf7, 0xff, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0xfa, 0xff, 0xf3, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0xfe, 0xff, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xf3, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff }
}; // ds:0x750a
signed char g_visual_field_draw_order[29] = { 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x0f, 0x10, 0x15, 0x14, 0x11, 0x13, 0x12, 0x08, 0x09, 0x0e, 0x0d, 0x0a, 0x0c, 0x0b, 0x03, 0x04, 0x07, 0x06, 0x05, 0x00, 0x02, 0x01 }; // ds:0x7c24
signed char g_can_merge_group = -1; // ds:0x7c41, {-1,1}
unsigned char g_c_event_active = 0; // ds:0x7c42, 0 = default, 1 = city event active
unsigned char g_unkn_052[1] = { 0x00 }; // ds:0x7c43
char g_str_bank_deposit_to_big[57] = "TUT MIR LEID, ICH AKZEPTIERE MAXIMAL 30000 SILBERM\x9aNZEN!"; // ds:0x7c44
char g_str_obviously_closed[28] = "OFFENSICHTLICH GESCHLOSSEN!"; // ds:0x7c7d
unsigned char g_unkn_053[1] = { 0x00 }; // ds:0x7c99
unsigned char g_tmap_double1 = 0; // ds:0x7c9a, 1 = unicorn brought a piece you already have
unsigned char g_tmap_double2 = 0; // ds:0x7c9b, 1 = you got a piece you already have from the unicorn
unsigned char g_swafnild_travelled = 0; // ds:0x7c9c
unsigned char g_towns_gossip_max[52] = { 0x00, 0x1a, 0x0e, 0x0d, 0x05, 0x09, 0x06, 0x06, 0x07, 0x10, 0x07, 0x0b, 0x08, 0x0a, 0x0c, 0x11, 0x12, 0x0e, 0x10, 0x02, 0x0e, 0x00, 0x09, 0x0c, 0x0d, 0x0c, 0x0b, 0x07, 0x0a, 0x0c, 0x0a, 0x0c, 0x06, 0x0a, 0x09, 0x09, 0x08, 0x11, 0x0e, 0x0c, 0x00, 0x02, 0x07, 0x0f, 0x0b, 0x06, 0x0a, 0x08, 0x09, 0x0b, 0x0a, 0x00 }; // ds:0x7c9d
unsigned char g_towns_gossip_off[52] = { 0x00, 0x38, 0x06, 0x0a, 0x09, 0x0c, 0x06, 0x04, 0x06, 0x06, 0x0e, 0x05, 0x06, 0x08, 0x05, 0x0e, 0x04, 0x14, 0x1a, 0x05, 0x08, 0x00, 0x09, 0x0c, 0x09, 0x08, 0x0a, 0x05, 0x0d, 0x0c, 0x05, 0x0a, 0x06, 0x0e, 0x05, 0x07, 0x06, 0x0a, 0x0b, 0x18, 0x00, 0x05, 0x0c, 0x0c, 0x09, 0x08, 0x0c, 0x05, 0x0e, 0x04, 0x03, 0x00 }; // ds:0x7cd1
unsigned char g_unkn_054[1] = { 0x00 }; // ds:0x7d05
char g_gossip_str_triple_wildcard[8] = "%s %s%s"; // ds:0x7d06
struct{unsigned char r,g,b;} g_palette_fight2[20] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x3f, 0x00, 0x00 },
	{ 0x00, 0x3f, 0x00 },
	{ 0x00, 0x00, 0x3f },
	{ 0x3f, 0x3f, 0x00 },
	{ 0x3f, 0x00, 0x3f },
	{ 0x00, 0x3f, 0x3f },
	{ 0x3f, 0x1f, 0x1f },
	{ 0x1f, 0x1f, 0x3f },
	{ 0x0f, 0x1f, 0x0f },
	{ 0x0f, 0x0f, 0x1f },
	{ 0x20, 0x05, 0x00 },
	{ 0x3f, 0x1f, 0x00 },
	{ 0x3f, 0x00, 0x1f },
	{ 0x28, 0x22, 0x00 },
	{ 0x1f, 0x1f, 0x1f },
	{ 0x20, 0x00, 0x33 },
	{ 0x27, 0x13, 0x00 },
	{ 0x00, 0x30, 0x00 },
	{ 0x0a, 0x0a, 0x0a }
}; // ds:0x7d0e
unsigned char g_automap_bitmask[8] = { 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 }; // ds:0x7d4a, { 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 }
unsigned char g_automap_tile_arrowup[49] = { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1 }; // ds:0x7d52
unsigned char g_automap_tile_arrowright[49] = { 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }; // ds:0x7d83
unsigned char g_automap_tile_cross[49] = { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }; // ds:0x7db4
signed short g_automap_selx = -1; // ds:0x7de5
signed short g_automap_sely = -1; // ds:0x7de7
unsigned char g_unkn_055[1] = { 0x00 }; // ds:0x7de9
struct{unsigned char unkn[18];} g_dng_gfxtab_ships[88] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xde, 0xff, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0x66, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x24, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x18, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x55, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x30, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x23, 0x00, 0x0c, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x16, 0x00, 0x0a, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0d, 0x00, 0x06, 0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x15, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x1a, 0x00, 0x17, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x14, 0x00, 0xde, 0xff, 0x00, 0x00, 0x1a, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x10, 0x00, 0x0d, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x08, 0x00, 0x08, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x08, 0x00, 0x08, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00, 0x08, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x08, 0x00, 0x08, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x08, 0x00, 0x08, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x23, 0x00, 0x20, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x16, 0x00, 0x1b, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0d, 0x00, 0x10, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x1a, 0x00, 0x17, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x10, 0x00, 0x0d, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x08, 0x00, 0x08, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x08, 0x00, 0x08, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00, 0x08, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x08, 0x00, 0x08, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x08, 0x00, 0x08, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff }
}; // ds:0x7dea
struct{unsigned char unkn[18];} g_dng_gfxtab_stones[88] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xde, 0xff, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0x66, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x06, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x02, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x02, 0x00, 0x02, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x02, 0x00, 0x27, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x07, 0x00, 0x00, 0x00, 0x26, 0x00, 0x07, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x29, 0x00, 0x2a, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x16, 0x00, 0x18, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x18, 0x00, 0x0b, 0x00, 0x0a, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x27, 0x00, 0x28, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x13, 0x00, 0x13, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x18, 0x00, 0x0b, 0x00, 0x09, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x2f, 0x00, 0xf2, 0xff, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x16, 0x00, 0xfa, 0xff, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0d, 0x00, 0xff, 0xff, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x15, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x23, 0x00, 0x1d, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x14, 0x00, 0xde, 0xff, 0x00, 0x00, 0x1a, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x13, 0x00, 0x12, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x13, 0x00, 0x12, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x13, 0x00, 0x12, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x0b, 0x00, 0x09, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x0b, 0x00, 0x09, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x27, 0x00, 0x20, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x18, 0x00, 0x14, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x0d, 0x00, 0x10, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x23, 0x00, 0x1d, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x13, 0x00, 0x12, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x13, 0x00, 0x12, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x13, 0x00, 0x12, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0b, 0x00, 0x09, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x0b, 0x00, 0x09, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x0b, 0x00, 0x09, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x16, 0x00, 0x18, 0x00, 0x2e, 0x00, 0x66, 0x00, 0xfc, 0xff, 0x0a, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x16, 0x00, 0x18, 0x00, 0x2e, 0x00, 0xe9, 0xff, 0xfc, 0xff, 0x10, 0x80 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x13, 0x00, 0x13, 0x00, 0x31, 0x00, 0x66, 0x00, 0xfc, 0xff, 0x0a, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x13, 0x00, 0x13, 0x00, 0x31, 0x00, 0xe9, 0xff, 0xfc, 0xff, 0x10, 0x80 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xde, 0xff, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff }
}; // ds:0x841a
struct{unsigned char unkn[18];} g_dng_gfxtab_marbles[88] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x04, 0x00, 0x13, 0x00, 0xfb, 0xff, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0xde, 0xff, 0xfb, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x66, 0x00, 0xfc, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0xe9, 0xff, 0xfc, 0xff, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x36, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xf6, 0xff, 0xff, 0xff, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x27, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x28, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x2c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x09, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x11, 0x00, 0xff, 0xff, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x3b, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x25, 0x00, 0x03, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x16, 0x00, 0x03, 0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x15, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x1c, 0x00, 0x0f, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x14, 0x00, 0xde, 0xff, 0x00, 0x00, 0x1a, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x08, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x10, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x10, 0x00, 0x08, 0x00, 0x20, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x08, 0x00, 0x04, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x08, 0x00, 0x04, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00, 0x04, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x08, 0x00, 0x04, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x08, 0x00, 0x04, 0x00, 0x21, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x35, 0x00, 0x34, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x23, 0x00, 0x24, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x15, 0x00, 0x15, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x16, 0x00, 0x1c, 0x00, 0x0f, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x66, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x11, 0x00, 0x08, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0x11, 0x00, 0x08, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x17, 0x00, 0xe9, 0xff, 0x00, 0x00, 0x1b, 0x80, 0x11, 0x00, 0x08, 0x00, 0x23, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1c, 0x80, 0x0a, 0x00, 0x02, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x1e, 0x80, 0x0a, 0x00, 0x02, 0x00, 0x24, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x66, 0x00, 0xfc, 0xff, 0x0a, 0x00 },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2e, 0x00, 0xe9, 0xff, 0xfc, 0xff, 0x10, 0x80 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x11, 0x00, 0xff, 0xff, 0x31, 0x00, 0x66, 0x00, 0xfc, 0xff, 0x0a, 0x00 },
	{ 0x00, 0x00, 0xfd, 0xff, 0x06, 0x00, 0x11, 0x00, 0xff, 0xff, 0x31, 0x00, 0xe9, 0xff, 0xfc, 0xff, 0x10, 0x80 },
	{ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xff, 0x00, 0x00, 0x12, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x04, 0x00, 0x13, 0x00, 0xfb, 0xff, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0xde, 0xff, 0xfb, 0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x36, 0x00, 0xff, 0xff, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xf6, 0xff, 0xff, 0xff, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff },
	{ 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0xf4, 0xff, 0x00, 0x00, 0x13, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff }
}; // ds:0x8a4a
unsigned char g_dng_stub3_unkn0[22] = { 0x01, 0xff, 0x02, 0xff, 0x03, 0x04, 0x05, 0xff, 0x06, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0a, 0xff, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff }; // ds:0x907a
unsigned char g_dng_stub3_unkn1[22] = { 0xff, 0xff, 0xff, 0xff, 0x10, 0x11, 0x12, 0xff, 0xff, 0xff, 0x13, 0x14, 0x15, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff }; // ds:0x9090
unsigned char g_dng_stub3_unkn2[22] = { 0xff, 0xff, 0xff, 0xff, 0x16, 0x17, 0x18, 0xff, 0xff, 0xff, 0x19, 0x1a, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff }; // ds:0x90a6
unsigned char g_dng_stub3_unkn3[22] = { 0x01, 0xff, 0x02, 0xff, 0x53, 0x1c, 0x54, 0xff, 0x4b, 0x4b, 0x4c, 0x1d, 0x4d, 0x4e, 0x4e, 0xff, 0x55, 0x56, 0x1e, 0x57, 0x58, 0xff }; // ds:0x90bc
unsigned char g_dng_stub3_unkn4[22] = { 0x01, 0xff, 0x02, 0xff, 0x53, 0x1f, 0x54, 0xff, 0x4f, 0x4f, 0x50, 0x20, 0x51, 0x52, 0x52, 0xff, 0x55, 0x56, 0x21, 0x57, 0x58, 0xff }; // ds:0x90d2
unsigned char g_dng_stub3_unkn5[22] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0x22, 0xff, 0xff, 0xff, 0xff, 0xff, 0x23, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x24, 0xff, 0xff, 0xff }; // ds:0x90e8
unsigned char g_dng_stub3_unkn6[22] = { 0x25, 0xff, 0x26, 0xff, 0x27, 0x28, 0x29, 0xff, 0x2a, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2e, 0xff, 0x2f, 0x30, 0x31, 0x32, 0x33, 0xff }; // ds:0x90fe
unsigned char g_dng_stub3_unkn7[22] = { 0x25, 0xff, 0x26, 0xff, 0x27, 0x34, 0x29, 0xff, 0x35, 0x35, 0x36, 0x37, 0x38, 0x39, 0x39, 0xff, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0xff }; // ds:0x9114
unsigned char g_dng_stub3_unkn8[22] = { 0x25, 0xff, 0x26, 0xff, 0x27, 0x42, 0x29, 0xff, 0x2a, 0x2a, 0x43, 0x44, 0x45, 0x2e, 0x2e, 0xff, 0x46, 0x47, 0x48, 0x49, 0x4a, 0xff }; // ds:0x912a
unsigned char g_dng_stub3_unkn9[22] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x40, 0x40, 0x40, 0x40, 0x40, 0xff, 0xff, 0x41, 0x41, 0x41, 0x41, 0x41, 0xff }; // ds:0x9140
signed short g_dng_stub4_unkn0[44] = { 0x0000, 0x0001, -0x0001, -0x0001, 0x00bd, 0x0001, -0x0013, 0x000e, 0x0000, 0x000e, 0x0013, 0x000e, 0x00bd, 0x000e, 0x0167, 0x000e, -0x00fd, 0x002e, -0x0097, 0x002e, -0x0031, 0x0024, 0x0035, 0x0024, 0x009b, 0x0024, 0x0101, 0x002e, 0x0167, 0x002e, -0x005c, 0x0032, -0x0024, 0x0032, 0x0014, 0x0032, 0x004c, 0x0032, 0x0084, 0x0032, 0x00bc, 0x0032, 0x00f4, 0x0032 }; // ds:0x9156
signed short g_dng_stub4_unkn1[44] = { 0x0000, 0x0001, -0x0001, -0x0001, 0x00bd, 0x0001, -0x0013, 0x000e, 0x0000, 0x000e, 0x0013, 0x000e, 0x00bd, 0x000e, 0x0167, 0x000e, -0x00fd, 0x002e, -0x0097, 0x002e, -0x0031, 0x0024, 0x0035, 0x0024, 0x009b, 0x0024, 0x0101, 0x002e, 0x0167, 0x002e, -0x0001, -0x0001, -0x0024, 0x0032, 0x0014, 0x0032, 0x004c, 0x0032, 0x0084, 0x0032, 0x00bc, 0x0032, -0x0001, -1 }; // ds:0x91ae
signed short g_dng_stub4_unkn2[44] = { -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, 0x0000, 0x0066, 0x0037, 0x0065, 0x00bc, 0x0066, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, 0x0000, 0x0057, 0x004a, 0x0057, 0x00a0, 0x0057, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x9206
signed short g_dng_stub4_unkn3[44] = { -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, 0x0002, 0x0013, 0x003e, 0x0013, 0x00bc, 0x0013, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, 0x0002, 0x0023, 0x0051, 0x0023, 0x00a4, 0x0023, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -0x0001, -1 }; // ds:0x925e
signed char g_dng_stub4_unkn4[22] = { 0x0f, 0x10, 0x15, 0x14, 0x11, 0x13, 0x12, 0x08, 0x09, 0x0e, 0x0d, 0x0a, 0x0c, 0x0b, 0x03, 0x04, 0x07, 0x06, 0x05, 0x00, 0x02, 0x01 }; // ds:0x92b6
char g_dng_stub6_str_comma[3] = ", "; // ds:0x92cc
char g_dng_stub6_str_and[6] = " UND "; // ds:0x92cf
unsigned char g_unkn_056[1] = { 0x00 }; // ds:0x92d5
long g_dng_handlers[15] = { 0x13d10020, 0x13d70048, 0x13dd0066, 0x13e4003e, 0x13e40043, 0x13e9002a, 0x13ed0020, 0x13f00057, 0x13f60048, 0x13fc003e, 0x14010066, 0x1417002a, 0x141b0043, 0x14080020, 0x1411003e }; // ds:0x92d6; RealPt
unsigned short g_dng_level_changed = 0; // ds:0x9312
struct{unsigned char unkn[21];} g_dng01_specialchests[9] = {
	{ 0x09, 0x0c, 0xdb, 0x52, 0x00, 0x20, 0x14, 0x25, 0x00, 0x20, 0x14, 0x43, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x15, 0x02, 0x4d, 0x00, 0x20, 0x14, 0x2a, 0x00, 0x20, 0x14, 0x25, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x1e, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x2a, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x3d, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x34, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x13, 0x00, 0x00 },
	{ 0x06, 0x3e, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x39, 0x00, 0x20, 0x14, 0x34, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x3d, 0x01, 0x48, 0x00, 0xd1, 0x13, 0x4d, 0x00, 0xd1, 0x13, 0x52, 0x00, 0xd1, 0x13, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x4d, 0x01, 0x3e, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0xd1, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9314
char g_dng01_str_marbo[6] = { 0x4d, 0x41, 0x52, 0x42, 0x4f, 0x00 }; // ds:0x93d1
unsigned char g_unkn_057[1] = { 0x00 }; // ds:0x93d7
struct{unsigned char unkn[21];} g_dng02_specialchests[8] = {
	{ 0x0b, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x14, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x2a, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x14, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x2f, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x1e, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x70, 0x00, 0x20, 0x14, 0x39, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x11, 0x01, 0x3e, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0xd7, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x93d8
struct{unsigned char unkn[21];} g_dng03_specialchests[14] = {
	{ 0x03, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xdd, 0x13, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00 },
	{ 0x06, 0x0a, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x2f, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x0b, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x61, 0x00, 0x20, 0x14, 0x34, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x09, 0x05, 0x4d, 0x00, 0x20, 0x14, 0x75, 0x00, 0x20, 0x14, 0x39, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x0b, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x3e, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x11, 0x01, 0x4d, 0x00, 0x20, 0x14, 0x7a, 0x00, 0x20, 0x14, 0x48, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x11, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x6b, 0x00, 0x20, 0x14, 0x4d, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x20, 0x4e, 0x00, 0x00 },
	{ 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x1a, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x61, 0x00, 0xdd, 0x13, 0x5c, 0x00, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9480
char g_dng03_str_spinnennetz[12] = "SPINNENNETZ"; // ds:0x95a6
char g_dng03_str_mactans[8] = "MACTANS"; // ds:0x95b2
struct{unsigned char unkn[21];} g_dng04_specialchests[4] = {
	{ 0x07, 0x06, 0x01, 0x25, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x01, 0x01, 0x2f, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x06, 0x01, 0x39, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0xe4, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x95ba
short g_dng05_trash_flag = 0; // ds:0x960e
struct{unsigned char unkn[21];} g_dng06_specialchests[3] = {
	{ 0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xe9, 0x13, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00 },
	{ 0x04, 0x19, 0x00, 0x4d, 0x00, 0x20, 0x14, 0x61, 0x00, 0x20, 0x14, 0x25, 0x00, 0xe9, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9610
char g_str_s_war[8] = "%s WAR "; // ds:0x964f
char g_str_s_und_s_waren[17] = "%s UND %s WAREN "; // ds:0x9657
struct{unsigned char unkn[21];} g_dng07_specialchests[2] = {
	{ 0x05, 0x28, 0x05, 0x4d, 0x00, 0x20, 0x14, 0x75, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9668
struct{unsigned char unkn[21];} g_dng08_specialchests[7] = {
	{ 0x01, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x0e, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x20, 0x00, 0xf0, 0x13, 0x2f, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x09, 0x00, 0x39, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0d, 0x05, 0x05, 0x48, 0x00, 0xf0, 0x13, 0x5c, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x06, 0x05, 0x4d, 0x00, 0xf0, 0x13, 0x5c, 0x00, 0x20, 0x14, 0x3e, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x06, 0x05, 0x52, 0x00, 0xf0, 0x13, 0x5c, 0x00, 0x20, 0x14, 0x43, 0x00, 0xf0, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9692
char g_dng08_str_tairach[8] = "TAIRACH"; // ds:0x9725
unsigned char g_unkn_058[1] = { 0x00 }; // ds:0x972d
struct{unsigned char unkn[21];} g_dng09_specialchests[8] = {
	{ 0x08, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xf6, 0x13, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00 },
	{ 0x04, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0xf6, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x0e, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0xf6, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0xf6, 0x13, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00 },
	{ 0x08, 0x19, 0x08, 0x4d, 0x00, 0x20, 0x14, 0x43, 0x00, 0xf6, 0x13, 0x34, 0x00, 0xf6, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x11, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0xf6, 0x13, 0x00, 0x00, 0xdc, 0x05, 0x00, 0x00 },
	{ 0x05, 0x11, 0x08, 0x4d, 0x00, 0x20, 0x14, 0x66, 0x00, 0x20, 0x14, 0x3e, 0x00, 0xf6, 0x13, 0x00, 0x00, 0xa8, 0x61, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x972e
struct{unsigned char unkn[21];} g_dng10_specialchests[6] = {
	{ 0x02, 0x05, 0x01, 0x25, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x11, 0x00, 0x4d, 0x00, 0x20, 0x14, 0x7a, 0x00, 0x20, 0x14, 0x34, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0xfc, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x97d6
struct{unsigned char unkn[21];} g_dng11_specialchests[15] = {
	{ 0x0c, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00 },
	{ 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00 },
	{ 0x0c, 0x0e, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x84, 0x00, 0x20, 0x14, 0x2a, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x0e, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x84, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x01, 0x14, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x01, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x01, 0x14, 0x00, 0x00, 0xa8, 0x02, 0x00, 0x00 },
	{ 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x01, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x01, 0x14, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00 },
	{ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x06, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x7f, 0x00, 0x20, 0x14, 0x52, 0x00, 0x01, 0x14, 0x00, 0x00, 0xd0, 0x07, 0x00, 0x00 },
	{ 0x05, 0x0b, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x7a, 0x00, 0x20, 0x14, 0x57, 0x00, 0x01, 0x14, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00 },
	{ 0x05, 0x0c, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x7a, 0x00, 0x20, 0x14, 0x5c, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x09, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9854
unsigned char g_unkn_059[1] = { 0x00 }; // ds:0x998f
struct{unsigned char unkn[21];} g_dng14_specialchests[9] = {
	{ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x02, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x13, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x25, 0x00, 0x20, 0x14, 0x34, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x14, 0x04, 0x4d, 0x00, 0x20, 0x14, 0x25, 0x00, 0x20, 0x14, 0x39, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x15, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x2f, 0x00, 0x20, 0x14, 0x43, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x3c, 0x28, 0x00, 0x00 },
	{ 0x02, 0x2d, 0x08, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x2d, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x52, 0x00, 0x0b, 0x14, 0x4d, 0x00, 0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9990
unsigned char g_unkn_060[1] = { 0x00 }; // ds:0x9a4d
struct{unsigned char unkn[21];} g_dng15_specialchests[33] = {
	{ 0x0b, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0d, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x13, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x09, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x08, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x09, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x1e, 0x08, 0x4d, 0x00, 0x20, 0x14, 0x5c, 0x00, 0x20, 0x14, 0x52, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x15, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x26, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0c, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x09, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x05, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x37, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0a, 0x37, 0x03, 0x4d, 0x00, 0x20, 0x14, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x03, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x04, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x06, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x11, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9a4e
unsigned char g_unkn_061[1] = { 0x00 }; // ds:0x9d03
struct{unsigned char unkn[21];} g_dng12_specialchests[3] = {
	{ 0x0a, 0x08, 0x06, 0x4d, 0x00, 0x20, 0x14, 0x84, 0x00, 0x20, 0x14, 0x25, 0x00, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x07, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x9c, 0x00, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9d04
signed short g_dng12_obstacle_tries = 0; // ds:0x9d43
signed short g_dng12_watertrap_bak = 0; // ds:0x9d45
unsigned char g_unkn_062[1] = { 0x00 }; // ds:0x9d47
struct{unsigned char unkn[21];} g_dng13_specialchests[2] = {
	{ 0x05, 0x0b, 0x01, 0x34, 0x00, 0x1b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x1b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x01, 0x04, 0x01, 0x2f, 0x00, 0x1b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x1b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0x9d48
unsigned char g_unkn_063[18] = { 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0x9d72
long g_dng_specialchest_index[16] = { 0x00000000, 0x14fc9314, 0x14fc93d8, 0x14fc9480, 0x14fc95ba, 0x00000000, 0x14fc9610, 0x14fc9668, 0x14fc9692, 0x14fc972e, 0x14fc97d6, 0x14fc9854, 0x14fc9d04, 0x14fc9d48, 0x14fc9990, 0x14fc9a4e }; // ds:0x9d84; RealPt
char g_str_single_space[2] = " "; // ds:0x9dc4
struct{char from, to, length, speed_mod, encounters, u1, u2, fights, u3;} g_routes_tab[59] = {
	{ 0x01, 0x2c, 0x22, 0x01, 0x0a, 0x19, 0x00, 0x0a, 0x64 },
	{ 0x2c, 0x2b, 0x28, 0x01, 0x0a, 0x14, 0x00, 0x0a, 0x64 },
	{ 0x2b, 0x28, 0x15, 0x01, 0x0a, 0x05, 0x00, 0x0a, 0x64 },
	{ 0x01, 0x02, 0x09, 0x02, 0x05, 0x64, 0x00, 0x05, 0x64 },
	{ 0x02, 0x09, 0x1b, 0x02, 0x05, 0x64, 0x00, 0x05, 0x64 },
	{ 0x09, 0x0a, 0x0f, 0x02, 0x05, 0x64, 0x00, 0x05, 0x64 },
	{ 0x02, 0x03, 0x24, -0x01, 0x19, 0x0a, 0x00, 0x0a, 0x5a },
	{ 0x31, 0x0b, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0b, 0x03, 0x1c, 0x00, 0x14, 0x0f, 0x05, 0x14, 0x4b },
	{ 0x03, 0x04, 0x21, 0x00, 0x19, 0x0f, 0x05, 0x14, 0x4b },
	{ 0x04, 0x05, 0x1e, 0x00, 0x1e, 0x0f, 0x05, 0x14, 0x4b },
	{ 0x05, 0x06, 0x26, 0x00, 0x1e, 0x0f, 0x05, 0x14, 0x4b },
	{ 0x06, 0x07, 0x18, 0x00, 0x23, 0x0f, 0x05, 0x14, 0x4b },
	{ 0x07, 0x08, 0x1b, -0x01, 0x28, 0x05, 0x05, 0x1e, 0x32 },
	{ 0x01, 0x31, 0x15, 0x01, 0x0f, 0x41, 0x00, 0x14, 0x64 },
	{ 0x31, 0x0c, 0x0b, 0x01, 0x0f, 0x37, 0x00, 0x14, 0x64 },
	{ 0x0c, 0x32, 0x16, 0x01, 0x0f, 0x37, 0x00, 0x19, 0x64 },
	{ 0x32, 0x0e, 0x0c, 0x01, 0x14, 0x37, 0x00, 0x19, 0x64 },
	{ 0x32, 0x0d, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0e, 0x0f, 0x18, 0x01, 0x0f, 0x3c, 0x00, 0x1e, 0x64 },
	{ 0x0f, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 0x0f, 0x12, 0x69, -0x01, 0x23, 0x0a, 0x05, 0x2d, 0x64 },
	{ 0x12, 0x13, 0x11, -0x01, 0x23, 0x19, 0x05, 0x3c, 0x64 },
	{ 0x12, 0x15, 0x39, -0x02, 0x19, 0x00, 0x00, 0x32, 0x64 },
	{ 0x2b, 0x0e, 0x34, -0x01, 0x0f, 0x19, 0x05, 0x0f, 0x4b },
	{ 0x28, 0x29, 0x13, -0x02, 0x0f, 0x05, 0x05, 0x05, 0x28 },
	{ 0x28, 0x25, 0x24, -0x01, 0x14, 0x05, 0x1e, 0x00, 0x14 },
	{ 0x25, 0x26, 0x30, -0x01, 0x0f, 0x0a, 0x1e, 0x00, 0x0a },
	{ 0x26, 0x27, 0x1b, 0x00, 0x0f, 0x19, 0x23, 0x00, 0x05 },
	{ 0x27, 0x21, 0x22, 0x00, 0x0a, 0x19, 0x1e, 0x00, 0x00 },
	{ 0x25, 0x1c, 0x41, -0x02, 0x1e, 0x05, 0x0a, 0x05, 0x05 },
	{ 0x1c, 0x1b, 0x1d, 0x00, 0x0f, 0x1e, 0x19, 0x0a, 0x14 },
	{ 0x1b, 0x1a, 0x19, 0x00, 0x14, 0x1e, 0x19, 0x0a, 0x0f },
	{ 0x1a, 0x18, 0x18, 0x00, 0x05, 0x19, 0x14, 0x0a, 0x0a },
	{ 0x18, 0x17, 0x15, 0x00, 0x0a, 0x1e, 0x19, 0x0a, 0x14 },
	{ 0x1b, 0x19, 0x2a, -0x02, 0x19, 0x14, 0x0f, 0x05, 0x0f },
	{ 0x19, 0x18, 0x13, 0x00, 0x14, 0x1e, 0x19, 0x05, 0x14 },
	{ 0x1a, 0x19, 0x2f, 0x00, 0x14, 0x19, 0x14, 0x05, 0x0f },
	{ 0x0f, 0x11, 0x0c, 0x01, 0x0f, 0x3c, 0x00, 0x19, 0x64 },
	{ 0x11, 0x14, 0x14, -0x02, 0x32, 0x05, 0x0a, 0x1e, 0x4b },
	{ 0x14, 0x16, 0x32, -0x02, 0x32, 0x05, 0x0a, 0x1e, 0x4b },
	{ 0x16, 0x17, 0x1e, -0x02, 0x32, 0x05, 0x0a, 0x1e, 0x4b },
	{ 0x17, 0x2d, 0x1c, 0x01, 0x14, 0x28, 0x32, 0x05, 0x0f },
	{ 0x2d, 0x2e, 0x1d, 0x01, 0x14, 0x1e, 0x32, 0x05, 0x0a },
	{ 0x11, 0x15, 0x51, -0x03, 0x32, 0x00, 0x00, 0x32, 0x64 },
	{ 0x14, 0x15, 0x43, -0x03, 0x32, 0x00, 0x00, 0x32, 0x64 },
	{ 0x29, 0x19, 0x3c, -0x04, 0x28, 0x00, 0x0a, 0x05, 0x0a },
	{ 0x26, 0x1c, 0x44, -0x04, 0x28, 0x00, 0x05, 0x05, 0x05 },
	{ 0x08, 0x12, -0x74, -0x04, 0x32, 0x00, 0x00, 0x0a, 0x1e },
	{ 0x09, 0x05, 0x47, -0x02, 0x19, 0x05, 0x05, 0x0a, 0x32 },
	{ 0x1c, 0x1e, 0x17, -0x02, 0x19, 0x05, 0x05, 0x00, 0x14 },
	{ 0x2a, 0x2a, 0x46, -0x03, 0x23, 0x00, 0x00, 0x00, 0x00 },
	{ 0x2a, 0x33, 0x09, -0x02, 0x28, 0x05, 0x05, 0x00, 0x00 },
	{ 0x24, 0x34, 0x18, -0x03, 0x1e, 0x00, 0x00, 0x00, 0x00 },
	{ 0x24, 0x34, 0x11, -0x02, 0x23, 0x05, 0x05, 0x00, 0x00 },
	{ 0x2f, 0x30, 0x1e, -0x03, 0x23, 0x00, 0x00, 0x00, 0x00 },
	{ 0x15, 0x15, 0x2f, -0x03, 0x23, 0x00, 0x00, 0x32, 0x64 },
	{ 0x34, 0x24, 0x1b, -0x03, 0x19, 0x00, 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x32, -0x04, 0x32, 0x00, 0x00, 0x05, 0x09 }
}; // ds:0x9dc6
char g_dirsign_routes[219] = { 0x0f, -0x01, 0x04, -0x01, 0x01, -0x01, 0x04, -0x01, 0x05, 0x07, -0x01, 0x0a, -0x01, 0x07, -0x01, 0x09, -0x01, 0x0b, -0x01, 0x0a, -0x01, 0x32, -0x01, 0x0c, -0x01, 0x0b, -0x01, 0x0c, -0x01, 0x0d, -0x01, 0x0d, -0x01, 0x0e, -0x01, 0x0e, -0x01, 0x31, -0x01, 0x32, -0x01, 0x05, -0x01, 0x06, -0x01, 0x06, -0x01, 0x08, -0x01, 0x09, -0x01, 0x10, -0x01, 0x11, -0x01, 0x13, -0x01, 0x12, -0x01, 0x14, -0x01, 0x19, -0x01, 0x15, -0x01, 0x16, -0x01, 0x14, -0x01, 0x27, -0x01, 0x15, -0x01, 0x27, -0x01, 0x28, -0x01, 0x2d, -0x01, 0x17, -0x01, 0x31, -0x01, 0x16, -0x01, 0x18, -0x01, 0x17, -0x01, 0x28, -0x01, 0x29, -0x01, 0x2e, -0x01, 0x18, 0x2e, 0x2d, 0x39, 0x39, -0x01, 0x29, -0x01, 0x2a, -0x01, 0x2a, -0x01, 0x23, -0x01, 0x2b, -0x01, 0x23, -0x01, 0x25, -0x01, 0x22, -0x01, 0x25, -0x01, 0x24, 0x26, -0x01, 0x2f, -0x01, 0x22, -0x01, 0x21, 0x26, -0x01, 0x24, 0x21, -0x01, 0x20, -0x01, 0x30, 0x1f, -0x01, 0x20, -0x01, 0x33, -0x01, 0x33, -0x01, 0x1e, -0x01, 0x36, -0x01, 0x3a, -0x01, 0x37, -0x01, 0x1b, -0x01, 0x1c, -0x01, 0x1f, -0x01, 0x1c, -0x01, 0x1d, -0x01, 0x30, -0x01, 0x1d, -0x01, 0x1e, -0x01, 0x1b, -0x01, 0x03, -0x01, 0x1a, -0x01, 0x2f, -0x01, 0x1a, -0x01, 0x35, -0x01, 0x34, -0x01, 0x34, -0x01, 0x02, -0x01, 0x19, -0x01, 0x03, -0x01, 0x01, -0x01, 0x02, -0x01, 0x2b, -0x01, 0x2c, -0x01, 0x2c, -0x01, 0x38, -0x01, 0x38, -0x01, 0x10, -0x01, 0x0f, -0x01, 0x08, -0x01, 0x11, -0x01, 0x12, -0x01, 0x13, -0x01, 0x35, -0x01, 0x37, -1 }; // ds:0x9fd9, 105 arrays, each terminated by -1
struct{char town, type_id; long routes;} g_direction_signs[106] = {
	{ 0x01, 0x01, 0x14fc9fd9 },
	{ 0x01, 0x02, 0x14fc9fdb },
	{ 0x01, 0x04, 0x14fc9fdd },
	{ 0x02, 0x01, 0x14fc9fdf },
	{ 0x02, 0x02, 0x14fc9fe1 },
	{ 0x03, 0x01, 0x14fc9fe4 },
	{ 0x03, 0x02, 0x14fc9fe6 },
	{ 0x03, 0x03, 0x14fc9fe8 },
	{ 0x04, 0x01, 0x14fc9fea },
	{ 0x04, 0x02, 0x14fc9fec },
	{ 0x05, 0x01, 0x14fc9fee },
	{ 0x05, 0x02, 0x14fc9ff0 },
	{ 0x05, 0x03, 0x14fc9ff2 },
	{ 0x06, 0x01, 0x14fc9ff4 },
	{ 0x06, 0x02, 0x14fc9ff6 },
	{ 0x07, 0x01, 0x14fc9ff8 },
	{ 0x07, 0x02, 0x14fc9ffa },
	{ 0x08, 0x01, 0x14fc9ffc },
	{ 0x08, 0x02, 0x14fc9ffe },
	{ 0x09, 0x02, 0x14fca000 },
	{ 0x09, 0x03, 0x14fca002 },
	{ 0x09, 0x04, 0x14fca004 },
	{ 0x0a, 0x02, 0x14fca006 },
	{ 0x0b, 0x01, 0x14fca008 },
	{ 0x0b, 0x02, 0x14fca00a },
	{ 0x0c, 0x01, 0x14fca00c },
	{ 0x0c, 0x02, 0x14fca00e },
	{ 0x0d, 0x01, 0x14fca010 },
	{ 0x0e, 0x01, 0x14fca012 },
	{ 0x0e, 0x02, 0x14fca014 },
	{ 0x0e, 0x03, 0x14fca016 },
	{ 0x0f, 0x01, 0x14fca018 },
	{ 0x0f, 0x02, 0x14fca01a },
	{ 0x0f, 0x03, 0x14fca01c },
	{ 0x0f, 0x04, 0x14fca01e },
	{ 0x10, 0x01, 0x14fca020 },
	{ 0x11, 0x01, 0x14fca022 },
	{ 0x11, 0x02, 0x14fca024 },
	{ 0x11, 0x03, 0x14fca026 },
	{ 0x12, 0x01, 0x14fca028 },
	{ 0x12, 0x02, 0x14fca02a },
	{ 0x12, 0x03, 0x14fca02c },
	{ 0x12, 0x04, 0x14fca02e },
	{ 0x13, 0x01, 0x14fca030 },
	{ 0x14, 0x01, 0x14fca032 },
	{ 0x14, 0x02, 0x14fca034 },
	{ 0x14, 0x03, 0x14fca036 },
	{ 0x15, 0x01, 0x14fca038 },
	{ 0x16, 0x01, 0x14fca03e },
	{ 0x16, 0x02, 0x14fca040 },
	{ 0x17, 0x01, 0x14fca042 },
	{ 0x17, 0x02, 0x14fca044 },
	{ 0x17, 0x03, 0x14fca046 },
	{ 0x18, 0x01, 0x14fca048 },
	{ 0x18, 0x02, 0x14fca04a },
	{ 0x18, 0x03, 0x14fca04c },
	{ 0x19, 0x01, 0x14fca04e },
	{ 0x19, 0x02, 0x14fca050 },
	{ 0x19, 0x03, 0x14fca053 },
	{ 0x1a, 0x01, 0x14fca055 },
	{ 0x1a, 0x02, 0x14fca057 },
	{ 0x1b, 0x01, 0x14fca05a },
	{ 0x1b, 0x02, 0x14fca05d },
	{ 0x1c, 0x01, 0x14fca05f },
	{ 0x1c, 0x02, 0x14fca062 },
	{ 0x1c, 0x03, 0x14fca064 },
	{ 0x1e, 0x01, 0x14fca066 },
	{ 0x21, 0x01, 0x14fca068 },
	{ 0x24, 0x01, 0x14fca06a },
	{ 0x24, 0x02, 0x14fca06c },
	{ 0x24, 0x04, 0x14fca06e },
	{ 0x25, 0x01, 0x14fca070 },
	{ 0x25, 0x02, 0x14fca072 },
	{ 0x25, 0x03, 0x14fca074 },
	{ 0x26, 0x01, 0x14fca076 },
	{ 0x26, 0x02, 0x14fca078 },
	{ 0x26, 0x03, 0x14fca07a },
	{ 0x27, 0x01, 0x14fca07c },
	{ 0x27, 0x02, 0x14fca07e },
	{ 0x28, 0x01, 0x14fca080 },
	{ 0x28, 0x02, 0x14fca082 },
	{ 0x28, 0x03, 0x14fca084 },
	{ 0x29, 0x01, 0x14fca086 },
	{ 0x29, 0x02, 0x14fca088 },
	{ 0x2a, 0x02, 0x14fca08a },
	{ 0x2a, 0x03, 0x14fca08c },
	{ 0x2a, 0x04, 0x14fca08e },
	{ 0x2b, 0x01, 0x14fca090 },
	{ 0x2b, 0x02, 0x14fca092 },
	{ 0x2b, 0x03, 0x14fca094 },
	{ 0x2c, 0x01, 0x14fca096 },
	{ 0x2c, 0x02, 0x14fca098 },
	{ 0x2d, 0x01, 0x14fca09a },
	{ 0x2d, 0x02, 0x14fca09c },
	{ 0x2e, 0x01, 0x14fca09e },
	{ 0x2f, 0x01, 0x14fca0a0 },
	{ 0x30, 0x01, 0x14fca0a2 },
	{ 0x31, 0x01, 0x14fca0a4 },
	{ 0x31, 0x02, 0x14fca0a6 },
	{ 0x31, 0x03, 0x14fca0a8 },
	{ 0x32, 0x01, 0x14fca0aa },
	{ 0x32, 0x02, 0x14fca0ac },
	{ 0x32, 0x03, 0x14fca0ae },
	{ 0x33, 0x01, 0x14fca0b0 },
	{ 0x34, 0x02, 0x14fca0b2 },
	{ -0x01, 0x00, 0x00000000 }
}; // ds:0xa0b4; RealPt
char g_harbor_passages[115] = { 0x01, 0x08, 0x21, 0x23, 0x27, -0x01, 0x24, 0x25, -0x01, 0x21, 0x22, 0x24, -0x01, 0x22, 0x23, 0x25, -0x01, 0x1c, 0x1b, 0x26, -0x01, 0x1b, 0x1d, 0x19, -0x01, 0x18, -0x01, 0x06, 0x19, 0x1a, 0x1e, 0x26, 0x17, 0x2d, -0x01, 0x16, 0x17, 0x18, 0x20, -0x01, 0x02, 0x05, 0x07, 0x0a, 0x15, 0x16, -0x01, 0x14, 0x15, -0x01, 0x04, 0x05, 0x13, 0x14, -0x01, 0x12, 0x13, 0x2c, -0x01, 0x0f, 0x11, -0x01, 0x10, 0x11, 0x12, 0x29, 0x2a, 0x2b, -0x01, 0x0d, 0x0c, 0x0b, 0x28, 0x29, -0x01, 0x0d, 0x2a, 0x0e, -0x01, 0x01, 0x02, 0x03, 0x04, 0x0e, 0x0f, 0x10, 0x28, -0x01, 0x0a, 0x0c, -0x01, 0x09, 0x0a, 0x0b, 0x27, -0x01, 0x08, 0x09, -0x01, 0x1a, 0x1c, 0x1d, -0x01, 0x1e, 0x1f, -0x01, 0x03, 0x07, 0x1f, 0x20, 0x2d, -0x01, 0x2b, 0x2c, -1 }; // ds:0xa330, 18 arrays, each terminated by -1
struct{char town, type_id; long passages;} g_harbors[26] = {
	{ 0x01, 0x03, 0x14fca330 },
	{ 0x02, 0x03, 0x14fca336 },
	{ 0x09, 0x01, 0x14fca339 },
	{ 0x0a, 0x01, 0x14fca33d },
	{ 0x18, 0x04, 0x14fca341 },
	{ 0x1a, 0x03, 0x14fca345 },
	{ 0x1c, 0x04, 0x14fca349 },
	{ 0x1d, 0x01, 0x14fca34b },
	{ 0x1e, 0x02, 0x14fca353 },
	{ 0x1f, 0x01, 0x14fca358 },
	{ 0x20, 0x01, 0x14fca35f },
	{ 0x21, 0x02, 0x14fca362 },
	{ 0x22, 0x01, 0x14fca367 },
	{ 0x23, 0x01, 0x14fca36b },
	{ 0x24, 0x03, 0x14fca36e },
	{ 0x25, 0x04, 0x14fca375 },
	{ 0x26, 0x04, 0x14fca37b },
	{ 0x27, 0x03, 0x14fca37f },
	{ 0x2a, 0x01, 0x14fca388 },
	{ 0x2b, 0x04, 0x14fca38b },
	{ 0x2c, 0x03, 0x14fca390 },
	{ 0x2e, 0x02, 0x14fca393 },
	{ 0x2f, 0x02, 0x14fca397 },
	{ 0x30, 0x02, 0x14fca39a },
	{ 0x34, 0x02, 0x14fca0b2 },
	{ -0x01, 0x00, 0x00000000 }
}; // ds:0xa3a3; RealPt
struct{signed short x, y;} g_town_positions[52] = {
	{ 0x00bd, 0x0098 },
	{ 0x00be, 0x00a1 },
	{ 0x00e2, 0x009e },
	{ 0x0100, 0x00a7 },
	{ 0x00fc, 0x00c0 },
	{ 0x0123, 0x00c4 },
	{ 0x0131, 0x00b4 },
	{ 0x0134, 0x009d },
	{ 0x00b7, 0x00b4 },
	{ 0x00b2, 0x00c2 },
	{ 0x00cf, 0x008d },
	{ 0x00ce, 0x0083 },
	{ 0x00cc, 0x006e },
	{ 0x00c5, 0x0063 },
	{ 0x00cc, 0x0051 },
	{ 0x00cf, 0x0052 },
	{ 0x00c4, 0x0049 },
	{ 0x012b, 0x0029 },
	{ 0x0135, 0x001c },
	{ 0x00c6, 0x0038 },
	{ 0x00f0, 0x0012 },
	{ 0x00a1, 0x0020 },
	{ 0x008c, 0x0013 },
	{ 0x0077, 0x0012 },
	{ 0x007e, 0x0020 },
	{ 0x0065, 0x001e },
	{ 0x0058, 0x002f },
	{ 0x0049, 0x0046 },
	{ 0x0045, 0x000b },
	{ 0x0039, 0x0043 },
	{ 0x0020, 0x0061 },
	{ 0x001e, 0x0072 },
	{ 0x0025, 0x00a0 },
	{ 0x0039, 0x00b3 },
	{ 0x0042, 0x00a7 },
	{ 0x005b, 0x00a7 },
	{ 0x006e, 0x0069 },
	{ 0x0047, 0x007b },
	{ 0x0040, 0x0090 },
	{ 0x0086, 0x005b },
	{ 0x008a, 0x004e },
	{ 0x0077, 0x0070 },
	{ 0x0091, 0x0069 },
	{ 0x00af, 0x007f },
	{ 0x008f, 0x0000 },
	{ 0x0074, 0x0000 },
	{ 0x0027, 0x0002 },
	{ 0x000d, 0x0005 },
	{ 0x00cd, 0x008d },
	{ 0x00cb, 0x0070 },
	{ 0x007c, 0x0076 },
	{ 0x0062, 0x00b4 }
}; // ds:0xa43f
struct{unsigned char unkn[10];} g_action_table_travelmap[35] = {
	{ 0x55, 0x00, 0xa4, 0x00, 0x65, 0x00, 0xb6, 0x00, 0x01, 0x00 },
	{ 0x6d, 0x00, 0x70, 0x00, 0x88, 0x00, 0x7e, 0x00, 0x02, 0x00 },
	{ 0x60, 0x00, 0x80, 0x00, 0x6a, 0x00, 0x86, 0x00, 0x03, 0x00 },
	{ 0x5c, 0x00, 0x86, 0x00, 0x61, 0x00, 0x8a, 0x00, 0x03, 0x00 },
	{ 0x5e, 0x00, 0x9b, 0x00, 0x62, 0x00, 0xa0, 0x00, 0x03, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x15, 0x00, 0x04, 0x00 },
	{ 0x45, 0x00, 0x7f, 0x00, 0xb9, 0x00, 0xa6, 0x00, 0x05, 0x00 },
	{ 0x64, 0x00, 0xa6, 0x00, 0xbb, 0x00, 0xbb, 0x00, 0x05, 0x00 },
	{ 0x75, 0x00, 0x58, 0x00, 0x91, 0x00, 0x70, 0x00, 0x05, 0x00 },
	{ 0x91, 0x00, 0x70, 0x00, 0xa7, 0x00, 0x7e, 0x00, 0x05, 0x00 },
	{ 0x2f, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x09, 0x00, 0x06, 0x00 },
	{ 0x4b, 0x00, 0x00, 0x00, 0x72, 0x00, 0x1a, 0x00, 0x06, 0x00 },
	{ 0x00, 0x00, 0x16, 0x00, 0x39, 0x00, 0x42, 0x00, 0x07, 0x00 },
	{ 0x00, 0x00, 0x06, 0x00, 0x14, 0x00, 0x14, 0x00, 0x07, 0x00 },
	{ 0x3a, 0x00, 0x26, 0x00, 0x44, 0x00, 0x3e, 0x00, 0x07, 0x00 },
	{ 0x41, 0x00, 0x4b, 0x00, 0x64, 0x00, 0x76, 0x00, 0x08, 0x00 },
	{ 0x52, 0x00, 0x32, 0x00, 0x6c, 0x00, 0x4a, 0x00, 0x08, 0x00 },
	{ 0x6d, 0x00, 0x23, 0x00, 0xaa, 0x00, 0x4b, 0x00, 0x08, 0x00 },
	{ 0xab, 0x00, 0x20, 0x00, 0xd7, 0x00, 0x36, 0x00, 0x08, 0x00 },
	{ 0xe1, 0x00, 0x57, 0x00, 0xfa, 0x00, 0x6e, 0x00, 0x09, 0x00 },
	{ 0xfb, 0x00, 0x57, 0x00, 0x17, 0x01, 0x7a, 0x00, 0x09, 0x00 },
	{ 0x18, 0x01, 0x60, 0x00, 0x3f, 0x01, 0x82, 0x00, 0x09, 0x00 },
	{ 0xd6, 0x00, 0x6f, 0x00, 0xfa, 0x00, 0x82, 0x00, 0x0a, 0x00 },
	{ 0xfb, 0x00, 0x7b, 0x00, 0x17, 0x01, 0x92, 0x00, 0x0a, 0x00 },
	{ 0x18, 0x01, 0x83, 0x00, 0x3f, 0x01, 0x99, 0x00, 0x0a, 0x00 },
	{ 0xa8, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x1f, 0x00, 0x0b, 0x00 },
	{ 0xee, 0x00, 0x0c, 0x00, 0xfa, 0x00, 0x12, 0x00, 0x0d, 0x00 },
	{ 0xdc, 0x00, 0x00, 0x00, 0x3f, 0x01, 0x41, 0x00, 0x0c, 0x00 },
	{ 0x28, 0x01, 0x41, 0x00, 0x3f, 0x01, 0x54, 0x00, 0x0e, 0x00 },
	{ 0x1a, 0x01, 0x00, 0x00, 0x38, 0x01, 0x35, 0x00, 0x0f, 0x00 },
	{ 0xd8, 0x00, 0x36, 0x00, 0x25, 0x01, 0x4b, 0x00, 0x0f, 0x00 },
	{ 0xb9, 0x00, 0x4a, 0x00, 0xd7, 0x00, 0xa0, 0x00, 0x0f, 0x00 },
	{ 0xd8, 0x00, 0x8c, 0x00, 0xf0, 0x00, 0xaf, 0x00, 0x10, 0x00 },
	{ 0x95, 0x00, 0x49, 0x00, 0xbd, 0x00, 0x6a, 0x00, 0x11, 0x00 },
	{ 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
}; // ds:0xa50f
struct{char route_id, place, tevent_id;} g_tevents_tab[155] = {
	{ 0x02, 0x1a, 0x01 },
	{ 0x03, 0x07, 0x02 },
	{ 0x04, 0x00, 0x03 },
	{ 0x07, 0x0d, 0x04 },
	{ 0x07, 0x13, 0x05 },
	{ 0x08, 0x00, 0x06 },
	{ 0x09, 0x0a, 0x07 },
	{ 0x09, 0x0c, 0x08 },
	{ 0x0a, 0x11, 0x09 },
	{ 0x0a, 0x19, 0x0a },
	{ 0x0b, 0x0a, 0x0b },
	{ 0x0c, 0x00, 0x0c },
	{ 0x0c, 0x08, 0x0d },
	{ 0x0c, 0x10, 0x0e },
	{ 0x0c, 0x16, 0x0f },
	{ 0x0d, 0x08, 0x10 },
	{ 0x0d, 0x13, 0x11 },
	{ 0x0d, 0x18, 0x12 },
	{ 0x0e, 0x00, 0x13 },
	{ 0x0e, 0x08, 0x14 },
	{ 0x0e, 0x16, 0x15 },
	{ 0x11, 0x0f, 0x16 },
	{ 0x13, 0x00, 0x17 },
	{ 0x14, 0x0a, 0x18 },
	{ 0x14, 0x12, 0x19 },
	{ 0x15, 0x00, 0x1a },
	{ 0x16, 0x00, 0x1b },
	{ 0x16, 0x14, 0x1c },
	{ 0x16, 0x1a, 0x1d },
	{ 0x16, 0x30, 0x1e },
	{ 0x16, 0x41, 0x1f },
	{ 0x16, 0x50, 0x20 },
	{ 0x16, 0x56, 0x21 },
	{ 0x16, 0x5f, 0x22 },
	{ 0x18, 0x0d, 0x23 },
	{ 0x18, 0x16, 0x24 },
	{ 0x18, 0x1b, 0x25 },
	{ 0x18, 0x27, 0x26 },
	{ 0x18, 0x28, 0x27 },
	{ 0x18, 0x12, -0x70 },
	{ 0x19, 0x12, 0x28 },
	{ 0x19, 0x19, 0x29 },
	{ 0x19, 0x26, 0x2a },
	{ 0x19, 0x2a, 0x2b },
	{ 0x1a, 0x0b, 0x2c },
	{ 0x1b, 0x0c, 0x2d },
	{ 0x1b, 0x0f, 0x2e },
	{ 0x1b, 0x16, 0x2f },
	{ 0x1b, 0x1a, 0x30 },
	{ 0x1c, 0x13, 0x31 },
	{ 0x1c, 0x17, 0x32 },
	{ 0x1c, 0x1b, 0x33 },
	{ 0x1c, 0x23, 0x34 },
	{ 0x1c, 0x26, 0x35 },
	{ 0x1d, 0x12, 0x36 },
	{ 0x1e, 0x0e, 0x37 },
	{ 0x1e, 0x17, 0x38 },
	{ 0x1f, 0x12, 0x39 },
	{ 0x1f, 0x14, 0x3a },
	{ 0x1f, 0x16, 0x3b },
	{ 0x1f, 0x21, 0x3c },
	{ 0x1f, 0x29, 0x3d },
	{ 0x1f, 0x2f, 0x3e },
	{ 0x1f, 0x35, 0x3f },
	{ 0x1f, 0x3a, 0x40 },
	{ 0x20, 0x04, 0x41 },
	{ 0x20, 0x13, 0x42 },
	{ 0x21, 0x07, 0x43 },
	{ 0x21, 0x0a, 0x44 },
	{ 0x24, 0x07, 0x43 },
	{ 0x24, 0x0a, 0x44 },
	{ 0x24, 0x11, 0x45 },
	{ 0x24, 0x1d, 0x46 },
	{ 0x25, 0x0b, 0x47 },
	{ 0x26, 0x0f, 0x44 },
	{ 0x26, 0x16, 0x45 },
	{ 0x26, 0x22, 0x46 },
	{ 0x28, 0x07, 0x47 },
	{ 0x28, 0x0c, 0x48 },
	{ 0x29, 0x07, 0x49 },
	{ 0x29, 0x0c, 0x4a },
	{ 0x29, 0x19, 0x4b },
	{ 0x29, 0x23, 0x4c },
	{ 0x29, 0x27, 0x4d },
	{ 0x2a, 0x0f, 0x4e },
	{ 0x2a, 0x12, 0x4f },
	{ 0x2a, 0x15, 0x50 },
	{ 0x2b, 0x12, 0x51 },
	{ 0x2d, 0x00, 0x52 },
	{ 0x2d, 0x09, 0x53 },
	{ 0x2d, 0x20, 0x54 },
	{ 0x2d, 0x23, 0x55 },
	{ 0x2d, 0x35, 0x56 },
	{ 0x2d, 0x3b, 0x57 },
	{ 0x2d, 0x40, 0x58 },
	{ 0x2e, 0x00, 0x59 },
	{ 0x2e, 0x13, 0x5a },
	{ 0x2e, 0x19, 0x5b },
	{ 0x2e, 0x1c, 0x5c },
	{ 0x2e, 0x22, 0x5d },
	{ 0x2e, 0x2d, 0x57 },
	{ 0x2e, 0x32, 0x58 },
	{ 0x2f, 0x0f, 0x5e },
	{ 0x2f, 0x12, 0x5f },
	{ 0x2f, 0x15, 0x60 },
	{ 0x2f, 0x1d, 0x61 },
	{ 0x2f, 0x23, 0x62 },
	{ 0x2f, 0x2c, 0x63 },
	{ 0x2f, 0x30, 0x64 },
	{ 0x2f, 0x34, 0x65 },
	{ 0x30, 0x19, 0x66 },
	{ 0x30, 0x1d, 0x67 },
	{ 0x30, 0x22, 0x68 },
	{ 0x30, 0x26, 0x69 },
	{ 0x30, 0x32, 0x3e },
	{ 0x30, 0x38, 0x3f },
	{ 0x30, 0x3d, 0x40 },
	{ 0x31, 0x14, 0x6a },
	{ 0x31, 0x24, 0x6b },
	{ 0x31, 0x28, 0x6c },
	{ 0x31, 0x30, 0x6d },
	{ 0x31, 0x39, 0x6e },
	{ 0x31, 0x3f, 0x6f },
	{ 0x31, 0x44, 0x70 },
	{ 0x31, 0x57, 0x71 },
	{ 0x31, 0x64, 0x72 },
	{ 0x31, 0x70, 0x73 },
	{ 0x31, 0x7a, 0x74 },
	{ 0x31, 0x7d, 0x75 },
	{ 0x32, 0x12, 0x76 },
	{ 0x32, 0x26, 0x77 },
	{ 0x32, 0x37, 0x78 },
	{ 0x33, 0x00, 0x79 },
	{ 0x33, 0x03, 0x7a },
	{ 0x33, 0x0e, 0x7b },
	{ 0x33, 0x11, 0x7c },
	{ 0x34, 0x0d, 0x7d },
	{ 0x34, 0x2a, 0x7e },
	{ 0x34, 0x3b, 0x7f },
	{ 0x36, 0x0f, -0x80 },
	{ 0x37, 0x0a, -0x7f },
	{ 0x38, 0x0e, -0x7e },
	{ 0x38, 0x11, -0x7d },
	{ 0x38, 0x13, -0x7c },
	{ 0x39, 0x0c, -0x7b },
	{ 0x39, 0x11, -0x7a },
	{ 0x39, 0x14, -0x79 },
	{ 0x39, 0x18, -0x78 },
	{ 0x39, 0x1c, -0x77 },
	{ 0x3a, 0x12, -0x76 },
	{ 0x3b, 0x0a, -0x75 },
	{ 0x3b, 0x17, -0x74 },
	{ 0x3b, 0x1c, -0x73 },
	{ 0x3b, 0x27, -0x72 },
	{ 0x3b, 0x2b, -0x71 }
}; // ds:0xa66d
unsigned char g_unkn_064[4] = { 0xff, 0x00, 0x00, 0x00 }; // ds:0xa83e
unsigned char g_traveling = 0; // ds:0xa842
unsigned char g_tevents_repeatable[145] = { 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 }; // ds:0xa843
char g_grammar_article_der[4] = "DER"; // ds:0xa8d4
char g_grammar_article_die[4] = "DIE"; // ds:0xa8d8
char g_grammar_article_das[4] = "DAS"; // ds:0xa8dc
char g_grammar_article_des[4] = "DES"; // ds:0xa8e0
char g_grammar_article_den[4] = "DEN"; // ds:0xa8e4
char g_grammar_article_dem[4] = "DEM"; // ds:0xa8e8
char g_grammar_article_ein[4] = "EIN"; // ds:0xa8ec
char g_grammar_article_eine[5] = "EINE"; // ds:0xa8f0
char g_grammar_article_eines[6] = "EINES"; // ds:0xa8f5
char g_grammar_article_einer[6] = "EINER"; // ds:0xa8fb
char g_grammar_article_einen[6] = "EINEN"; // ds:0xa901
char g_grammar_article_eine2[5] = "EINE"; // ds:0xa907
char g_grammar_article_einem[6] = "EINEM"; // ds:0xa90c
char g_grammar_article_0[1] = ""; // ds:0xa912
char g_grammar_article_von[4] = "VON"; // ds:0xa913
long g_grammar_articles_index[15] = { 0x14fca8d4, 0x14fca8d8, 0x14fca8dc, 0x14fca8e0, 0x14fca8e4, 0x14fca8e8, 0x14fca8ec, 0x14fca8f0, 0x14fca8f5, 0x14fca8fb, 0x14fca901, 0x14fca907, 0x14fca90c, 0x14fca912, 0x14fca913 }; // ds:0xa917; RealPt
short g_grammar_def_table[24] = { 0, 1, 2, 3, 0, 3, 4, 1, 2, 5, 0, 5, 1, 1, 1, 0, 0, 0, 1, 1, 1, 4, 4, 4 }; // ds:0xa953, [8], by case, then by gender
short g_grammar_indef_table[24] = { 0x0006, 0x0007, 0x0006, 0x0008, 0x0009, 0x0008, 0x000a, 0x000b, 0x0006, 0x000c, 0x0009, 0x000c, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d }; // ds:0xa983, [8], by case, then by gender
short g_grammar_noarticle_table[24] = { 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d, 0x000d }; // ds:0xa9b3, [8], by case, then by gender
long g_str_s_s_ptr = 0x14fcab32; // ds:0xa9e3, to STR_S_S; RealPt
long g_str_von_s_s_ptr = 0x14fcab38; // ds:0xa9e7, to STR_VON_S_S; RealPt
unsigned short g_grammar_buf_no = 0; // ds:0xa9eb
signed short g_grammar_gender_bitmasks[3] = { 0x1000, 0x2000, 0x3000 }; // ds:0xa9ed, {0x1000, 0x2000, 0x3000}
char g_grammar_pronouns_er[3] = "ER"; // ds:0xa9f3
char g_grammar_pronouns_sie[4] = "SIE"; // ds:0xa9f6
char g_grammar_pronouns_es[3] = "ES"; // ds:0xa9fa
char g_grammar_pronouns_sein[5] = "SEIN"; // ds:0xa9fd
char g_grammar_pronouns_ihr[4] = "IHR"; // ds:0xaa02
char g_grammar_pronouns_ihn[4] = "IHN"; // ds:0xaa06
char g_grammar_pronouns_ihm[4] = "IHM"; // ds:0xaa0a
char g_grammar_pronouns_ihnen[6] = "IHNEN"; // ds:0xaa0e
long g_grammar_pronouns_index[7] = { 0x14fca9f3, 0x14fca9f6, 0x14fca9fa, 0x14fca9fd, 0x14fcaa02, 0x14fcaa06, 0x14fcaa0a }; // ds:0xaa14; RealPt
unsigned char g_grammar_pronouns_table2[33] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x03, 0x05, 0x01, 0x02, 0x06, 0x04, 0x06, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x01, 0x01, 0x01, 0x07, 0x07, 0x07, 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff }; // ds:0xaa30, by gender and ??
struct{char c, font_id, width;} g_gui_char_width[75] = {
	{ 0x20, 0x00, 0x06 },
	{ 0x41, 0x01, 0x06 },
	{ 0x42, 0x02, 0x06 },
	{ 0x43, 0x03, 0x06 },
	{ 0x44, 0x04, 0x06 },
	{ 0x45, 0x05, 0x06 },
	{ 0x46, 0x06, 0x06 },
	{ 0x47, 0x07, 0x06 },
	{ 0x48, 0x08, 0x06 },
	{ 0x49, 0x09, 0x04 },
	{ 0x4a, 0x0a, 0x06 },
	{ 0x4b, 0x0b, 0x06 },
	{ 0x4c, 0x0c, 0x05 },
	{ 0x4d, 0x0d, 0x06 },
	{ 0x4e, 0x0e, 0x06 },
	{ 0x4f, 0x0f, 0x06 },
	{ 0x50, 0x10, 0x06 },
	{ 0x51, 0x11, 0x06 },
	{ 0x52, 0x12, 0x06 },
	{ 0x53, 0x13, 0x06 },
	{ 0x54, 0x14, 0x06 },
	{ 0x55, 0x15, 0x06 },
	{ 0x56, 0x16, 0x06 },
	{ 0x57, 0x17, 0x06 },
	{ 0x58, 0x18, 0x06 },
	{ 0x59, 0x19, 0x06 },
	{ 0x5a, 0x1a, 0x06 },
	{ -0x72, 0x1b, 0x06 },
	{ -0x67, 0x1c, 0x06 },
	{ -0x66, 0x1d, 0x06 },
	{ 0x2c, 0x1e, 0x03 },
	{ 0x2e, 0x1f, 0x02 },
	{ 0x2d, 0x20, 0x06 },
	{ 0x28, 0x21, 0x04 },
	{ 0x29, 0x22, 0x04 },
	{ 0x21, 0x23, 0x03 },
	{ 0x3f, 0x24, 0x05 },
	{ 0x30, 0x25, 0x06 },
	{ 0x31, 0x26, 0x03 },
	{ 0x32, 0x27, 0x06 },
	{ 0x33, 0x28, 0x06 },
	{ 0x34, 0x29, 0x06 },
	{ 0x35, 0x2a, 0x06 },
	{ 0x36, 0x2b, 0x06 },
	{ 0x37, 0x2c, 0x06 },
	{ 0x38, 0x2d, 0x06 },
	{ 0x39, 0x2e, 0x06 },
	{ 0x27, 0x2f, 0x03 },
	{ 0x3a, 0x30, 0x03 },
	{ 0x23, 0x31, 0x06 },
	{ 0x26, 0x32, 0x05 },
	{ 0x25, 0x33, 0x05 },
	{ 0x3c, 0x35, 0x05 },
	{ 0x3e, 0x34, 0x05 },
	{ 0x2f, 0x36, 0x06 },
	{ 0x5f, 0x37, 0x06 },
	{ -0x38, 0x38, 0x06 },
	{ -0x37, 0x39, 0x06 },
	{ -0x36, 0x3a, 0x06 },
	{ -0x35, 0x3b, 0x05 },
	{ -0x34, 0x3c, 0x05 },
	{ -0x33, 0x3d, 0x04 },
	{ -0x32, 0x3e, 0x05 },
	{ -0x31, 0x3f, 0x05 },
	{ -0x30, 0x40, 0x02 },
	{ -0x2f, 0x41, 0x06 },
	{ -0x2e, 0x42, 0x06 },
	{ -0x2d, 0x43, 0x05 },
	{ -0x2c, 0x44, 0x06 },
	{ -0x2b, 0x45, 0x05 },
	{ -0x2a, 0x46, 0x06 },
	{ -0x29, 0x47, 0x05 },
	{ -0x28, 0x48, 0x06 },
	{ -0x27, 0x49, 0x05 },
	{ 0x2b, 0x00, 0x06 }
}; // ds:0xaa51
char g_str_s_s[6] = "%s %s"; // ds:0xab32
char g_str_von_s_s[9] = "VON%s %s"; // ds:0xab38
unsigned char g_unkn_065[1] = { 0x00 }; // ds:0xab41
struct{char c, font_id, height;} g_gui_char_height[67] = {
	{ 0x20, 0x00, 0x08 },
	{ 0x41, 0x01, 0x08 },
	{ 0x42, 0x02, 0x08 },
	{ 0x43, 0x03, 0x07 },
	{ 0x44, 0x04, 0x07 },
	{ 0x45, 0x05, 0x07 },
	{ 0x46, 0x06, 0x07 },
	{ 0x47, 0x07, 0x08 },
	{ 0x48, 0x08, 0x08 },
	{ 0x49, 0x09, 0x06 },
	{ 0x4a, 0x0a, 0x08 },
	{ 0x4b, 0x0b, 0x08 },
	{ 0x4c, 0x0c, 0x06 },
	{ 0x4d, 0x0d, 0x08 },
	{ 0x4e, 0x0e, 0x08 },
	{ 0x4f, 0x0f, 0x08 },
	{ 0x50, 0x10, 0x07 },
	{ 0x51, 0x11, 0x08 },
	{ 0x52, 0x12, 0x08 },
	{ 0x53, 0x13, 0x07 },
	{ 0x54, 0x14, 0x07 },
	{ 0x55, 0x15, 0x08 },
	{ 0x56, 0x16, 0x08 },
	{ 0x57, 0x17, 0x08 },
	{ 0x58, 0x18, 0x07 },
	{ 0x59, 0x19, 0x07 },
	{ 0x5a, 0x1a, 0x07 },
	{ -0x72, 0x1b, 0x08 },
	{ -0x67, 0x1c, 0x08 },
	{ -0x66, 0x1d, 0x08 },
	{ 0x2c, 0x1e, 0x05 },
	{ 0x2e, 0x1f, 0x04 },
	{ 0x2d, 0x20, 0x06 },
	{ 0x28, 0x21, 0x06 },
	{ 0x29, 0x22, 0x06 },
	{ 0x21, 0x23, 0x04 },
	{ 0x3f, 0x24, 0x08 },
	{ 0x30, 0x25, 0x08 },
	{ 0x31, 0x26, 0x06 },
	{ 0x32, 0x27, 0x08 },
	{ 0x33, 0x28, 0x08 },
	{ 0x34, 0x29, 0x08 },
	{ 0x35, 0x2a, 0x08 },
	{ 0x36, 0x2b, 0x08 },
	{ 0x37, 0x2c, 0x07 },
	{ 0x38, 0x2d, 0x08 },
	{ 0x39, 0x2e, 0x08 },
	{ 0x27, 0x2f, 0x05 },
	{ 0x3a, 0x30, 0x05 },
	{ -0x38, 0x31, 0x08 },
	{ -0x37, 0x32, 0x08 },
	{ -0x36, 0x33, 0x06 },
	{ -0x35, 0x34, 0x05 },
	{ -0x34, 0x35, 0x06 },
	{ -0x33, 0x36, 0x06 },
	{ -0x32, 0x37, 0x07 },
	{ -0x31, 0x38, 0x06 },
	{ -0x30, 0x39, 0x03 },
	{ -0x2f, 0x3a, 0x08 },
	{ -0x2e, 0x3b, 0x08 },
	{ -0x2d, 0x3c, 0x06 },
	{ -0x2c, 0x3d, 0x08 },
	{ -0x2b, 0x3e, 0x05 },
	{ -0x2a, 0x3f, 0x08 },
	{ -0x29, 0x40, 0x06 },
	{ -0x28, 0x41, 0x08 },
	{ -0x27, 0x42, 0x06 }
}; // ds:0xab42
unsigned short g_gui_bool_flag = 0; // ds:0xac0b
unsigned char g_unkn_066[1] = { 0x00 }; // ds:0xac0d
signed short g_spell_special_aecost = -1; // ds:0xac0e
signed short g_ani_heal_picstars[5] = { 0, 1, 2, 1, 0 }; // ds:0xac10
char g_spell_select_str_keyval[6] = "%s~%d"; // ds:0xac1a
char g_spell_select_str_key[5] = "\xf2%s\xf0"; // ds:0xac20
char g_spell_select_str_key_color[3] = "%s"; // ds:0xac25
char g_spell_select_str_keyval_color[8] = "\xf2%s~%d\xf0"; // ds:0xac28
signed char g_spell_select_ones[12] = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }; // ds:0xac30
struct{signed short item_id, barrier; signed char dtp;} g_analues_items[28] = {
	{ 0x00a2, 0x0002, 0x36 },
	{ 0x00a5, 0x0003, 0x38 },
	{ 0x00ab, 0x0004, 0x39 },
	{ 0x00f5, 0x0004, 0x39 },
	{ 0x00ac, 0x0003, 0x3a },
	{ 0x00ad, 0x0006, 0x3b },
	{ 0x00ae, 0x0000, 0x3c },
	{ 0x00af, 0x0006, 0x3d },
	{ 0x00b2, 0x0000, 0x3e },
	{ 0x00d7, 0x0003, 0x3f },
	{ 0x00d8, 0x0003, 0x40 },
	{ 0x00d9, 0x0004, 0x41 },
	{ 0x009e, 0x0004, 0x42 },
	{ 0x009f, 0x0004, 0x43 },
	{ 0x00a0, 0x0004, 0x44 },
	{ 0x00a1, 0x0006, 0x45 },
	{ 0x00a3, 0x0002, 0x46 },
	{ 0x00bc, 0x0000, 0x47 },
	{ 0x00c6, 0x000f, 0x48 },
	{ 0x00b7, 0x0007, 0x49 },
	{ 0x00c7, 0x0005, 0x4a },
	{ 0x00c5, 0x0005, 0x4b },
	{ 0x00df, 0x000f, 0x4c },
	{ 0x00dc, 0x0005, 0x4d },
	{ 0x00da, 0x0006, 0x4e },
	{ 0x0046, 0x0002, 0x4f },
	{ 0x00dd, 0x0000, 0x50 },
	{ -0x0001, 0x0000, 0x00 }
}; // ds:0xac3c
long g_hexenknoten_gfx_buf = 0; // ds:0xacc8; RealPt
signed short g_monster_spell_cost = -1; // ds:0xaccc
char g_select_skill_lvlup[6] = "%s~%d"; // ds:0xacce
signed char g_select_skill_defaults[6] = { 0x2c, 0x2d, 0x2e, -0x01, -0x01, -1 }; // ds:0xacd4, {44, 45, 46, -1, -1, -1}
struct{unsigned char unkn[28];} g_alchemy_recipes[13] = {
	{0xba, 0x00, 0x1f, 0x00, 0x3c, 0x00, 0x3c, 0x00, 0x40, 0x00, 0x5c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x91, 0x00, 0x05, 0x00, 0x02, 0x08 },
	{0xf0, 0x00, 0x2a, 0x00, 0x3d, 0x00, 0x3d, 0x00, 0x40, 0x00, 0x5c, 0x00, 0x7e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x92, 0x00, 0x0c, 0x00, 0x05, 0x18 },
	{0xf1, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x3d, 0x00, 0x3d, 0x00, 0x7c, 0x00, 0x7b, 0x00, 0x7e, 0x00, 0x82, 0x00, 0xff, 0xff, 0xff, 0xff, 0xec, 0x00, 0x19, 0x00, 0x0a, 0x48 },
	{0xca, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x7d, 0x00, 0x7d, 0x00, 0x7e, 0x00, 0x7a, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb4, 0x00, 0x0a, 0x00, 0x05, 0x18 },
	{0xf2, 0x00, 0x1f, 0x00, 0x5b, 0x00, 0x3f, 0x00, 0x40, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xed, 0x00, 0x02, 0x00, 0x02, 0x08 },
	{0xce, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x9d, 0x00, 0x9d, 0x00, 0x83, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9a, 0x00, 0x07, 0x00, 0x08, 0x30 },
	{0xf3, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x9d, 0x00, 0x9d, 0x00, 0x9d, 0x00, 0x83, 0x00, 0xff, 0xff, 0x9b, 0x00, 0x0f, 0x00, 0x0c, 0x78 },
	{0xa9, 0x00, 0x2a, 0x00, 0x29, 0x00, 0x7a, 0x00, 0x7e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa8, 0x00, 0x00, 0x00, 0x05, 0x08 },
	{0xa7, 0x00, 0x2a, 0x00, 0x59, 0x00, 0x7a, 0x00, 0x7a, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa6, 0x00, 0x00, 0x00, 0x08, 0x30 },
	{0xf4, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x9d, 0x00, 0x80, 0x00, 0x7a, 0x00, 0x7e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x00, 0x00, 0x00, 0x06, 0x30 },
	{0xcd, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x81, 0x00, 0x7e, 0x00, 0x7c, 0x00, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x93, 0x00, 0x0c, 0x00, 0x07, 0x30 },
	{0xcc, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x81, 0x00, 0x7e, 0x00, 0x3f, 0x00, 0x3f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0x00, 0x0f, 0x00, 0x08, 0x30 },
	{0xcb, 0x00, 0x1f, 0x00, 0x5c, 0x00, 0x5c, 0x00, 0x59, 0x00, 0x29, 0x00, 0x29, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x00, 0x00, 0x00, 0x05, 0x08 }
}; // ds:0xacda
unsigned char g_prevent_drop_equipped_items = 0; // ds:0xae46
unsigned char g_unkn_067[1] = { 0x00 }; // ds:0xae47
struct{unsigned char unkn[8];} g_hero_startup_items[12] = {
	{ 0x0e, 0x00, 0x62, 0x00, 0x62, 0x00, 0xff, 0xff },
	{ 0x13, 0x00, 0x0e, 0x00, 0xff, 0xff, 0xff, 0xff },
	{ 0x01, 0x00, 0x0e, 0x00, 0x35, 0x00, 0xff, 0xff },
	{ 0x75, 0x00, 0x0e, 0x00, 0x23, 0x00, 0xff, 0xff },
	{ 0x86, 0x00, 0x03, 0x00, 0x5c, 0x00, 0xff, 0xff },
	{ 0x42, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0xff, 0xff },
	{ 0x8c, 0x00, 0x3c, 0x00, 0x3c, 0x00, 0xff, 0xff },
	{ 0x15, 0x00, 0x3d, 0x00, 0x82, 0x00, 0xff, 0xff },
	{ 0x85, 0x00, 0x0e, 0x00, 0x24, 0x00, 0x4b, 0x00 },
	{ 0x13, 0x00, 0x75, 0x00, 0x25, 0x00, 0xff, 0xff },
	{ 0x8a, 0x00, 0x05, 0x00, 0x2e, 0x00, 0xff, 0xff },
	{ 0x13, 0x00, 0x04, 0x00, 0x2e, 0x00, 0xff, 0xff }
}; // ds:0xae48
signed short g_hero_startup_items_all[4] = { 0x001e, 0x002d, 0x002d, 0x0031 }; // ds:0xaea8
long g_use_special_item_handlers[14] = { 0x00000000, 0x14910025, 0x1491002a, 0x1491002f, 0x14910034, 0x14910039, 0x1491003e, 0x14910043, 0x14910048, 0x1491004d, 0x14910052, 0x14910057, 0x1491005c, 0x14910061 }; // ds:0xaeb0
unsigned short g_light_type = 0; // ds:0xaee8, 0 = none, 1 = torch, 2 = lantern
long g_travel_event_handlers[146] = { 0x00000000, 0x149b0052, 0x149b0057, 0x149b005c, 0x149b0061, 0x149b0066, 0x149b006b, 0x149b0070, 0x149b0075, 0x149b007a, 0x149b007f, 0x14a7009d, 0x149b0084, 0x14a700a2, 0x14a700a7, 0x14a700ac, 0x14d10039, 0x14a700b1, 0x149b0089, 0x149b008e, 0x14a700b6, 0x14a700bb, 0x14a700c0, 0x149b0093, 0x14a700c5, 0x14a700ca, 0x14a7002f, 0x14a70034, 0x14a70039, 0x14a7003e, 0x14a70043, 0x14a70048, 0x14a7004d, 0x14a70052, 0x14a70057, 0x14a7005c, 0x14a70061, 0x14e70020, 0x14e70025, 0x14a70066, 0x14a7006b, 0x14a70070, 0x14a70075, 0x14a7007a, 0x14a7007f, 0x14a70084, 0x14a70089, 0x14d10057, 0x14a7008e, 0x14a70093, 0x14a70098, 0x14e70034, 0x14e70039, 0x14b40048, 0x14b4004d, 0x14b40052, 0x14b40057, 0x14b4005c, 0x14b40061, 0x14b40066, 0x14b40025, 0x14b4002a, 0x14b4002f, 0x14b40034, 0x14b40039, 0x14b4003e, 0x14b40043, 0x14bb0048, 0x14bb004d, 0x14bb0052, 0x14bb0057, 0x14bb0025, 0x14bb002a, 0x14bb002f, 0x14bb0034, 0x14bb0039, 0x14bb003e, 0x14bb0043, 0x14e7002a, 0x14e7002f, 0x14c20061, 0x14c20066, 0x14c2006b, 0x14c20070, 0x14c20075, 0x14c2007a, 0x14c2007f, 0x14e00061, 0x14c20084, 0x14c20089, 0x14d10020, 0x14d1003e, 0x149b0098, 0x14d10025, 0x14d1002a, 0x14d1002f, 0x14d10034, 0x14c20025, 0x14c2002a, 0x14c2002f, 0x14d1005c, 0x14c20034, 0x14c20039, 0x14c2003e, 0x14c20043, 0x14c20048, 0x14c2004d, 0x14c20052, 0x14c20057, 0x14c2005c, 0x14cb0043, 0x14cb0048, 0x14cb004d, 0x14cb0052, 0x14cb0020, 0x14e00057, 0x14cb0025, 0x14cb002a, 0x14cb002f, 0x14cb0034, 0x14e7003e, 0x14e70043, 0x14cb0039, 0x14cb003e, 0x14e70048, 0x14e7004d, 0x14d10043, 0x14d10048, 0x14d1004d, 0x14d10052, 0x14d80052, 0x14d80057, 0x14d8005c, 0x14d80061, 0x14d80066, 0x14d80020, 0x14d80025, 0x14d8002a, 0x14d8002f, 0x14d80034, 0x14d80039, 0x14d8003e, 0x14d80043, 0x14d80048, 0x14d8004d, 0x14e70052 }; // ds:0xaeea, function pointers,
signed char g_travel_event_active = 0; // ds:0xb132
signed short g_travel_event_tx2 = -1; // ds:0xb133
signed char g_travel_event_axes[6] = { 0x08, 0x0b, 0x21, 0x10, -0x79, -1 }; // ds:0xb135
char g_empty_string10[1] = ""; // ds:0xb13b
char g_empty_string11[1] = ""; // ds:0xb13c
char g_empty_string12[1] = ""; // ds:0xb13d
struct{unsigned char unkn[22];} g_tevent014_corpse = { 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0xa7, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xb13e
struct{unsigned char unkn[22];} g_tevent064_chest_descr = { 0x00, 0x00, 0x0c, 0x4d, 0x00, 0x20, 0x14, 0x66, 0x00, 0x20, 0x14, 0x20, 0x00, 0xb4, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xb154
char g_tevent067_chest[8] = { 0x71, 0x01, 0x5c, 0x01, -0x57, 0x01, 0x0d, 0x02 }; // ds:0xb16a
struct{unsigned char damage_min,damage_max;} g_tevent135_climb_damage[6] = { { 0xff, 0x00 }, { 0x01, 0x05 }, { 0x04, 0x0d }, { 0x07, 0x15 }, { 0x0a, 0x20 }, { 0x0f, 0x28 } }; // ds:0xb172, ; { {0xff,0}, , , , ,  }
unsigned char g_random_encounter_index[59] = { 1, 1, 1, 1, 1, 1, 3, 0, 2, 3, 3, 4, 4, 4, 1, 1, 1, 3, 0, 3, 0, 5, 5, 5, 4, 4, 1, 1, 1, 3, 7, 4, 4, 1, 1, 4, 3, 4, 4, 4, 6, 4, 3, 1, 5, 5, 6, 7, 7, 7, 1, 1, 1, 1, 1, 7, 5, 7, 7 }; // ds:0xb17e
struct{unsigned char unkn[7];} g_random_encounter_descr[14] = {
	{ 0x28, 0x28, 0x1e, 0x19, 0x1e, 0x19, 0x14 },
	{ 0x00, 0x2d, 0x00, 0x00, 0x28, 0x1e, 0x00 },
	{ 0x00, 0x32, 0x00, 0x00, 0x2d, 0x00, 0x00 },
	{ 0x2d, 0x37, 0x23, 0x1e, 0x37, 0x28, 0x1e },
	{ 0x3c, 0x00, 0x2d, 0x28, 0x00, 0x2d, 0x28 },
	{ 0x46, 0x41, 0x32, 0x32, 0x41, 0x41, 0x2d },
	{ 0x55, 0x46, 0x3c, 0x41, 0x00, 0x50, 0x3c },
	{ 0x00, 0x55, 0x00, 0x00, 0x55, 0x00, 0x00 },
	{ 0x00, 0x5f, 0x00, 0x00, 0x5f, 0x00, 0x00 },
	{ 0x5f, 0x64, 0x55, 0x55, 0x00, 0x55, 0x50 },
	{ 0x00, 0x00, 0x5f, 0x5f, 0x00, 0x00, 0x5a },
	{ 0x64, 0x00, 0x64, 0x64, 0x00, 0x00, 0x5f },
	{ 0x00, 0x00, 0x00, 0x00, 0x64, 0x5f, 0x00 },
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x64 }
}; // ds:0xb1b9
signed short g_tlk_ruin_hero_counter = 0; // ds:0xb21b
unsigned char g_unkn_068[1] = { 0x00 }; // ds:0xb21d
char g_str_rad1[4] = "RAD"; // ds:0xb21e
char g_str_rad2[4] = "RAD"; // ds:0xb222
char g_str_rad3[4] = "RAD"; // ds:0xb226
unsigned char g_color_white[3] = { 0x3f, 0x3f, 0x3f }; // ds:0xb22a, { 0x3f, 0x3f, 0x3f }
unsigned char g_color_black[3] = { 0, 0, 0 }; // ds:0xb22d, { 0x00, 0x00, 0x00 }
struct{unsigned char r,g,b;} g_palette_unknown2[8] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x38, 0x30, 0x28 },
	{ 0x38, 0x30, 0x10 },
	{ 0x30, 0x28, 0x0c },
	{ 0x2c, 0x24, 0x08 },
	{ 0x28, 0x20, 0x04 },
	{ 0x18, 0x14, 0x00 },
	{ 0x0b, 0x19, 0x0c }
}; // ds:0xb230
struct{unsigned char r,g,b;} g_palette_unknown3[3] = {
	{ 0x30, 0x00, 0x00 },
	{ 0x30, 0x30, 0x00 },
	{ 0x00, 0x00, 0x30 }
}; // ds:0xb248
struct{unsigned char r,g,b;} g_palette_unknown4[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x38, 0x30, 0x28 },
	{ 0x30, 0x24, 0x1c },
	{ 0x24, 0x18, 0x10 },
	{ 0x20, 0x14, 0x0c },
	{ 0x18, 0x0c, 0x08 },
	{ 0x14, 0x08, 0x04 },
	{ 0x0c, 0x04, 0x00 },
	{ 0x3c, 0x38, 0x00 },
	{ 0x38, 0x28, 0x00 },
	{ 0x30, 0x1c, 0x00 },
	{ 0x2c, 0x14, 0x00 },
	{ 0x3c, 0x24, 0x00 },
	{ 0x3c, 0x0c, 0x00 },
	{ 0x3c, 0x00, 0x08 },
	{ 0x3c, 0x00, 0x20 },
	{ 0x00, 0x10, 0x00 },
	{ 0x00, 0x14, 0x00 },
	{ 0x00, 0x1c, 0x00 },
	{ 0x04, 0x20, 0x00 },
	{ 0x04, 0x28, 0x00 },
	{ 0x1c, 0x38, 0x3c },
	{ 0x14, 0x2c, 0x34 },
	{ 0x0c, 0x1c, 0x30 },
	{ 0x04, 0x0c, 0x28 },
	{ 0x00, 0x00, 0x24 },
	{ 0x10, 0x10, 0x10 },
	{ 0x14, 0x14, 0x14 },
	{ 0x1c, 0x1c, 0x1c },
	{ 0x24, 0x24, 0x24 },
	{ 0x30, 0x30, 0x30 },
	{ 0x3c, 0x3c, 0x3c }
}; // ds:0xb251
struct{unsigned char r,g,b;} g_palette_general[32] = {
	{ 0x00, 0x00, 0x00 },
	{ 0x00, 0x00, 0x3f },
	{ 0x00, 0x00, 0x24 },
	{ 0x3c, 0x30, 0x28 },
	{ 0x3c, 0x2c, 0x24 },
	{ 0x3c, 0x28, 0x1c },
	{ 0x38, 0x24, 0x18 },
	{ 0x34, 0x20, 0x14 },
	{ 0x30, 0x1c, 0x14 },
	{ 0x28, 0x18, 0x10 },
	{ 0x24, 0x14, 0x0c },
	{ 0x1c, 0x10, 0x0c },
	{ 0x18, 0x0c, 0x08 },
	{ 0x14, 0x0c, 0x08 },
	{ 0x38, 0x38, 0x38 },
	{ 0x30, 0x30, 0x30 },
	{ 0x2c, 0x2c, 0x2c },
	{ 0x28, 0x28, 0x28 },
	{ 0x20, 0x20, 0x20 },
	{ 0x1c, 0x1c, 0x1c },
	{ 0x14, 0x14, 0x14 },
	{ 0x10, 0x10, 0x10 },
	{ 0x00, 0x3f, 0x00 },
	{ 0x00, 0x24, 0x00 },
	{ 0x3c, 0x38, 0x00 },
	{ 0x34, 0x2c, 0x00 },
	{ 0x28, 0x20, 0x00 },
	{ 0x3c, 0x18, 0x10 },
	{ 0x30, 0x10, 0x08 },
	{ 0x24, 0x0c, 0x04 },
	{ 0x10, 0x08, 0x04 },
	{ 0x3c, 0x3c, 0x3c }
}; // ds:0xb2b1
char g_str_backslash_temp[6] = "\\TEMP"; // ds:0xb311
char g_str_not_enough_mem[124] = "\x0a\x0aNot enough memory!\x0a\"Realms of Arkania - Blade of Destiny\" needs %ld Byte more memory!\x0aPlease uninstall resident programs!"; // ds:0xb317
char g_str_drive_x[4] = "X:\\"; // ds:0xb393
char g_str_temp_dir_fail[280] = "\xf2!!!!! ACHTUNG !!!!!\xf0\x40\x40""DAS SCHWARZE AUGE\x40KANN KEIN TEMPOR\x8eRES VERZEICHNIS ANLEGEN UND IST DAHER NICHT LAUFF\x8eHIG. WAHRSCHEINLICH VERSUCHEN SIE, DAS SPIEL AUF EINEM\xf2 SCHREIBGESCH\x9aTZTEN LAUFWERK\xf0\x40ZU STARTEN. BITTE INSTALLIEREN SIE DAS SPIEL AUF EINE FESTPLATTE.\x40\x40-TASTE ZUM BEENDEN-"; // ds:0xb397
char g_all_files_wildcard2[4] = "*.*"; // ds:0xb4af
char g_all_chr_wildcard4[6] = "*.CHR"; // ds:0xb4b3
char g_all_files_wildcard3[4] = "*.*"; // ds:0xb4b9
char g_str_gen_exe[8] = "gen.exe"; // ds:0xb4bd
char g_str_gen_exe2[8] = "gen.exe"; // ds:0xb4c5
char g_str_gen_b[2] = "b"; // ds:0xb4cd
char g_str_gen_a[2] = "a"; // ds:0xb4cf
char g_str_gen_n[2] = "n"; // ds:0xb4d1
char g_str_gen_1[2] = "1"; // ds:0xb4d3
char g_str_gen_generation[11] = "Generation"; // ds:0xb4d5
unsigned char g_unkn_069[9] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xb4e0
signed char g_char_type_table[256] = { 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x21, 0x21, 0x21, 0x21, 0x21, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x40, 0x40, 0x40, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xb4e9
unsigned char g_unkn_070[415] = { 0x00, 0x78, 0x06, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0xb5, 0x00, 0x00, 0x0a, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xb6, 0x00, 0x00, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0xb6, 0x00, 0x00, 0x43, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0xb6, 0x00, 0x00, 0x42, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xb6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00 }; // ds:0xb5e9
unsigned short g_bc_filehandle_flags[600] = { 0x6001, 0x6002, 0x6002, 0xa004, 0xa002, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4000, 0xffff, 0x0000, 0x1300, 0x0202, 0x0504, 0x0806, 0x0808, 0x1514, 0x1305, 0x160e, 0x1105, 0x1e02, 0x2c29, 0x2828, 0x2828, 0x2928, 0x282c, 0x2828, 0x0505, 0x1729, 0x0e17, 0x0e0e, 0x0e0e, 0x0e0e, 0x0e0e, 0x0e0e, 0x0e0e, 0x2c0f, 0x0223, 0x0f2c, 0x282a, 0x2828, 0x1b13, 0x021c, 0x0502, 0x020f, 0x2817, 0x132a, 0x0e2a, 0x0e0e, 0x0e0e, 0x0e0e, 0x0e23, 0x281c, 0x2317, 0x1325, 0x0028, 0x0001, 0x0000, 0x432e, 0x4d4f, 0x2e00, 0x5845, 0x0045, 0x4150, 0x4854, 0x0000, 0x6e28, 0x6c75, 0x296c, 0x0000, 0x1414, 0x1401, 0x1415, 0x1414, 0x0214, 0x1400, 0x0403, 0x0914, 0x0505, 0x0505, 0x0505, 0x0505, 0x1405, 0x1414, 0x1414, 0x1414, 0x1414, 0x1414, 0x170f, 0x080f, 0x1414, 0x0714, 0x1614, 0x1414, 0x1414, 0x1414, 0x1414, 0x0d14, 0x1414, 0x1414, 0x1414, 0x1414, 0x1414, 0x0a10, 0x0f0f, 0x080f, 0x140a, 0x0614, 0x1214, 0x0e0b, 0x1414, 0x1411, 0x140c, 0x0d14, 0x1414, 0x1414, 0x1414, 0x0014, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0100, 0x4300, 0x4d4f, 0x4150, 0x0051, 0x7270, 0x6e69, 0x2074, 0x6373, 0x6e61, 0x2066, 0x203a, 0x6c66, 0x616f, 0x6974, 0x676e, 0x7020, 0x696f, 0x746e, 0x6620, 0x726f, 0x616d, 0x7374, 0x6e20, 0x746f, 0x6c20, 0x6e69, 0x656b, 0x0d64, 0x000a, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb9ae, 0x14fc, 0xb9b6, 0x14fc, 0xb9ce, 0x14fc, 0xb9e8, 0x14fc, 0xb9f7, 0x14fc, 0xba0b, 0x14fc, 0xba1d, 0x14fc, 0xba2d, 0x14fc, 0xba42, 0x14fc, 0xba54, 0x14fc, 0xba71, 0x14fc, 0xba85, 0x14fc, 0xba94, 0x14fc, 0xbaa8, 0x14fc, 0xbab5, 0x14fc, 0xbab6, 0x14fc, 0xbac5, 0x14fc, 0xbaeb, 0x14fc, 0xbafb, 0x14fc, 0xbb09, 0x14fc, 0xbb1a, 0x14fc, 0xbb2b, 0x14fc, 0xbb3d, 0x14fc, 0xbb4f, 0x14fc, 0xbb50, 0x14fc, 0xbb51, 0x14fc, 0xbb52, 0x14fc, 0xbb53, 0x14fc, 0xbb54, 0x14fc, 0xbb55, 0x14fc, 0xbb56, 0x14fc, 0xbb57, 0x14fc, 0xbb58, 0x14fc, 0xbb59, 0x14fc, 0xbb67, 0x14fc, 0xbb78, 0x14fc, 0xbb8c, 0x14fc, 0xbb9e, 0x14fc, 0xbb9f, 0x14fc, 0xbba0, 0x14fc, 0xbba1, 0x14fc, 0xbba2, 0x14fc, 0xbba3, 0x14fc, 0xbba4, 0x14fc, 0xbba5, 0x14fc, 0xbba6, 0x14fc, 0xbba7, 0x14fc, 0xbba8, 0x14fc, 0x0030, 0x7245, 0x6f72, 0x2072, 0x0030, 0x6e49, 0x6176, 0x696c, 0x2064, 0x7566, 0x636e, 0x6974, 0x6e6f, 0x6e20, 0x6d75, 0x6562, 0x0072, 0x6f4e, 0x7320, 0x6375, 0x2068, 0x6966, 0x656c, 0x6f20, 0x2072, 0x6964, 0x6572, 0x7463, 0x726f, 0x0079, 0x6150, 0x6874, 0x6e20, 0x746f, 0x6620, 0x756f, 0x646e, 0x5400, 0x6f6f, 0x6d20, 0x6e61, 0x2079, 0x706f, 0x6e65, 0x6620, 0x6c69, 0x7365, 0x5000, 0x7265, 0x696d, 0x7373, 0x6f69, 0x206e, 0x6564, 0x696e, 0x6465, 0x4200, 0x6461, 0x6620, 0x6c69, 0x2065, 0x756e, 0x626d, 0x7265, 0x4d00, 0x6d65, 0x726f, 0x2079, 0x7261, 0x6e65, 0x2061, 0x7274, 0x7361, 0x6568, 0x0064, 0x6f4e, 0x2074, 0x6e65, 0x756f, 0x6867, 0x6d20, 0x6d65, 0x726f, 0x0079, 0x6e49, 0x6176, 0x696c, 0x2064, 0x656d, 0x6f6d, 0x7972, 0x6220, 0x6f6c, 0x6b63, 0x6120, 0x6464, 0x6572, 0x7373, 0x4900, 0x766e, 0x6c61, 0x6469, 0x6520, 0x766e, 0x7269, 0x6e6f, 0x656d, 0x746e, 0x4900, 0x766e, 0x6c61, 0x6469, 0x6620, 0x726f, 0x616d, 0x0074, 0x6e49, 0x6176, 0x696c, 0x2064, 0x6361, 0x6563, 0x7373, 0x6320, 0x646f, 0x0065, 0x6e49, 0x6176, 0x696c, 0x2064, 0x6164, 0x6174, 0x0000, 0x6f4e, 0x7320, 0x6375, 0x2068, 0x6564, 0x6976, 0x6563, 0x4100, 0x7474, 0x6d65, 0x7470, 0x6465, 0x7420, 0x206f, 0x6572, 0x6f6d, 0x6576, 0x6320, 0x7275, 0x6572, 0x746e, 0x6420, 0x7269, 0x6365, 0x6f74, 0x7972, 0x4e00, 0x746f, 0x7320, 0x6d61, 0x2065, 0x6564, 0x6976, 0x6563, 0x4e00, 0x206f, 0x6f6d, 0x6572, 0x6620, 0x6c69, 0x7365, 0x4900, 0x766e, 0x6c61, 0x6469, 0x6120, 0x6772, 0x6d75, 0x6e65, 0x0074, 0x7241, 0x2067, 0x696c, 0x7473, 0x7420, 0x6f6f, 0x6220, 0x6769, 0x4500, 0x6578, 0x2063, 0x6f66, 0x6d72, 0x7461, 0x6520, 0x7272, 0x726f, 0x4300, 0x6f72, 0x7373, 0x642d, 0x7665, 0x6369, 0x2065, 0x696c, 0x6b6e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4d00, 0x7461, 0x2068, 0x7261, 0x7567, 0x656d, 0x746e, 0x5200, 0x7365, 0x6c75, 0x2074, 0x6f74, 0x206f, 0x616c, 0x6772, 0x0065, 0x6946, 0x656c, 0x6120, 0x726c, 0x6165, 0x7964, 0x6520, 0x6978, 0x7473, 0x0073, 0x6f50, 0x7373, 0x6269, 0x656c, 0x6420, 0x6165, 0x6c64, 0x636f, 0x006b, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5500, 0x6b6e, 0x6f6e, 0x6e77, 0x6520, 0x7272, 0x726f, 0x2500, 0x3a73, 0x2520, 0x0a73, 0x0000, 0x000d, 0x0000, 0x0000, 0x1c1f, 0x1e1f, 0x1e1f, 0x1f1f, 0x1f1e, 0x1f1e, 0x0000, 0x001f, 0x003b, 0x005a, 0x0078, 0x0097, 0x00b5, 0x00d4, 0x00f3, 0x0111, 0x0130, 0x014e, 0x016d, 0xe726, 0x14fc, 0xe722, 0x14fc, 0x4650, 0x0000, 0x0001, 0x5a54, 0x4500, 0x5453, 0x4500, 0x5444, 0x0000, 0x1960, 0x1965, 0x1965, 0x1965, 0x0101, 0x0d29, 0x1112, 0x0200, 0x1029, 0x0000, 0x1000, 0x1881, 0x0000, 0x1000, 0x2b1f, 0x0000, 0x1000, 0x2c64, 0x0000, 0x1e01, 0x462b, 0x0000, 0x0101, 0x0195, 0x1112 }; // ds:0xb788
unsigned long g_cd_audio_pause_pos = 0; // ds:0xbc38
unsigned long g_cd_audio_pause_tod = 0; // ds:0xbc3c
unsigned short g_cd_audio_track = 0; // ds:0xbc40
unsigned char g_unkn_071[8] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xbc42
unsigned long g_cd_audio_tod = 0; // ds:0xbc4a
unsigned long g_cd_audio_pos = 0; // ds:0xbc4e
unsigned short g_cd_drive_no = 0; // ds:0xbc52
unsigned char g_unkn_072[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xbc54
unsigned short g_sample_ad_length = 0; // ds:0xbc5a
struct{signed char u1; signed char u2; unsigned long u3;} g_sample_ad_idx_entry = { 0x00, 0x00, 0x00000000 }; // ds:0xbc5c
unsigned char g_playmask_us = 0; // ds:0xbc62, 1 = PLAYM_US, 0 = PLAYM_UK
char g_gfxbuf_wait_keypress[100] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; // ds:0xbc63
long g_splash_ae; // ds:0xbcc7
long g_splash_le; // ds:0xbccb
signed char g_hero_splash_timer[7]; // ds:0xbccf
unsigned short g_spinlock_flag; // ds:0xbcd6
unsigned short g_map_townmark_state; // ds:0xbcd8
unsigned char g_freeze_timers; // ds:0xbcda
unsigned long g_mouse_handler_bak; // ds:0xbcdb
unsigned long g_archive_file_offset; // ds:0xbcdf, start offset in SCHICK.DAT
unsigned long g_archive_file_remaining; // ds:0xbce3, flen - off
unsigned long g_archive_file_length; // ds:0xbce7
void *g_ail_digi_driver_buf2; // ds:0xbceb, to buffer of size 5016
void *g_ail_voc_buffer; // ds:0xbcef
void *g_ail_digi_driver_buf; // ds:0xbcf3
void *g_ail_digi_driver_descr; // ds:0xbcf7
signed short g_ail_digi_driver_id; // ds:0xbcfb
unsigned short g_use_cdaudio_flag; // ds:0xbcfd
unsigned short g_load_sound_driver; // ds:0xbcff
signed short g_sample_ad_handle; // ds:0xbd01
unsigned short g_ail_timbre_cache_size; // ds:0xbd03
unsigned long g_ail_state_table_size; // ds:0xbd05
void *g_ail_music_driver_buf2; // ds:0xbd09
void *g_ail_midi_buffer; // ds:0xbd0d
void *g_ail_timbre_cache; // ds:0xbd11
void *g_ail_state_table; // ds:0xbd15
void *g_ail_music_driver_buf; // ds:0xbd19
void *g_ail_music_driver_descr; // ds:0xbd1d
signed short g_ail_sequence; // ds:0xbd21
signed short g_ail_music_driver_id; // ds:0xbd23
unsigned short g_pregame_state; // ds:0xbd25
unsigned char g_citycamp_city; // ds:0xbd27, {0 = camp in dungeon, 1}
void *g_current_fight; // ds:0xbd28
long g_scenario_buf; // ds:0xbd2c
void *g_fightobj_buf; // ds:0xbd30
long g_heroes; // ds:0xbd34
signed char g_new_menu_icons[9]; // ds:0xbd38
unsigned char g_unkn_073[12] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xbd41
unsigned char g_steptarget_front; // ds:0xbd4d
unsigned char g_steptarget_back; // ds:0xbd4e
unsigned char g_direction_unkn; // ds:0xbd4f, writeonly (1)
signed char g_visual_fields_tex[29]; // ds:0xbd50
unsigned char g_unkn_074[1] = { 0x00 }; // ds:0xbd6d
unsigned char g_visual_field_vals[29]; // ds:0xbd6e
unsigned char g_unkn_075[1] = { 0x00 }; // ds:0xbd8b
void *g_ems_unused_tab; // ds:0xbd8c
unsigned short g_ems_travel_map; // ds:0xbd90
unsigned short g_ems_unused_handle; // ds:0xbd92
unsigned char g_dng_map_size; // ds:0xbd94
unsigned char g_dng_map[512]; // ds:0xbd95
void *g_radio_name_list[15]; // ds:0xbf95, used for items, heroes, spells, skills, recipes
unsigned char g_unkn_076[40] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xbfd1
void *g_gui_buffer_unkn; // ds:0xbff9
signed short g_textbox_width; // ds:0xbffd
signed short g_textbox_pos_x; // ds:0xbfff, coordinate of upper left corner
signed short g_textbox_pos_y; // ds:0xc001, coordinate of upper left corner
signed short g_game_mode; // ds:0xc003, {-1 = Input error, 1 = Beginner, 2 = Advanced }
void *g_sellitems; // ds:0xc005, also used for repair items
void *g_buyitems; // ds:0xc009, merchant's assortment
void *g_pic_copy_dst; // ds:0xc00d
signed short g_pic_copy_x1; // ds:0xc011
signed short g_pic_copy_y1; // ds:0xc013
signed short g_pic_copy_x2; // ds:0xc015
signed short g_pic_copy_y2; // ds:0xc017
void *g_pic_copy_src; // ds:0xc019
unsigned short g_pic_copy_v1; // ds:0xc01d
unsigned short g_pic_copy_v2; // ds:0xc01f
unsigned short g_pic_copy_v3; // ds:0xc021
unsigned short g_pic_copy_v4; // ds:0xc023
struct{short pos; char loc, type; short id;} g_locations_tab[150]; // ds:0xc025
void *g_buffer8_ptr; // ds:0xc3a9, to buffer of size 12008
void *g_tx2_index; // ds:0xc3ad, to index table of secondary text file
void *g_tx_index; // ds:0xc3b1, to index table of primary text file
void *g_text_ltx_index; // ds:0xc3b5, to index table of TEXT.LTX
unsigned char g_unkn_077[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xc3b9
signed short g_random_schick_seed2; // ds:0xc3bf
signed short g_game_state; // ds:0xc3c1, see enum GAME_STATE_*
unsigned char g_unkn_078[2] = { 0x00, 0x00 }; // ds:0xc3c3
unsigned short g_bioskey_event10; // ds:0xc3c5
unsigned short g_have_mouse; // ds:0xc3c7
unsigned short g_unused_spinlock_flag; // ds:0xc3c9
unsigned short g_update_statusline; // ds:0xc3cb
unsigned char g_unkn_079[2] = { 0x00, 0x00 }; // ds:0xc3cd
unsigned short g_mouse1_doubleclick; // ds:0xc3cf
unsigned short g_mouse1_event1; // ds:0xc3d1
unsigned short g_mouse2_event; // ds:0xc3d3
unsigned short g_mouse1_event2; // ds:0xc3d5
unsigned short g_bioskey_event; // ds:0xc3d7
unsigned short g_action; // ds:0xc3d9
void *g_buffer9_ptr; // ds:0xc3db, to buffer of size 180000 (or 203000 if LARGE_BUF), used for NVF
unsigned char g_unkn_080[8] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xc3df
unsigned short g_ani_width; // ds:0xc3e7
unsigned short g_ani_unknown1; // ds:0xc3e9
unsigned short g_ani_unknown2; // ds:0xc3eb
unsigned char g_ani_height; // ds:0xc3ed
unsigned char g_ani_areacount; // ds:0xc3ee
struct{unsigned char unkn[263];} g_ani_area_table[10]; // ds:0xc3ef
void *g_ani_main_ptr; // ds:0xce35
unsigned char g_ani_compr_flag; // ds:0xce39, {0,1 = compressed}
unsigned char g_ani_palette_size; // ds:0xce3a
void *g_ani_palette; // ds:0xce3b
signed short g_ani_posy; // ds:0xce3f
signed short g_ani_posx; // ds:0xce41
unsigned long g_ani_unknown4; // ds:0xce43, writeonly (0)
unsigned char g_unkn_081[64] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xce47
unsigned char g_gui_text_buffer[64]; // ds:0xce87
void *g_last_cursor; // ds:0xcec7
void *g_current_cursor; // ds:0xcecb
struct{char unkn[32]; unsigned short mask[16];} g_ggst_cursor; // ds:0xcecf
unsigned char g_mouse_bg_bak[256]; // ds:0xcf0f
unsigned short g_dng_init_flag; // ds:0xd00f
unsigned short g_dng_extra_action; // ds:0xd011, {0 = warehouse,1 = open door,2 = open chest,3 = close door,4 = lever,5 = smash door}
unsigned short g_redraw_menuicons; // ds:0xd013
void *g_buffer9_ptr2; // ds:0xd015, copy of BUFFER9_PTR
void *g_buffer9_ptr3; // ds:0xd019, copy of BUFFER9_PTR
unsigned long g_buffer_monster_tab[36]; // ds:0xd01d
unsigned long g_buffer_wfigs_tab[43]; // ds:0xd0ad
unsigned long g_buffer_mfigs_tab[43]; // ds:0xd159
unsigned long g_buffer_anis_tab[37]; // ds:0xd205
void *g_trv_track_pixel_bak; // ds:0xd299, to buffer of size 500
void *g_fig_star_gfx; // ds:0xd29d
void *g_monnames_buffer; // ds:0xd2a1
void *g_buffer5_ptr; // ds:0xd2a5, to buffer of size 3880
void *g_buffer10_ptr; // ds:0xd2a9, to buffer of size 16771, used for NVF and text
void *g_popup; // ds:0xd2ad
void *g_buffer6_ptr; // ds:0xd2b1, to buffer of size 2200, used for NVF
void *g_buffer7_ptr; // ds:0xd2b5, to buffer of size 10000, used for NVF and text
void *g_text_ltx_buffer; // ds:0xd2b9, to buffer of size 30500
void *g_splash_buffer; // ds:0xd2bd, to buffer of size 1000, used for Splashes
void *g_buf_font6; // ds:0xd2c1
short g_textcolor; // ds:0xd2c5
short g_textcolor_bg; // ds:0xd2c7
short g_textcolor_fg; // ds:0xd2c9
unsigned short g_init_color1; // ds:0xd2cb, writeonly (0xc8)
unsigned short g_init_color2; // ds:0xd2cd, writeonly (0xc9)
unsigned short g_init_color3; // ds:0xd2cf, writeonly (0xca)
signed short g_gui_text_centered; // ds:0xd2d1
unsigned short g_textline_unknown; // ds:0xd2d3, writeonly (103)
unsigned short g_textline_maxlen; // ds:0xd2d5
unsigned short g_textline_posy; // ds:0xd2d7
unsigned short g_textline_posx; // ds:0xd2d9
void *g_fig_figure2_buf; // ds:0xd2db, to buffer of size 20000
void *g_fig_figure1_buf; // ds:0xd2df
void *g_objects_nvf_buf; // ds:0xd2e3, to buffer of size 3400
void *g_buf_icon; // ds:0xd2e7
void *g_text_output_buf; // ds:0xd2eb, to buffer of size 300
void *g_text_input_buf; // ds:0xd2ef, to buffer of size 24
long g_dtp2; // ds:0xd2f3
void *g_icon; // ds:0xd2f7
void *g_print_string_buffer; // ds:0xd2fb
void *g_framebuf_ptr; // ds:0xd2ff
void *g_renderbuf_ptr; // ds:0xd303, to buffer of size 65000
unsigned char g_unkn_082[2] = { 0x00, 0x00 }; // ds:0xd307
unsigned short g_gameinit_flag; // ds:0xd309, writeonly (1)
signed short g_video_page_bak; // ds:0xd30b
signed short g_video_mode_bak; // ds:0xd30d
unsigned char g_unkn_083[4] = { 0x00, 0x00, 0x00, 0x00 }; // ds:0xd30f
signed short g_txt_tabpos1; // ds:0xd313
signed short g_txt_tabpos2; // ds:0xd315
signed short g_txt_tabpos3; // ds:0xd317
signed short g_txt_tabpos4; // ds:0xd319
signed short g_txt_tabpos5; // ds:0xd31b
signed short g_txt_tabpos6; // ds:0xd31d
signed short g_txt_tabpos7; // ds:0xd31f
void *g_townpal_buf; // ds:0xd321
signed short g_fig_flee_position[4]; // ds:0xd325, see HERO_ESCAPE_POSITION
signed short g_wildcamp_sleep_quality; // ds:0xd32d
signed short g_gather_herbs_mod; // ds:0xd32f
signed short g_replenish_stocks_mod; // ds:0xd331
struct{signed short type, damage;} g_fig_msg_data[6]; // ds:0xd333
struct{unsigned char unkn[62];} g_enemy_sheets[20]; // ds:0xd34b, struct enemy[20]
signed char g_fig_move_pathdir[10]; // ds:0xd823
signed char g_fig_actors_unkn[30]; // ds:0xd82d, see FIG_ACTION_UNKNOWN2
signed char g_hero_is_target[7]; // ds:0xd84b
void *g_chessboard; // ds:0xd852
void *g_fig_spellgfx_buf; // ds:0xd856
void *g_fig_shot_bolt_buf; // ds:0xd85a
void *g_fig_cb_selector_buf; // ds:0xd85e
void *g_fig_cb_marker_buf; // ds:0xd862
void *g_spellobj_nvf_buf; // ds:0xd866, to buffer of size 0xf5f
void *g_weapons_nvf_buf; // ds:0xd86a, to buffer of size 0x1953
void *g_fightobj_buf_seek_ptr; // ds:0xd86e, points to end of FIGHTOBJ buffer
short g_nr_of_enemies; // ds:0xd872, ?
unsigned char g_fightobj_list[90]; // ds:0xd874
struct{unsigned char unkn[243];} g_fig_anisheets[8]; // ds:0xd8ce
struct{unsigned char unkn[35];} g_fig_list_elem; // ds:0xe066
unsigned char g_fig_list_array[127]; // ds:0xe089
void *g_fig_list_head; // ds:0xe108, to a list
unsigned char g_location_market_flag; // ds:0xe10c
unsigned short g_wallclock_redraw; // ds:0xe10d
short g_wallclock_y; // ds:0xe10f
short g_wallclock_x; // ds:0xe111
unsigned short g_wallclock_update; // ds:0xe113, 0 = don't update the wallclock
long g_mem_slots_mon; // ds:0xe115
long g_mem_slots_wfig; // ds:0xe119
long g_mem_slots_mfig; // ds:0xe11d
unsigned long g_mem_slots_anis; // ds:0xe121, to ()[36]
void *g_monster_dat_buf; // ds:0xe125
void *g_monnames_index; // ds:0xe129
signed char g_market_itemsaldo_table[254]; // ds:0xe12d
long g_itemsdat; // ds:0xe22b
long g_itemsname; // ds:0xe22f
unsigned char g_unkn_084[1] = { 0x00 }; // ds:0xe233
signed long g_gfx_spinlock; // ds:0xe234
signed short g_ani_change_dir[10]; // ds:0xe238
signed short g_ani_area_status[10]; // ds:0xe24c
signed short g_ani_area_timeout[10]; // ds:0xe260
void *g_bc_timer; // ds:0xe274
void *g_fig_gfxbuffers[8]; // ds:0xe278, 0x508 byte segments in FIGHTOBJ_BUF
signed short g_fig_figlist_readd[8]; // ds:0xe298
unsigned short g_fig_ani_state[8]; // ds:0xe2a8
unsigned short g_fig_actor_grammar_type; // ds:0xe2b8, 2 = hero, 1 = monster
unsigned short g_fig_actor_grammar_id; // ds:0xe2ba
unsigned short g_fig_target_grammar_type; // ds:0xe2bc, 2 = hero, 1 = monster
unsigned short g_fig_target_grammar_id; // ds:0xe2be
unsigned short g_figobj_unkn_y1; // ds:0xe2c0
unsigned short g_figobj_unkn_y1_bak; // ds:0xe2c2
unsigned short g_figobj_unkn_x1; // ds:0xe2c4
unsigned short g_figobj_unkn_x1_bak; // ds:0xe2c6
unsigned short g_figobj_unkn_y2; // ds:0xe2c8
unsigned short g_figobj_unkn_y2_bak; // ds:0xe2ca
unsigned short g_figobj_unkn_x2; // ds:0xe2cc
unsigned short g_figobj_unkn_x2_bak; // ds:0xe2ce
unsigned short g_delay_timer; // ds:0xe2d0
void *g_saved_files_buf; // ds:0xe2d2
signed long g_last_save_time; // ds:0xe2d6
char g_savegame_names[45]; // ds:0xe2da
unsigned char g_unkn_085[1] = { 0x00 }; // ds:0xe307
void *g_dialog_title; // ds:0xe308
signed short g_dialog_informer; // ds:0xe30c
signed short g_dialog_next_state; // ds:0xe30e
signed short g_dialog_done; // ds:0xe310
signed short g_dialog_state; // ds:0xe312
signed short g_tlk_id; // ds:0xe314
unsigned short g_current_fig_no; // ds:0xe316
signed short g_autofight; // ds:0xe318
signed short g_fig_dropped_weapons[30]; // ds:0xe31a
void *g_chessboard_cpy; // ds:0xe356
signed char g_fig_twofielded_table[21]; // ds:0xe35a
signed char g_fig_twofielded_count; // ds:0xe36f
signed long g_fightobj_buf_freespace; // ds:0xe370
void *g_buffer_weapanidat; // ds:0xe374, pointer to WEAPANI.DAT
void *g_buffer_anidat; // ds:0xe378, pointer to ANI.DAT buffer
void *g_fig_list_buffer; // ds:0xe37c, to buffer of size 4445, initial value of FIG_LIST_HEAD
void *g_figobj_gfxheight_table; // ds:0xe380, to signed short[63]
void *g_figobj_gfxwidth_table; // ds:0xe384, to signed short[63]
void *g_figobj_gfxbuf_table; // ds:0xe388, to long[63]; RealPt
unsigned char g_fig_spellgfx_id; // ds:0xe38c
unsigned char g_fig_shot_bolt_id; // ds:0xe38d
unsigned char g_fig_cb_makrer_id; // ds:0xe38e
unsigned char g_fig_cb_selector_id[20]; // ds:0xe38f
unsigned char g_unkn_086[1] = { 0x00 }; // ds:0xe3a3
signed short g_spell_illusionen; // ds:0xe3a4, 1 = spell has effect
signed short g_defender_dead; // ds:0xe3a6
signed short g_attacker_dead; // ds:0xe3a8
unsigned short g_defender_attacks; // ds:0xe3aa
unsigned short g_attacker_attacks_again; // ds:0xe3ac
void *g_current_cursor_bak; // ds:0xe3ae
void *g_inc_spells_counter; // ds:0xe3b2
void *g_inc_skills_counter; // ds:0xe3b6
void *g_skills_buffer; // ds:0xe3ba
signed char g_wildcamp_guards[3]; // ds:0xe3be
signed char g_wildcamp_herbstatus[7]; // ds:0xe3c1
signed char g_wildcamp_replstatus[7]; // ds:0xe3c8
signed char g_wildcamp_magicstatus[7]; // ds:0xe3cf
signed char g_wildcamp_guardstatus[7]; // ds:0xe3d6
unsigned char g_unkn_087[1] = { 0x00 }; // ds:0xe3dd
signed char g_citycamp_guards[3]; // ds:0xe3de
signed char g_citycamp_magicstatus[7]; // ds:0xe3e1
signed char g_citycamp_guardstatus[7]; // ds:0xe3e8
unsigned char g_unkn_088[1] = { 0x00 }; // ds:0xe3ef
signed char g_booked_inn_days; // ds:0xe3f0
signed char g_sleep_quality; // ds:0xe3f1
void *g_buy_shopping_cart; // ds:0xe3f2, to buffer of size 250, each item has 4 bytes
signed short g_price_modificator; // ds:0xe3f6, price modificator for smith and sell
signed short g_temple_god; // ds:0xe3f8, id of current temple's god
unsigned char g_sea_travel_sleep_quality; // ds:0xe3fa
unsigned char g_unkn_089[1] = { 0x00 }; // ds:0xe3fb
void *g_buffer9_ptr4; // ds:0xe3fc, copy of BUFFER9_PTR
unsigned char g_city_house_count[4]; // ds:0xe400, counts of the four different kinds of houses on the current map
void *g_buffer11_ptr; // ds:0xe404, to buffer of size 192, used for palettes
signed short g_city_refresh_direction; // ds:0xe408
signed short g_city_refresh_y_target; // ds:0xe40a
signed short g_city_refresh_x_target; // ds:0xe40c
unsigned short g_always_zero1; // ds:0xe40e, writeonly (0)
unsigned short g_always_zero2; // ds:0xe410, writeonly (0)
signed short g_entrance_angle; // ds:0xe412
void *g_tex_floor; // ds:0xe414
void *g_tex_sky; // ds:0xe418
void *g_tex_house1; // ds:0xe41c
void *g_tex_house2; // ds:0xe420
void *g_tex_house3; // ds:0xe424
void *g_tex_house4; // ds:0xe428
signed short g_combo_mode; // ds:0xe42c
char g_str_beorn_hjall[20]; // ds:0xe42e
unsigned char g_automap_buf[64]; // ds:0xe442
unsigned short g_dng_refresh_direction; // ds:0xe482
unsigned short g_dng_refresh_y_target; // ds:0xe484
unsigned short g_dng_refresh_x_target; // ds:0xe486
void *g_dng_map_ptr; // ds:0xe488, to DNG_MAP
unsigned char g_dng_floor_tex; // ds:0xe48c, , changing every timestep
void *g_dng_gfxtab; // ds:0xe48d, to GFXTAB(_SHIPS|_STONES|_MARBLES)
unsigned char g_unkn_090[1] = { 0x00 }; // ds:0xe491
signed short g_lockpick_try_counter; // ds:0xe492, {0..4}
void *g_dungeon_fights_buf; // ds:0xe494, to buffer of size 630
void *g_dungeon_stairs_buf; // ds:0xe498, to buffer of size 80
void *g_dungeon_doors_buf; // ds:0xe49c, to buffer of size 225
signed short g_get_extra_loot; // ds:0xe4a0
unsigned char g_route59_flag; // ds:0xe4a2, {0, 1 = from Kravik, 2 = from Peilinen, 3 = from Skelellen, 4 = from Rovamund}
unsigned short g_trv_menu_selection; // ds:0xe4a3
unsigned short g_current_town_over; // ds:0xe4a5
unsigned short g_current_town_overy; // ds:0xe4a7
unsigned short g_current_town_overx; // ds:0xe4a9
unsigned short g_selected_town_aniy; // ds:0xe4ab
unsigned short g_selected_town_anix; // ds:0xe4ad
unsigned short g_current_town_aniy; // ds:0xe4af
unsigned short g_current_town_anix; // ds:0xe4b1
unsigned char g_unkn_091[1] = { 0x00 }; // ds:0xe4b3
unsigned char g_trv_detour_pixel_bak[20]; // ds:0xe4b4
unsigned char g_good_camp_place; // ds:0xe4c8
unsigned char g_route_tevent_flags[15]; // ds:0xe4c9
unsigned char g_gui_print_char; // ds:0xe4d8
unsigned short g_dialogbox_indent_height; // ds:0xe4d9
signed short g_dialogbox_indent_width; // ds:0xe4db
unsigned char g_unkn_092[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }; // ds:0xe4dd
char g_grammar_bufs[201]; // ds:0xe4e3
unsigned short g_menu_default_select; // ds:0xe5ac
unsigned short g_menu_input_busy; // ds:0xe5ae
unsigned short g_menu_selected; // ds:0xe5b0
signed short g_spelltest_result; // ds:0xe5b2
void *g_spelltarget_e; // ds:0xe5b4, Pointer to enemy
long g_spelltarget; // ds:0xe5b8
long g_spelluser; // ds:0xe5bc
long g_spelluser_e; // ds:0xe5c0
short g_alchemy_missing_item; // ds:0xe5c4
void *g_used_item_desc; // ds:0xe5c6, pointer to the item description
signed short g_used_item_id; // ds:0xe5ca, used_item ID
signed short g_used_item_pos; // ds:0xe5cc, used_item position
void *g_itemuser; // ds:0xe5ce, pointer to hero
unsigned char g_event_ani_busy; // ds:0xe5d2
unsigned short g_wallclock_update_bak; // ds:0xe5d3
unsigned short g_textbox_width_bak; // ds:0xe5d5
unsigned short g_basepos_y_bak; // ds:0xe5d7
unsigned short g_basepos_x_bak; // ds:0xe5d9
unsigned char g_unkn_093[1] = { 0x00 }; // ds:0xe5db
unsigned long g_buffersize; // ds:0xe5dc, size of the global buffer
void *g_global_buffer_ptr; // ds:0xe5e0, points to the start of the global buffer
signed char g_large_buf; // ds:0xe5e4

#if !defined(__BORLANDC__)
}
#endif
